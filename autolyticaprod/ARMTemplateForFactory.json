{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "autolyticaprod"
		},
		"AutolyticaBlobProd_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'AutolyticaBlobProd'"
		},
		"AutolyticaBlobStorage_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'AutolyticaBlobStorage'"
		},
		"Autolyticaftp_password": {
			"type": "secureString",
			"metadata": "Secure string for 'password' of 'Autolyticaftp'"
		},
		"RTCDatabase_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'RTCDatabase'"
		},
		"RTCVHC_password": {
			"type": "secureString",
			"metadata": "Secure string for 'password' of 'RTCVHC'"
		},
		"VHCHeadersCSV_password": {
			"type": "secureString",
			"metadata": "Secure string for 'password' of 'VHCHeadersCSV'"
		},
		"VHCHeadersCSVFile_password": {
			"type": "secureString",
			"metadata": "Secure string for 'password' of 'VHCHeadersCSVFile'"
		},
		"VehicleStockCSV_password": {
			"type": "secureString",
			"metadata": "Secure string for 'password' of 'VehicleStockCSV'"
		},
		"autolytica_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'autolytica'"
		},
		"enquiryMAX_password": {
			"type": "secureString",
			"metadata": "Secure string for 'password' of 'enquiryMAX'"
		},
		"AutolyticaKeyVault_properties_typeProperties_baseUrl": {
			"type": "string",
			"defaultValue": "https://autolytica.vault.azure.net/"
		},
		"Autolyticaftp_properties_typeProperties_host": {
			"type": "string",
			"defaultValue": "autolytica.exavault.com"
		},
		"Autolyticaftp_properties_typeProperties_userName": {
			"type": "string",
			"defaultValue": "autolytica"
		},
		"RTCVHC_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://oloi-my.sharepoint.com/personal/johnlaw_oloi_co_uk/Data%20Sources/Partners/RTC/VHCHeadersE.csv"
		},
		"RTCVHC_properties_typeProperties_userName": {
			"type": "string",
			"defaultValue": "johnlaw@oloi.co.uk"
		},
		"VHCHeadersCSV_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://oloi-my.sharepoint.com/personal/johnlaw_oloi_co_uk/Data Sources/Partners/RTC/VHCHeadersE.csv"
		},
		"VHCHeadersCSV_properties_typeProperties_userName": {
			"type": "string",
			"defaultValue": "johnlaw@oloi.co.uk"
		},
		"VHCHeadersCSVFile_properties_typeProperties_host": {
			"type": "string",
			"defaultValue": "https://oloi-my.sharepoint.com/personal/johnlaw_oloi_co_uk"
		},
		"VHCHeadersCSVFile_properties_typeProperties_userId": {
			"type": "string",
			"defaultValue": "johnlaw@oloi.co.uk"
		},
		"VehicleStockCSV_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://oloi-my.sharepoint.com/personal/johnlaw_oloi_co_uk/Data Sources/Vehicle Stock/10000 - Used Car Stock.csv"
		},
		"VehicleStockCSV_properties_typeProperties_userName": {
			"type": "string",
			"defaultValue": "johnlaw@oloi.co.uk"
		},
		"enquiryMAX_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://oloi-my.sharepoint.com/personal/johnlaw_oloi_co_uk/Data%20Sources/Partners/enquiryMAX"
		},
		"enquiryMAX_properties_typeProperties_userName": {
			"type": "string",
			"defaultValue": "system@autolytica.co.uk"
		},
		"PeterVardySOBI1CreatedInBlobStorage_properties_typeProperties_scope": {
			"type": "string",
			"defaultValue": "/subscriptions/31e56c5a-448d-4ff8-90db-c2fa4ad36a95/resourceGroups/Autolytica/providers/Microsoft.Storage/storageAccounts/autolyticastorage"
		},
		"trigger1PeterVardySOBI2CreatedInBlobStorage_properties_typeProperties_scope": {
			"type": "string",
			"defaultValue": "/subscriptions/31e56c5a-448d-4ff8-90db-c2fa4ad36a95/resourceGroups/Autolytica/providers/Microsoft.Storage/storageAccounts/autolyticastorage"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/AutotraderImport-JSON')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "AutotraderJSONDataFlow",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "AutotraderJSONDataFlow",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"AutotraderJSON": {},
									"SQLAutotraderLocalRetailerRatings": {},
									"SQLAutotraderAdverts": {},
									"SQLAutotraderValuations": {},
									"SQLAutotraderMarketSupply": {},
									"SQLAutotraderCompetitors": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"annotations": [],
				"lastPublishTime": "2021-01-01T22:04:37Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/AutotraderJSONDataFlow')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AutotraderImport-JSONExtended')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "AutotraderJSONDataFlowExtended",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "AutotraderJSONDataFlowExtended",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"AutotraderJSON": {},
									"SQLAutotraderLocalRetailerRatings": {},
									"SQLAutotraderAdverts": {},
									"SQLAutotraderValuations": {},
									"SQLAutotraderMarketSupply": {},
									"SQLAutotraderCompetitors": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"annotations": [],
				"lastPublishTime": "2021-06-15T19:53:18Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/AutotraderJSONDataFlowExtended')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AutotraderImport')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "CopyAutotraderCompetitors",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert"
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "AdvertURL",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "AdvertURL",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "AttentionGrabber",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "AttentionGrabber",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Bodystyle",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Bodystyle",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Colour",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Colour",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "CompetitorReg",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "CompetitorReg",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Date",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Date",
											"type": "DateTime",
											"physicalType": "datetime2"
										}
									},
									{
										"source": {
											"name": "DaysinStock",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "DaysinStock",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "Derivative",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Derivative",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Fuel",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Fuel",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Id",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Id",
											"type": "Int64",
											"physicalType": "bigint"
										}
									},
									{
										"source": {
											"name": "MainImage",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "MainImage",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Make",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Make",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Mileage",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Mileage",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "Model",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Model",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Owners",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Owners",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "Plate",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Plate",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "Price",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Price",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 2,
											"precision": 18
										}
									},
									{
										"source": {
											"name": "PriceIndicator",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "PriceIndicator",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "PricePosition",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "PricePosition",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 2,
											"precision": 18
										}
									},
									{
										"source": {
											"name": "Reg No",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Reg_No",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "SellerName",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "SellerName",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "SellerSegment",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "SellerSegment",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "SellerTown",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "SellerTown",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "StockNumber",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "StockNumber",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "TaxRate",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "TaxRate",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "Transmission",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Transmission",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Year",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Year",
											"type": "Int32",
											"physicalType": "int"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false,
									"dateTimeFormat": "yyyy-MM-dd"
								}
							}
						},
						"inputs": [
							{
								"referenceName": "AutotraderCompetitorsCSV",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "SQLAutotraderCompetitors",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "CopyAutotraderLocalRetailerRatings",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert"
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "Date",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Date",
											"type": "DateTime",
											"physicalType": "datetime2"
										}
									},
									{
										"source": {
											"name": "DealerID",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "DealerID",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "DealerName",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "DealerName",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "ID",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "ID",
											"type": "Int64",
											"physicalType": "bigint"
										}
									},
									{
										"source": {
											"name": "LocalRating",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "LocalRating",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "Reg No",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Reg_No",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "StockNumber",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "StockNumber",
											"type": "Int32",
											"physicalType": "int"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "AutotraderLocalRetailerRatingsCSV",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "SQLAutotraderLocalRetailerRatings",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "CopyAutotraderMarketSupply",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert"
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "BuyerDemand",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "BuyerDemand",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "Date",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Date",
											"type": "DateTime",
											"physicalType": "datetime2"
										}
									},
									{
										"source": {
											"name": "ID",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "ID",
											"type": "Int64",
											"physicalType": "bigint"
										}
									},
									{
										"source": {
											"name": "LiveMarketCondition",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "LiveMarketCondition",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "MarketSupply",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "MarketSupply",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "RegNo",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "RegNo",
											"type": "String",
											"physicalType": "varchar"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false,
									"dateTimeFormat": "yyyy-MM-dd"
								}
							}
						},
						"inputs": [
							{
								"referenceName": "AutotraderMarketSupplyCSV",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "SQLAutotraderMarketSupply",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "CopyAutotraderValuations",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert"
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "AdjustedPartExchange",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "AdjustedPartExchange",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 2,
											"precision": 18
										}
									},
									{
										"source": {
											"name": "AdjustedRetail",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "AdjustedRetail",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 2,
											"precision": 18
										}
									},
									{
										"source": {
											"name": "AdjustedTrade",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "AdjustedTrade",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 2,
											"precision": 18
										}
									},
									{
										"source": {
											"name": "Date",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Date",
											"type": "DateTime",
											"physicalType": "datetime2"
										}
									},
									{
										"source": {
											"name": "ID",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "ID",
											"type": "Int64",
											"physicalType": "bigint"
										}
									},
									{
										"source": {
											"name": "Part Exchange",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Part_Exchange",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 2,
											"precision": 18
										}
									},
									{
										"source": {
											"name": "Price Indicator",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Price_Indicator",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "RegNo",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "RegNo",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Retail",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Retail",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 2,
											"precision": 18
										}
									},
									{
										"source": {
											"name": "StockNumber",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "StockNumber",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "Trade",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Trade",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 2,
											"precision": 18
										}
									},
									{
										"source": {
											"name": "Valuation Type",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Valuation_Type",
											"type": "String",
											"physicalType": "varchar"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false,
									"dateTimeFormat": "yyyy-MM-dd"
								}
							}
						},
						"inputs": [
							{
								"referenceName": "AutotraderValuationsCSV",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "SQLAutotraderValuations",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"annotations": [],
				"lastPublishTime": "2021-01-01T21:14:40Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/AutotraderCompetitorsCSV')]",
				"[concat(variables('factoryId'), '/datasets/SQLAutotraderCompetitors')]",
				"[concat(variables('factoryId'), '/datasets/AutotraderLocalRetailerRatingsCSV')]",
				"[concat(variables('factoryId'), '/datasets/SQLAutotraderLocalRetailerRatings')]",
				"[concat(variables('factoryId'), '/datasets/AutotraderMarketSupplyCSV')]",
				"[concat(variables('factoryId'), '/datasets/SQLAutotraderMarketSupply')]",
				"[concat(variables('factoryId'), '/datasets/AutotraderValuationsCSV')]",
				"[concat(variables('factoryId'), '/datasets/SQLAutotraderValuations')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AutotraderStockManagement')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "StockManagement",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "AutotraderStockManagementJSONDataFlow",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"StockMgmt": {},
									"SQLAutotraderCompetitors": {},
									"SQLAutotraderLocalRetailerRatings": {},
									"SQLAutotraderMarketSupply": {},
									"SQLAutotraderValuations": {},
									"SQLAutotraderAdvert": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"annotations": [],
				"lastPublishTime": "2021-07-08T16:13:23Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/AutotraderStockManagementJSONDataFlow')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Clocking')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "CopyDataToSQL",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"additionalColumns": [
									{
										"name": "ClientID",
										"value": "10000"
									}
								],
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"preCopyScript": "delete from dbo.clocking where clientid = 10000",
								"writeBehavior": "insert",
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "ClientID",
											"type": "String"
										},
										"sink": {
											"name": "ClientID",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "ClockingSeqNo",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "ClockingSeqNo",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "DealerName",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "DealerName",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "EmployeeName",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "EmployeeName",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "EmployeeType",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "EmployeeType",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "BookingNumber",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "BookingNumber",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "RegistrationNumber",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "RegistrationNumber",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Action",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Action",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "DateTimeOn",
											"type": "DateTime",
											"physicalType": "String"
										},
										"sink": {
											"name": "DateTimeOn",
											"type": "DateTime",
											"physicalType": "datetime2"
										}
									},
									{
										"source": {
											"name": "DateTimeOff",
											"type": "DateTime",
											"physicalType": "String"
										},
										"sink": {
											"name": "DateTimeOff",
											"type": "DateTime",
											"physicalType": "datetime2"
										}
									},
									{
										"source": {
											"name": "AdjElapsed",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "AdjElapsed",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Allowed",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Allowed",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "WorkType",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "WorkType",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "SaleType",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "SaleType",
											"type": "String",
											"physicalType": "nvarchar"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false,
									"dateTimeFormat": "dd/MM/yyyy HH:mm:ss"
								}
							}
						},
						"inputs": [
							{
								"referenceName": "PeterVardyClockingCSV",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "SQLClocking",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "EmployeeMasterMerge",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "CopyDataToSQL",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[DoReferenceTableUpdate]",
							"storedProcedureParameters": {
								"SourceSystemID": {
									"value": "1",
									"type": "Int32"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "autolytica",
							"type": "LinkedServiceReference"
						}
					}
				],
				"annotations": [],
				"lastPublishTime": "2021-06-09T21:28:58Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/PeterVardyClockingCSV')]",
				"[concat(variables('factoryId'), '/datasets/SQLClocking')]",
				"[concat(variables('factoryId'), '/linkedServices/autolytica')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/CloseITSalesLeads')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "CloseITSalesLeads",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "CloseITSalesLeads",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"CloseITExtSalesLeads": {},
									"SQLCloseITRawSalesLeads": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					},
					{
						"name": "DoReferenceTableUpdate",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "TidyUpCloseITRawSalesLeads",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[DoReferenceTableUpdate]",
							"storedProcedureParameters": {
								"SourceSystemID": {
									"value": "2",
									"type": "Int64"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "autolytica",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "TidyUpCloseITRawSalesLeads",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "CloseITSalesLeads",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[TidyUpCloseITRawSalesLeads]"
						},
						"linkedServiceName": {
							"referenceName": "autolytica",
							"type": "LinkedServiceReference"
						}
					}
				],
				"annotations": [],
				"lastPublishTime": "2021-03-11T08:47:13Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/CloseITSalesLeads')]",
				"[concat(variables('factoryId'), '/linkedServices/autolytica')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/CountTableRows')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy data1",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "select  1 as TableID, count(*) as CountOfRows from BI_Inspection_vMediafile\n",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert",
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "TableID",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "TableID",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "CountOfRows",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "CountOfRows",
											"type": "Int32",
											"physicalType": "int"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "RTC_Ext_BI_Group_vDealersRegions",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "TableCounts",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"annotations": [],
				"lastPublishTime": "2020-11-14T22:14:09Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/RTC_Ext_BI_Group_vDealersRegions')]",
				"[concat(variables('factoryId'), '/datasets/TableCounts')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DMSCustomers')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "CopyDataToSQL",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"additionalColumns": [
									{
										"name": "ClientID",
										"value": "10000"
									}
								],
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"preCopyScript": "delete from dmscustomer where clientid = 10000",
								"writeBehavior": "insert",
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "ClientID",
											"type": "String"
										},
										"sink": {
											"name": "ClientID",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"type": "String",
											"physicalType": "String",
											"ordinal": 1
										},
										"sink": {
											"name": "CustomerNumber",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"type": "String",
											"physicalType": "String",
											"ordinal": 2
										},
										"sink": {
											"name": "Title",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"type": "String",
											"physicalType": "String",
											"ordinal": 3
										},
										"sink": {
											"name": "Forename",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"type": "String",
											"physicalType": "String",
											"ordinal": 4
										},
										"sink": {
											"name": "Surname",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"type": "String",
											"physicalType": "String",
											"ordinal": 5
										},
										"sink": {
											"name": "Address1",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"type": "String",
											"physicalType": "String",
											"ordinal": 6
										},
										"sink": {
											"name": "Address2",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"type": "String",
											"physicalType": "String",
											"ordinal": 7
										},
										"sink": {
											"name": "Address3",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"type": "String",
											"physicalType": "String",
											"ordinal": 8
										},
										"sink": {
											"name": "Address4",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"type": "String",
											"physicalType": "String",
											"ordinal": 10
										},
										"sink": {
											"name": "Postcode",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"type": "String",
											"physicalType": "String",
											"ordinal": 11
										},
										"sink": {
											"name": "HomePhone",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"type": "String",
											"physicalType": "String",
											"ordinal": 12
										},
										"sink": {
											"name": "MobilePhone",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"type": "String",
											"physicalType": "String",
											"ordinal": 13
										},
										"sink": {
											"name": "EmailAddress",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"type": "String",
											"physicalType": "String",
											"ordinal": 14
										},
										"sink": {
											"name": "HomeTPS",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"type": "String",
											"physicalType": "String",
											"ordinal": 15
										},
										"sink": {
											"name": "MobileTPS",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"type": "String",
											"physicalType": "String",
											"ordinal": 16
										},
										"sink": {
											"name": "EmailTPS",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"type": "String",
											"physicalType": "String",
											"ordinal": 17
										},
										"sink": {
											"name": "ConsentSalesSMS",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"type": "String",
											"physicalType": "String",
											"ordinal": 18
										},
										"sink": {
											"name": "ConsentSalesPhone",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"type": "String",
											"physicalType": "String",
											"ordinal": 19
										},
										"sink": {
											"name": "ConsentSalesEmail",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"type": "String",
											"physicalType": "String",
											"ordinal": 20
										},
										"sink": {
											"name": "ConsentSalesPost",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"type": "String",
											"physicalType": "String",
											"ordinal": 21
										},
										"sink": {
											"name": "ConsentAfterSalesSMS",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"type": "String",
											"physicalType": "String",
											"ordinal": 22
										},
										"sink": {
											"name": "ConsentAfterSalesPhone",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"type": "String",
											"physicalType": "String",
											"ordinal": 23
										},
										"sink": {
											"name": "ConsentAfterSalesEmail",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"type": "String",
											"physicalType": "String",
											"ordinal": 24
										},
										"sink": {
											"name": "ConsentAfterSalesPost",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"type": "String",
											"physicalType": "String",
											"ordinal": 25
										},
										"sink": {
											"name": "ConsentBMWSMS",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"type": "String",
											"physicalType": "String",
											"ordinal": 26
										},
										"sink": {
											"name": "ConsentBMWPhone",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"type": "String",
											"physicalType": "String",
											"ordinal": 27
										},
										"sink": {
											"name": "ConsentBMWEmail",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"type": "String",
											"physicalType": "String",
											"ordinal": 28
										},
										"sink": {
											"name": "ConsentBMWPost",
											"type": "String",
											"physicalType": "varchar"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "PeterVardyCustomerCSV",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "SQLDMSCustomer",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "ReferenceTableUpdate",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "CopyDataToSQL",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[DoReferenceTableUpdate]",
							"storedProcedureParameters": {
								"SourceSystemID": {
									"value": "12",
									"type": "Int64"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "autolytica",
							"type": "LinkedServiceReference"
						}
					}
				],
				"annotations": [],
				"lastPublishTime": "2021-06-09T21:36:54Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/PeterVardyCustomerCSV')]",
				"[concat(variables('factoryId'), '/datasets/SQLDMSCustomer')]",
				"[concat(variables('factoryId'), '/linkedServices/autolytica')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DMSUsers')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "CopyCSVToSQL",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"additionalColumns": [
									{
										"name": "ClientID",
										"value": "10000"
									}
								],
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"preCopyScript": "delete from DMSEmployee where clientid = 10000",
								"writeBehavior": "insert",
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"type": "String",
											"ordinal": 1
										},
										"sink": {
											"name": "ID",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"type": "String",
											"ordinal": 2
										},
										"sink": {
											"name": "Name",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"type": "String",
											"ordinal": 3
										},
										"sink": {
											"name": "Dealership",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"type": "String",
											"ordinal": 4
										},
										"sink": {
											"name": "EmployeeType",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"type": "String",
											"ordinal": 5
										},
										"sink": {
											"name": "Check",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"type": "String",
											"ordinal": 6
										},
										"sink": {
											"name": "RefID",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "ClientID",
											"type": "String"
										},
										"sink": {
											"name": "ClientID",
											"type": "Int32",
											"physicalType": "int"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "PeterVardyDMSEmployeeCSV",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "SQLDMSEmployee",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"annotations": [],
				"lastPublishTime": "2021-06-09T21:41:41Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/PeterVardyDMSEmployeeCSV')]",
				"[concat(variables('factoryId'), '/datasets/SQLDMSEmployee')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DMSVehicles')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "CopyCSVDataToSQL",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"additionalColumns": [
									{
										"name": "ClientID",
										"value": "10000"
									}
								],
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"preCopyScript": "delete from dbo.dmsvehicle where clientid = 10000",
								"writeBehavior": "insert",
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "ClientID",
											"type": "String"
										},
										"sink": {
											"name": "ClientID",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"type": "String",
											"physicalType": "String",
											"ordinal": 1
										},
										"sink": {
											"name": "VehicleID",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"type": "String",
											"physicalType": "String",
											"ordinal": 2
										},
										"sink": {
											"name": "Make",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"type": "String",
											"physicalType": "String",
											"ordinal": 3
										},
										"sink": {
											"name": "Model",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"type": "String",
											"physicalType": "String",
											"ordinal": 4
										},
										"sink": {
											"name": "Derivative",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"type": "String",
											"physicalType": "String",
											"ordinal": 5
										},
										"sink": {
											"name": "RegistrationNumber",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"type": "Date",
											"physicalType": "Date",
											"ordinal": 6
										},
										"sink": {
											"name": "DateofRegistration",
											"type": "DateTime",
											"physicalType": "date"
										}
									},
									{
										"source": {
											"type": "Date",
											"physicalType": "Date",
											"ordinal": 7
										},
										"sink": {
											"name": "DeliveryDate",
											"type": "DateTime",
											"physicalType": "date"
										}
									},
									{
										"source": {
											"type": "String",
											"physicalType": "String",
											"ordinal": 8
										},
										"sink": {
											"name": "NewOrUsed",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"type": "Date",
											"physicalType": "Date",
											"ordinal": 9
										},
										"sink": {
											"name": "LastServiceDate",
											"type": "DateTime",
											"physicalType": "date"
										}
									},
									{
										"source": {
											"type": "Date",
											"physicalType": "Date",
											"ordinal": 10
										},
										"sink": {
											"name": "NextServiceDate",
											"type": "DateTime",
											"physicalType": "date"
										}
									},
									{
										"source": {
											"type": "Date",
											"physicalType": "Date",
											"ordinal": 11
										},
										"sink": {
											"name": "LastMOTDate",
											"type": "DateTime",
											"physicalType": "date"
										}
									},
									{
										"source": {
											"type": "Date",
											"physicalType": "Date",
											"ordinal": 12
										},
										"sink": {
											"name": "NextMOTDate",
											"type": "DateTime",
											"physicalType": "date"
										}
									},
									{
										"source": {
											"type": "Date",
											"physicalType": "Date",
											"ordinal": 13
										},
										"sink": {
											"name": "LastWorkshopDate",
											"type": "DateTime",
											"physicalType": "date"
										}
									},
									{
										"source": {
											"type": "String",
											"physicalType": "String",
											"ordinal": 14
										},
										"sink": {
											"name": "CapCode",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"type": "String",
											"physicalType": "String",
											"ordinal": 15
										},
										"sink": {
											"name": "ChassisNumber",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"type": "String",
											"physicalType": "String",
											"ordinal": 16
										},
										"sink": {
											"name": "DriverCustomerID",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"type": "String",
											"physicalType": "String",
											"ordinal": 17
										},
										"sink": {
											"name": "AftersalesCustomerID",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"type": "String",
											"physicalType": "String",
											"ordinal": 18
										},
										"sink": {
											"name": "SalesCustomerID",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"type": "String",
											"physicalType": "String",
											"ordinal": 19
										},
										"sink": {
											"name": "RecordStatus",
											"type": "String",
											"physicalType": "varchar"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false,
									"dateTimeFormat": "dd/MM/yyyy"
								}
							}
						},
						"inputs": [
							{
								"referenceName": "PeterVardyVehicleCSV",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "SQLDMSVehicle",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"annotations": [],
				"lastPublishTime": "2021-06-09T21:37:37Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/PeterVardyVehicleCSV')]",
				"[concat(variables('factoryId'), '/datasets/SQLDMSVehicle')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DetailedVehSales')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "DetailedSales",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "DetailedSales",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"DetailedSales": {},
									"SQLDMSDetailedSalesMerge": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"annotations": [],
				"lastPublishTime": "2021-06-10T12:22:53Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/DetailedSales')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/EMAXEnquiryActivity')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "CopyEnquiryMaxDataToSQL",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"additionalColumns": [
									{
										"name": "ClientID",
										"value": "10000"
									}
								],
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"preCopyScript": "truncate table [dbo].[EMAXRaw_EnquiryActivity_Merge]",
								"writeBehavior": "insert",
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "DealerID",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "DealerID",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "DealerCode",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "DealerCode",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "DealerName",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "DealerName",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "SalesPerson",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "SalesPerson",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "SalespersonID",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "SalespersonID",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "EnquiryID",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "EnquiryID",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "CustomerID",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "CustomerID",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "CustomerType",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "CustomerType",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "SourceOfEnquiry",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "SourceOfEnquiry",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "MethodOfContact",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "MethodOfContact",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "EnquiryVehicleType",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "EnquiryVehicleType",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "EnquiryVehicleMake",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "EnquiryVehicleMake",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "EnquiryVehicleRange",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "EnquiryVehicleRange",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "EnquiryVehicleModel",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "EnquiryVehicleModel",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "EnquiryVehicleDerivative",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "EnquiryVehicleDerivative",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "EnquiryVehicleReg",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "EnquiryVehicleReg",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "EnquiryVehicleVin",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "EnquiryVehicleVin",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "PXVehicle",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "PXVehicle",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "PXReg",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "PXReg",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "PXVin",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "PXVin",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "PXMake",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "PXMake",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "PXRange",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "PXRange",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "PXModel",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "PXModel",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "PXDerivative",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "PXDerivative",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "PXSIValue",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "PXSIValue",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 2,
											"precision": 18
										}
									},
									{
										"source": {
											"name": "PXDisposalMethod",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "PXDisposalMethod",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "OfferCreatedDate",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "OfferCreatedDate",
											"type": "DateTime",
											"physicalType": "datetime2"
										}
									},
									{
										"source": {
											"name": "OfferVehicleType",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "OfferVehicleType",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "OfferVehicleMake",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "OfferVehicleMake",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "OfferVehicleRange",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "OfferVehicleRange",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "OfferVehicleModel",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "OfferVehicleModel",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "OfferVehicleDerivative",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "OfferVehicleDerivative",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "OfferVehicleReg",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "OfferVehicleReg",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "OfferVehicleVin",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "OfferVehicleVin",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "VehicleBasePrice",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "VehicleBasePrice",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 2,
											"precision": 18
										}
									},
									{
										"source": {
											"name": "AddonsPrice",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "AddonsPrice",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 2,
											"precision": 18
										}
									},
									{
										"source": {
											"name": "Discounts",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Discounts",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 2,
											"precision": 18
										}
									},
									{
										"source": {
											"name": "DeliveryFee",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "DeliveryFee",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 2,
											"precision": 18
										}
									},
									{
										"source": {
											"name": "RegFee",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "RegFee",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 2,
											"precision": 18
										}
									},
									{
										"source": {
											"name": "RFLFee",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "RFLFee",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 2,
											"precision": 18
										}
									},
									{
										"source": {
											"name": "TotalOTRprice",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "TotalOTRprice",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 2,
											"precision": 18
										}
									},
									{
										"source": {
											"name": "PXVehicleOffer",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "PXVehicleOffer",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 2,
											"precision": 18
										}
									},
									{
										"source": {
											"name": "PXOverAllowance",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "PXOverAllowance",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 2,
											"precision": 18
										}
									},
									{
										"source": {
											"name": "OrderNo",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "OrderNo",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Financed",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Financed",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "FinanceHouse",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "FinanceHouse",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Rate",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Rate",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 2,
											"precision": 18
										}
									},
									{
										"source": {
											"name": "APR",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "APR",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 2,
											"precision": 18
										}
									},
									{
										"source": {
											"name": "FinanceTerms",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "FinanceTerms",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 2,
											"precision": 18
										}
									},
									{
										"source": {
											"name": "FinanceType",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "FinanceType",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "CashDeposit",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "CashDeposit",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 2,
											"precision": 18
										}
									},
									{
										"source": {
											"name": "DealerFDA",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "DealerFDA",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 2,
											"precision": 18
										}
									},
									{
										"source": {
											"name": "ProviderFDA",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "ProviderFDA",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 2,
											"precision": 18
										}
									},
									{
										"source": {
											"name": "Cashback",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Cashback",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 2,
											"precision": 18
										}
									},
									{
										"source": {
											"name": "FinanceValue",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "FinanceValue",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 2,
											"precision": 18
										}
									},
									{
										"source": {
											"name": "MonthlyPayments",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "MonthlyPayments",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 2,
											"precision": 18
										}
									},
									{
										"source": {
											"name": "EnquiryStatusCode",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "EnquiryStatusCode",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "EnquiryStatus",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "EnquiryStatus",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "EnquiryDate",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "EnquiryDate",
											"type": "DateTime",
											"physicalType": "datetime2"
										}
									},
									{
										"source": {
											"name": "TestDriveDate",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "TestDriveDate",
											"type": "DateTime",
											"physicalType": "datetime2"
										}
									},
									{
										"source": {
											"name": "OrderDate",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "OrderDate",
											"type": "DateTime",
											"physicalType": "datetime2"
										}
									},
									{
										"source": {
											"name": "EstimatedHandoverDate",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "EstimatedHandoverDate",
											"type": "DateTime",
											"physicalType": "datetime2"
										}
									},
									{
										"source": {
											"name": "DeliveryDate",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "DeliveryDate",
											"type": "DateTime",
											"physicalType": "datetime2"
										}
									},
									{
										"source": {
											"name": "LostSaleDate",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "LostSaleDate",
											"type": "DateTime",
											"physicalType": "datetime2"
										}
									},
									{
										"source": {
											"name": "LostSaleReason",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "LostSaleReason",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "LostSaleRequestedDate",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "LostSaleRequestedDate",
											"type": "DateTime",
											"physicalType": "datetime2"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false,
									"dateTimeFormat": "dd/MM/yyyy"
								}
							}
						},
						"inputs": [
							{
								"referenceName": "EMAXCSV_EnquiryActivity",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "SQLEMAXRaw_EnquiryActivity",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "DoReferenceTableUpdate",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "CopyEnquiryMaxDataToSQL",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[DoReferenceTableUpdate]",
							"storedProcedureParameters": {
								"SourceSystemID": {
									"value": "9",
									"type": "Int64"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "autolytica",
							"type": "LinkedServiceReference"
						}
					}
				],
				"annotations": [],
				"lastPublishTime": "2021-01-03T14:50:16Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/EMAXCSV_EnquiryActivity')]",
				"[concat(variables('factoryId'), '/datasets/SQLEMAXRaw_EnquiryActivity')]",
				"[concat(variables('factoryId'), '/linkedServices/autolytica')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/EnquiryMAXEnquiries')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "EnquiryMAXEnquiries",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "EnquiryMAX_Enquiries",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"EnquiryMAXEnquiriesJSON": {},
									"EnquiryMAXEnquiries": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"annotations": [],
				"lastPublishTime": "2021-05-03T21:08:11Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/EnquiryMAX_Enquiries')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/GetSchemas')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "GetSourceInformation",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "GetSourceInformation",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"source1": {},
									"sink1": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"annotations": [],
				"lastPublishTime": "2020-10-13T22:04:56Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/GetSourceInformation')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ImportUnleashed')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "ImportUnleashed",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "Unleashed",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"UnleashedInvoicesJSON": {},
									"UnleashedProductsJSON": {},
									"UnleashedCustomers": {},
									"UnleashedSalesOrders": {},
									"UnleashedProductGroups": {},
									"UnleashedStockOnHand": {},
									"SQLUnleashedInvoices": {},
									"SQLUnleashedInvoiceItems": {},
									"SQLUnleashedProducts": {},
									"SQLUnleashedCustomers": {},
									"SQLUnleashedSalesOrders": {},
									"SQLSalesOrderLines": {},
									"SQLUnleashedProductGroups": {},
									"SQLUnleashedStock": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"annotations": [],
				"lastPublishTime": "2021-03-20T22:39:10Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/Unleashed')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/LabourSales')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "CopyPeterVardyDataToSQL",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"preCopyScript": "truncate table DMSAftersalesHours",
								"writeBehavior": "insert",
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "ID",
											"type": "Int32",
											"physicalType": "String"
										},
										"sink": {
											"name": "ClientID",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "S/Type",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "SaleType",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Invoice No",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "InvoiceNumber",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "WIP No",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "WIPNumber",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "RTS code",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "RTSCode",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Sold",
											"type": "Decimal",
											"physicalType": "String"
										},
										"sink": {
											"name": "SoldHours",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 2,
											"precision": 15
										}
									},
									{
										"source": {
											"name": "Taken",
											"type": "Decimal",
											"physicalType": "String"
										},
										"sink": {
											"name": "TakenHours",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 2,
											"precision": 15
										}
									},
									{
										"source": {
											"name": "Eff",
											"type": "Decimal",
											"physicalType": "String"
										},
										"sink": {
											"name": "Efficiency",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 2,
											"precision": 15
										}
									},
									{
										"source": {
											"name": "Sale Value",
											"type": "Decimal",
											"physicalType": "String"
										},
										"sink": {
											"name": "SaleValue",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 2,
											"precision": 15
										}
									},
									{
										"source": {
											"name": "Rec Rate",
											"type": "Decimal",
											"physicalType": "String"
										},
										"sink": {
											"name": "RecoveryRate",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 2,
											"precision": 15
										}
									},
									{
										"source": {
											"name": "Mech",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Technician",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "LA",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "LA",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "LT",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "LT",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "co",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Dealer",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Operator name",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "OperatorName",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Franchise code",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "FranchiseCode",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Chassis number",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "ChassisNumber",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Registration number.",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "RegistrationNumber",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Date editted",
											"type": "DateTime",
											"physicalType": "String"
										},
										"sink": {
											"name": "DateEdited",
											"type": "DateTime",
											"physicalType": "date"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false,
									"dateTimeFormat": "dd/MM/yyyy"
								}
							}
						},
						"inputs": [
							{
								"referenceName": "PeterVardySOBI1CSV",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "SQLDMSAftersalesHours",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "EmployeeMasterMerge",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "CopyPeterVardyDataToSQL",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[DoReferenceTableUpdate]",
							"storedProcedureParameters": {
								"SourceSystemID": {
									"value": "3",
									"type": "Int32"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "autolytica",
							"type": "LinkedServiceReference"
						}
					}
				],
				"annotations": [],
				"lastPublishTime": "2021-06-09T21:34:00Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/PeterVardySOBI1CSV')]",
				"[concat(variables('factoryId'), '/datasets/SQLDMSAftersalesHours')]",
				"[concat(variables('factoryId'), '/linkedServices/autolytica')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/OlderDetailedVehSales')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "PeterVardyDMSAftersalesWIP",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"additionalColumns": [
									{
										"name": "ClientID",
										"value": "10000"
									}
								],
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"preCopyScript": "delete from dmsaftersaleswip where clientid = 10000",
								"writeBehavior": "insert",
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "ClientID",
											"type": "String"
										},
										"sink": {
											"name": "ClientID",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "D",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Department",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "WIP",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "WIP",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "Date Due",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Date Due",
											"type": "DateTime",
											"physicalType": "datetime2"
										}
									},
									{
										"source": {
											"name": "Customer",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Customer",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Reg No",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Registration Number",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Operator",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Operator",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "O/due",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Overdue",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "Parts",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Parts Value",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 2,
											"precision": 18
										}
									},
									{
										"source": {
											"name": "Lin",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Parts Lines",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "Labour",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Labour Value",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 2,
											"precision": 18
										}
									},
									{
										"source": {
											"name": "Ln",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Labour Lines",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "Total",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Total Value",
											"type": "Int32",
											"physicalType": "int"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false,
									"dateTimeFormat": "dd/MM/yyyy"
								}
							}
						},
						"inputs": [
							{
								"referenceName": "PeterVardySOBI7CSV",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "SQLDMSAftersalesWIP",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"annotations": [],
				"lastPublishTime": "2021-06-09T21:35:05Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/PeterVardySOBI7CSV')]",
				"[concat(variables('factoryId'), '/datasets/SQLDMSAftersalesWIP')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PartsSales')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "PeterVardyPartsSales",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "PeterVardyPartsSales",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"PeterVardyPartsSales": {},
									"SQLDMSPartsSales": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"annotations": [],
				"lastPublishTime": "2021-06-09T21:38:25Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/PeterVardyPartsSales')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PartsStock')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "PeterVardyDMSPartsStock",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"additionalColumns": [
									{
										"name": "ClientID",
										"value": "10000"
									}
								],
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"preCopyScript": "delete from dmspartsstock_merge where clientid = 10000;",
								"writeBehavior": "insert",
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "Co",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Department",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "F",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Franchise",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Part Number",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Part Number",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Description",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Description",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Qty",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Quantity",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 4,
											"precision": 18
										}
									},
									{
										"source": {
											"name": "Avg Cos",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Average Cost",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 2,
											"precision": 18
										}
									},
									{
										"source": {
											"name": "3-6 Months",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "3_6_Months",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 2,
											"precision": 18
										}
									},
									{
										"source": {
											"name": "6-9 Months",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "6_9_Months",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 2,
											"precision": 18
										}
									},
									{
										"source": {
											"name": "9-12 Months",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "9_12_Months",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 2,
											"precision": 18
										}
									},
									{
										"source": {
											"name": "12-18 Months",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "12_18_Months",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 2,
											"precision": 18
										}
									},
									{
										"source": {
											"name": "18-24 Months",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "18_24_Months",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 2,
											"precision": 18
										}
									},
									{
										"source": {
											"name": "\u001c 24 Months",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "24_Months",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 2,
											"precision": 18
										}
									},
									{
										"source": {
											"name": "Date last sold",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Date last sold",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Date last purchased",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Date last purchased",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Date last moved",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Date last moved",
											"type": "DateTime",
											"physicalType": "datetime2"
										}
									},
									{
										"source": {
											"name": "ClientID",
											"type": "String"
										},
										"sink": {
											"name": "ClientID",
											"type": "Int32",
											"physicalType": "int"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false,
									"dateTimeFormat": "dd/MM/yyyy"
								}
							}
						},
						"inputs": [
							{
								"referenceName": "PeterVardySMBI3CSV",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "SQLDMSPartsStock",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "DoReferenceTableUpdate",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "PeterVardyDMSPartsStock",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[DoReferenceTableUpdate]",
							"storedProcedureParameters": {
								"SourceSystemID": {
									"value": "18",
									"type": "Int64"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "autolytica",
							"type": "LinkedServiceReference"
						}
					}
				],
				"annotations": [],
				"lastPublishTime": "2021-06-09T21:40:48Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/PeterVardySMBI3CSV')]",
				"[concat(variables('factoryId'), '/datasets/SQLDMSPartsStock')]",
				"[concat(variables('factoryId'), '/linkedServices/autolytica')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PeterVardyClocking')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "CopyDataToSQL",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"additionalColumns": [
									{
										"name": "ClientID",
										"value": "10000"
									}
								],
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"preCopyScript": "delete from dbo.clocking where clientid = 10000",
								"writeBehavior": "insert",
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "ClientID",
											"type": "String"
										},
										"sink": {
											"name": "ClientID",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "ClockingSeqNo",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "ClockingSeqNo",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "DealerName",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "DealerName",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "EmployeeName",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "EmployeeName",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "EmployeeType",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "EmployeeType",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "BookingNumber",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "BookingNumber",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "RegistrationNumber",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "RegistrationNumber",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Action",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Action",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "DateTimeOn",
											"type": "DateTime",
											"physicalType": "String"
										},
										"sink": {
											"name": "DateTimeOn",
											"type": "DateTime",
											"physicalType": "datetime2"
										}
									},
									{
										"source": {
											"name": "DateTimeOff",
											"type": "DateTime",
											"physicalType": "String"
										},
										"sink": {
											"name": "DateTimeOff",
											"type": "DateTime",
											"physicalType": "datetime2"
										}
									},
									{
										"source": {
											"name": "AdjElapsed",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "AdjElapsed",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Allowed",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Allowed",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "WorkType",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "WorkType",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "SaleType",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "SaleType",
											"type": "String",
											"physicalType": "nvarchar"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false,
									"dateTimeFormat": "dd/MM/yyyy HH:mm:ss"
								}
							}
						},
						"inputs": [
							{
								"referenceName": "PeterVardyClockingCSV",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "SQLClocking",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "EmployeeMasterMerge",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "CopyDataToSQL",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[DoReferenceTableUpdate]",
							"storedProcedureParameters": {
								"SourceSystemID": {
									"value": "1",
									"type": "Int32"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "autolytica",
							"type": "LinkedServiceReference"
						}
					}
				],
				"annotations": [],
				"lastPublishTime": "2020-11-15T17:09:32Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/PeterVardyClockingCSV')]",
				"[concat(variables('factoryId'), '/datasets/SQLClocking')]",
				"[concat(variables('factoryId'), '/linkedServices/autolytica')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PeterVardyDMSAftersalesWIP')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "PeterVardyDMSAftersalesWIP",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"additionalColumns": [
									{
										"name": "ClientID",
										"value": "10000"
									}
								],
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"preCopyScript": "delete from dmsaftersaleswip where clientid = 10000",
								"writeBehavior": "insert",
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "ClientID",
											"type": "String"
										},
										"sink": {
											"name": "ClientID",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "D",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Department",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "WIP",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "WIP",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "Date Due",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Date Due",
											"type": "DateTime",
											"physicalType": "datetime2"
										}
									},
									{
										"source": {
											"name": "Customer",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Customer",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Reg No",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Registration Number",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Operator",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Operator",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "O/due",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Overdue",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "Parts",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Parts Value",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 2,
											"precision": 18
										}
									},
									{
										"source": {
											"name": "Lin",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Parts Lines",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "Labour",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Labour Value",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 2,
											"precision": 18
										}
									},
									{
										"source": {
											"name": "Ln",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Labour Lines",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "Total",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Total Value",
											"type": "Int32",
											"physicalType": "int"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false,
									"dateTimeFormat": "dd/MM/yyyy"
								}
							}
						},
						"inputs": [
							{
								"referenceName": "PeterVardySOBI7CSV",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "SQLDMSAftersalesWIP",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"annotations": [],
				"lastPublishTime": "2021-04-03T20:03:37Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/PeterVardySOBI7CSV')]",
				"[concat(variables('factoryId'), '/datasets/SQLDMSAftersalesWIP')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PeterVardyDMSCustomer')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "CopyDataToSQL",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"additionalColumns": [
									{
										"name": "ClientID",
										"value": "10000"
									}
								],
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"preCopyScript": "delete from dmscustomer where clientid = 10000",
								"writeBehavior": "insert",
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "ClientID",
											"type": "String"
										},
										"sink": {
											"name": "ClientID",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"type": "String",
											"physicalType": "String",
											"ordinal": 1
										},
										"sink": {
											"name": "CustomerNumber",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"type": "String",
											"physicalType": "String",
											"ordinal": 2
										},
										"sink": {
											"name": "Title",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"type": "String",
											"physicalType": "String",
											"ordinal": 3
										},
										"sink": {
											"name": "Forename",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"type": "String",
											"physicalType": "String",
											"ordinal": 4
										},
										"sink": {
											"name": "Surname",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"type": "String",
											"physicalType": "String",
											"ordinal": 5
										},
										"sink": {
											"name": "Address1",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"type": "String",
											"physicalType": "String",
											"ordinal": 6
										},
										"sink": {
											"name": "Address2",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"type": "String",
											"physicalType": "String",
											"ordinal": 7
										},
										"sink": {
											"name": "Address3",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"type": "String",
											"physicalType": "String",
											"ordinal": 8
										},
										"sink": {
											"name": "Address4",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"type": "String",
											"physicalType": "String",
											"ordinal": 10
										},
										"sink": {
											"name": "Postcode",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"type": "String",
											"physicalType": "String",
											"ordinal": 11
										},
										"sink": {
											"name": "HomePhone",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"type": "String",
											"physicalType": "String",
											"ordinal": 12
										},
										"sink": {
											"name": "MobilePhone",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"type": "String",
											"physicalType": "String",
											"ordinal": 13
										},
										"sink": {
											"name": "EmailAddress",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"type": "String",
											"physicalType": "String",
											"ordinal": 14
										},
										"sink": {
											"name": "HomeTPS",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"type": "String",
											"physicalType": "String",
											"ordinal": 15
										},
										"sink": {
											"name": "MobileTPS",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"type": "String",
											"physicalType": "String",
											"ordinal": 16
										},
										"sink": {
											"name": "EmailTPS",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"type": "String",
											"physicalType": "String",
											"ordinal": 17
										},
										"sink": {
											"name": "ConsentSalesSMS",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"type": "String",
											"physicalType": "String",
											"ordinal": 18
										},
										"sink": {
											"name": "ConsentSalesPhone",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"type": "String",
											"physicalType": "String",
											"ordinal": 19
										},
										"sink": {
											"name": "ConsentSalesEmail",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"type": "String",
											"physicalType": "String",
											"ordinal": 20
										},
										"sink": {
											"name": "ConsentSalesPost",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"type": "String",
											"physicalType": "String",
											"ordinal": 21
										},
										"sink": {
											"name": "ConsentAfterSalesSMS",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"type": "String",
											"physicalType": "String",
											"ordinal": 22
										},
										"sink": {
											"name": "ConsentAfterSalesPhone",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"type": "String",
											"physicalType": "String",
											"ordinal": 23
										},
										"sink": {
											"name": "ConsentAfterSalesEmail",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"type": "String",
											"physicalType": "String",
											"ordinal": 24
										},
										"sink": {
											"name": "ConsentAfterSalesPost",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"type": "String",
											"physicalType": "String",
											"ordinal": 25
										},
										"sink": {
											"name": "ConsentBMWSMS",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"type": "String",
											"physicalType": "String",
											"ordinal": 26
										},
										"sink": {
											"name": "ConsentBMWPhone",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"type": "String",
											"physicalType": "String",
											"ordinal": 27
										},
										"sink": {
											"name": "ConsentBMWEmail",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"type": "String",
											"physicalType": "String",
											"ordinal": 28
										},
										"sink": {
											"name": "ConsentBMWPost",
											"type": "String",
											"physicalType": "varchar"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "PeterVardyCustomerCSV",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "SQLDMSCustomer",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "ReferenceTableUpdate",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "CopyDataToSQL",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[DoReferenceTableUpdate]",
							"storedProcedureParameters": {
								"SourceSystemID": {
									"value": "12",
									"type": "Int64"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "autolytica",
							"type": "LinkedServiceReference"
						}
					}
				],
				"annotations": [],
				"lastPublishTime": "2020-12-23T13:43:34Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/PeterVardyCustomerCSV')]",
				"[concat(variables('factoryId'), '/datasets/SQLDMSCustomer')]",
				"[concat(variables('factoryId'), '/linkedServices/autolytica')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PeterVardyDMSEmployee')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "CopyCSVToSQL",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"additionalColumns": [
									{
										"name": "ClientID",
										"value": "10000"
									}
								],
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"preCopyScript": "delete from DMSEmployee where clientid = 10000",
								"writeBehavior": "insert",
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"type": "String",
											"ordinal": 1
										},
										"sink": {
											"name": "ID",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"type": "String",
											"ordinal": 2
										},
										"sink": {
											"name": "Name",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"type": "String",
											"ordinal": 3
										},
										"sink": {
											"name": "Dealership",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"type": "String",
											"ordinal": 4
										},
										"sink": {
											"name": "EmployeeType",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"type": "String",
											"ordinal": 5
										},
										"sink": {
											"name": "Check",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"type": "String",
											"ordinal": 6
										},
										"sink": {
											"name": "RefID",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "ClientID",
											"type": "String"
										},
										"sink": {
											"name": "ClientID",
											"type": "Int32",
											"physicalType": "int"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "PeterVardyDMSEmployeeCSV",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "SQLDMSEmployee",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"annotations": [],
				"lastPublishTime": "2020-12-05T21:23:00Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/PeterVardyDMSEmployeeCSV')]",
				"[concat(variables('factoryId'), '/datasets/SQLDMSEmployee')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PeterVardyDMSPartsStock')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "PeterVardyDMSPartsStock",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"additionalColumns": [
									{
										"name": "ClientID",
										"value": "10000"
									}
								],
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"preCopyScript": "delete from dmspartsstock_merge where clientid = 10000;",
								"writeBehavior": "insert",
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "Co",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Department",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "F",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Franchise",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Part Number",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Part Number",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Description",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Description",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Qty",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Quantity",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 4,
											"precision": 18
										}
									},
									{
										"source": {
											"name": "Avg Cos",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Average Cost",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 2,
											"precision": 18
										}
									},
									{
										"source": {
											"name": "3-6 Months",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "3_6_Months",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 2,
											"precision": 18
										}
									},
									{
										"source": {
											"name": "6-9 Months",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "6_9_Months",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 2,
											"precision": 18
										}
									},
									{
										"source": {
											"name": "9-12 Months",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "9_12_Months",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 2,
											"precision": 18
										}
									},
									{
										"source": {
											"name": "12-18 Months",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "12_18_Months",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 2,
											"precision": 18
										}
									},
									{
										"source": {
											"name": "18-24 Months",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "18_24_Months",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 2,
											"precision": 18
										}
									},
									{
										"source": {
											"name": "\u001c 24 Months",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "24_Months",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 2,
											"precision": 18
										}
									},
									{
										"source": {
											"name": "Date last sold",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Date last sold",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Date last purchased",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Date last purchased",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Date last moved",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Date last moved",
											"type": "DateTime",
											"physicalType": "datetime2"
										}
									},
									{
										"source": {
											"name": "ClientID",
											"type": "String"
										},
										"sink": {
											"name": "ClientID",
											"type": "Int32",
											"physicalType": "int"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false,
									"dateTimeFormat": "dd/MM/yyyy"
								}
							}
						},
						"inputs": [
							{
								"referenceName": "PeterVardySMBI3CSV",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "SQLDMSPartsStock",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "DoReferenceTableUpdate",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "PeterVardyDMSPartsStock",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[DoReferenceTableUpdate]",
							"storedProcedureParameters": {
								"SourceSystemID": {
									"value": "18",
									"type": "Int64"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "autolytica",
							"type": "LinkedServiceReference"
						}
					}
				],
				"annotations": [],
				"lastPublishTime": "2021-04-03T21:12:12Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/PeterVardySMBI3CSV')]",
				"[concat(variables('factoryId'), '/datasets/SQLDMSPartsStock')]",
				"[concat(variables('factoryId'), '/linkedServices/autolytica')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PeterVardyDMSVehicle')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "CopyCSVDataToSQL",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"additionalColumns": [
									{
										"name": "ClientID",
										"value": "10000"
									}
								],
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"preCopyScript": "delete from dbo.dmsvehicle where clientid = 10000",
								"writeBehavior": "insert",
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "ClientID",
											"type": "String"
										},
										"sink": {
											"name": "ClientID",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"type": "String",
											"physicalType": "String",
											"ordinal": 1
										},
										"sink": {
											"name": "VehicleID",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"type": "String",
											"physicalType": "String",
											"ordinal": 2
										},
										"sink": {
											"name": "Make",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"type": "String",
											"physicalType": "String",
											"ordinal": 3
										},
										"sink": {
											"name": "Model",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"type": "String",
											"physicalType": "String",
											"ordinal": 4
										},
										"sink": {
											"name": "Derivative",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"type": "String",
											"physicalType": "String",
											"ordinal": 5
										},
										"sink": {
											"name": "RegistrationNumber",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"type": "Date",
											"physicalType": "Date",
											"ordinal": 6
										},
										"sink": {
											"name": "DateofRegistration",
											"type": "DateTime",
											"physicalType": "date"
										}
									},
									{
										"source": {
											"type": "Date",
											"physicalType": "Date",
											"ordinal": 7
										},
										"sink": {
											"name": "DeliveryDate",
											"type": "DateTime",
											"physicalType": "date"
										}
									},
									{
										"source": {
											"type": "String",
											"physicalType": "String",
											"ordinal": 8
										},
										"sink": {
											"name": "NewOrUsed",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"type": "Date",
											"physicalType": "Date",
											"ordinal": 9
										},
										"sink": {
											"name": "LastServiceDate",
											"type": "DateTime",
											"physicalType": "date"
										}
									},
									{
										"source": {
											"type": "Date",
											"physicalType": "Date",
											"ordinal": 10
										},
										"sink": {
											"name": "NextServiceDate",
											"type": "DateTime",
											"physicalType": "date"
										}
									},
									{
										"source": {
											"type": "Date",
											"physicalType": "Date",
											"ordinal": 11
										},
										"sink": {
											"name": "LastMOTDate",
											"type": "DateTime",
											"physicalType": "date"
										}
									},
									{
										"source": {
											"type": "Date",
											"physicalType": "Date",
											"ordinal": 12
										},
										"sink": {
											"name": "NextMOTDate",
											"type": "DateTime",
											"physicalType": "date"
										}
									},
									{
										"source": {
											"type": "Date",
											"physicalType": "Date",
											"ordinal": 13
										},
										"sink": {
											"name": "LastWorkshopDate",
											"type": "DateTime",
											"physicalType": "date"
										}
									},
									{
										"source": {
											"type": "String",
											"physicalType": "String",
											"ordinal": 14
										},
										"sink": {
											"name": "CapCode",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"type": "String",
											"physicalType": "String",
											"ordinal": 15
										},
										"sink": {
											"name": "ChassisNumber",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"type": "String",
											"physicalType": "String",
											"ordinal": 16
										},
										"sink": {
											"name": "DriverCustomerID",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"type": "String",
											"physicalType": "String",
											"ordinal": 17
										},
										"sink": {
											"name": "AftersalesCustomerID",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"type": "String",
											"physicalType": "String",
											"ordinal": 18
										},
										"sink": {
											"name": "SalesCustomerID",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"type": "String",
											"physicalType": "String",
											"ordinal": 19
										},
										"sink": {
											"name": "RecordStatus",
											"type": "String",
											"physicalType": "varchar"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false,
									"dateTimeFormat": "dd/MM/yyyy"
								}
							}
						},
						"inputs": [
							{
								"referenceName": "PeterVardyVehicleCSV",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "SQLDMSVehicle",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"annotations": [],
				"lastPublishTime": "2020-12-23T13:43:35Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/PeterVardyVehicleCSV')]",
				"[concat(variables('factoryId'), '/datasets/SQLDMSVehicle')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PeterVardyDetailedSales')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "PeterVardyDetailedSales",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "PeterVardyDetailedSales",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"PeterVardyDetailedSales": {},
									"SQLDMSDetailedSales": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					},
					{
						"name": "ReferenceTableUpdate",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "PeterVardyDetailedSales",
								"dependencyConditions": [
									"Succeeded",
									"Failed"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[DoReferenceTableUpdate]",
							"storedProcedureParameters": {
								"SourceSystemID": {
									"value": "6",
									"type": "Int64"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "autolytica",
							"type": "LinkedServiceReference"
						}
					}
				],
				"annotations": [],
				"lastPublishTime": "2021-06-25T13:33:37Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/PeterVardyDetailedSales')]",
				"[concat(variables('factoryId'), '/linkedServices/autolytica')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PeterVardyDetailedSales_Older')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "PeterVardyDetailedSales_Older",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "PeterVardyDetailedSales_Older",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"PeterVardyDetailedSales": {},
									"SQLDMSDetailedSales": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					},
					{
						"name": "ReferenceTableUpdate",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "PeterVardyDetailedSales_Older",
								"dependencyConditions": [
									"Succeeded",
									"Failed"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[DoReferenceTableUpdate]",
							"storedProcedureParameters": {
								"SourceSystemID": {
									"value": "11",
									"type": "Int64"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "autolytica",
							"type": "LinkedServiceReference"
						}
					}
				],
				"annotations": [],
				"lastPublishTime": "2021-06-25T13:33:37Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/PeterVardyDetailedSales_Older')]",
				"[concat(variables('factoryId'), '/linkedServices/autolytica')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PeterVardyEnquiryMAX')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "CopyPeterVardyEnquiryMax",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "ExcelSource",
								"additionalColumns": [
									{
										"name": "ClientID",
										"value": "10000"
									}
								],
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"preCopyScript": "truncate table EnquiryMaxSales",
								"writeBehavior": "insert",
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "ClientID",
											"type": "String"
										},
										"sink": {
											"name": "ClientID",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "Branch",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "DealershipID",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Sales Type",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "SalesType",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Enquiry No",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "EnquiryNo",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "Customer Title",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "CustomerTitle",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Customer Forename",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "CustomerForename",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Customer Surname",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "CustomerSurname",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Company Name",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "CompanyName",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Email",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Email",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Home Phone",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "HomePhone",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Mobile Phone",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "MobilePhone",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Work Phone",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "WorkPhone",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Postcode",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Postcode",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Enquiry Created",
											"type": "DateTime",
											"physicalType": "String"
										},
										"sink": {
											"name": "EnquiryCreatedDate",
											"type": "DateTime",
											"physicalType": "date"
										}
									},
									{
										"source": {
											"name": "Enquiry Type",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "EnquiryType",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Sales Executive",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "SalesExecutive",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Business Manager",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "BusinessManager",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "N/U",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "NewOrUsed",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Vehicle Type",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "VehicleType",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Make",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Make",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Range",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Range",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Model",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Model",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Derivative",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Derivative",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Registration No",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "RegistrationNo",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Registration Date",
											"type": "DateTime",
											"physicalType": "String"
										},
										"sink": {
											"name": "RegistrationDate",
											"type": "DateTime",
											"physicalType": "date"
										}
									},
									{
										"source": {
											"name": "Stock No",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "StockNo",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Group Date in Stock",
											"type": "DateTime",
											"physicalType": "String"
										},
										"sink": {
											"name": "GroupDateInStock",
											"type": "DateTime",
											"physicalType": "date"
										}
									},
									{
										"source": {
											"name": "Branch Date in Stock",
											"type": "DateTime",
											"physicalType": "String"
										},
										"sink": {
											"name": "BranchDateInStock",
											"type": "DateTime",
											"physicalType": "date"
										}
									},
									{
										"source": {
											"name": "First Order Date",
											"type": "DateTime",
											"physicalType": "String"
										},
										"sink": {
											"name": "FirstOrderDate",
											"type": "DateTime",
											"physicalType": "date"
										}
									},
									{
										"source": {
											"name": "Enquiry Status",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "EnquiryStatus",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Invoiced Date",
											"type": "DateTime",
											"physicalType": "String"
										},
										"sink": {
											"name": "InvoicedDate",
											"type": "DateTime",
											"physicalType": "date"
										}
									},
									{
										"source": {
											"name": "Expected Delivery Date",
											"type": "DateTime",
											"physicalType": "String"
										},
										"sink": {
											"name": "ExpectedDeliveryDate",
											"type": "DateTime",
											"physicalType": "date"
										}
									},
									{
										"source": {
											"name": "Delivery Date",
											"type": "DateTime",
											"physicalType": "String"
										},
										"sink": {
											"name": "DeliveryDate",
											"type": "DateTime",
											"physicalType": "date"
										}
									},
									{
										"source": {
											"name": "Delivery Category",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "DeliveryCategory",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Metal Only",
											"type": "Decimal",
											"physicalType": "String"
										},
										"sink": {
											"name": "MetalOnly",
											"type": "Decimal",
											"physicalType": "decimal"
										}
									},
									{
										"source": {
											"name": "OTR Price exc Ins",
											"type": "Decimal",
											"physicalType": "String"
										},
										"sink": {
											"name": "OTRPriceExcIns",
											"type": "Decimal",
											"physicalType": "decimal"
										}
									},
									{
										"source": {
											"name": "Total Goods & Services inc Ins",
											"type": "Decimal",
											"physicalType": "String"
										},
										"sink": {
											"name": "TotalGoodsAndServicesIncIns",
											"type": "Decimal",
											"physicalType": "decimal"
										}
									},
									{
										"source": {
											"name": "Financed",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Financed",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Finance Provider",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "FinanceProvider",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Fin Type",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "FinanceType",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Finance Scheme",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "FinanceScheme",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Loan Term",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "LoanTerm",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "APR",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "APR",
											"type": "Decimal",
											"physicalType": "decimal"
										}
									},
									{
										"source": {
											"name": "Flat Rate",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "FlatRate",
											"type": "Decimal",
											"physicalType": "decimal"
										}
									},
									{
										"source": {
											"name": "Finance Balance",
											"type": "Decimal",
											"physicalType": "String"
										},
										"sink": {
											"name": "FinanceBalance",
											"type": "Decimal",
											"physicalType": "decimal"
										}
									},
									{
										"source": {
											"name": "Volume Bonus",
											"type": "Decimal",
											"physicalType": "String"
										},
										"sink": {
											"name": "VolumeBonus",
											"type": "Decimal",
											"physicalType": "decimal"
										}
									},
									{
										"source": {
											"name": "Commission",
											"type": "Decimal",
											"physicalType": "String"
										},
										"sink": {
											"name": "Commission",
											"type": "Decimal",
											"physicalType": "decimal"
										}
									},
									{
										"source": {
											"name": "DOC Fee",
											"type": "Decimal",
											"physicalType": "String"
										},
										"sink": {
											"name": "DocFee",
											"type": "Decimal",
											"physicalType": "decimal"
										}
									},
									{
										"source": {
											"name": "Finance Subsidy",
											"type": "Decimal",
											"physicalType": "String"
										},
										"sink": {
											"name": "FinanceSubsidy",
											"type": "Decimal",
											"physicalType": "decimal"
										}
									},
									{
										"source": {
											"name": "Total Fin Margin",
											"type": "Decimal",
											"physicalType": "String"
										},
										"sink": {
											"name": "TotalFinanceMargin",
											"type": "Decimal",
											"physicalType": "decimal"
										}
									},
									{
										"source": {
											"name": "GAP",
											"type": "Decimal",
											"physicalType": "String"
										},
										"sink": {
											"name": "GAP",
											"type": "Decimal",
											"physicalType": "decimal"
										}
									},
									{
										"source": {
											"name": "GAP Product",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "GapProduct",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "War",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Warranty",
											"type": "Decimal",
											"physicalType": "decimal"
										}
									},
									{
										"source": {
											"name": "War Product",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "WarrantyProduct",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Ext",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Extras",
											"type": "Decimal",
											"physicalType": "decimal"
										}
									},
									{
										"source": {
											"name": "Ext Product",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "ExtrasProduct",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Paint",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Paint",
											"type": "Decimal",
											"physicalType": "decimal"
										}
									},
									{
										"source": {
											"name": "Paint Product",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "PaintProduct",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Total Ins Margin",
											"type": "Decimal",
											"physicalType": "String"
										},
										"sink": {
											"name": "TotalInsMargin",
											"type": "Decimal",
											"physicalType": "decimal"
										}
									},
									{
										"source": {
											"name": "Total F & I Margin",
											"type": "Decimal",
											"physicalType": "String"
										},
										"sink": {
											"name": "TotalFandIMargin",
											"type": "Decimal",
											"physicalType": "decimal"
										}
									},
									{
										"source": {
											"name": "Volume Bonus Central",
											"type": "Decimal",
											"physicalType": "String"
										},
										"sink": {
											"name": "VolumeBonusCentral",
											"type": "Decimal",
											"physicalType": "decimal"
										}
									},
									{
										"source": {
											"name": "DOC Fee Central",
											"type": "Decimal",
											"physicalType": "String"
										},
										"sink": {
											"name": "DOCFeeCentral",
											"type": "Decimal",
											"physicalType": "decimal"
										}
									},
									{
										"source": {
											"name": "Total Central Income",
											"type": "Decimal",
											"physicalType": "String"
										},
										"sink": {
											"name": "TotalCentralIncome",
											"type": "Decimal",
											"physicalType": "decimal"
										}
									},
									{
										"source": {
											"name": "Days in Stock",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "DaysInStock",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "Last Advertised Price",
											"type": "Decimal",
											"physicalType": "String"
										},
										"sink": {
											"name": "LastAdvertisedPrice",
											"type": "Decimal",
											"physicalType": "decimal"
										}
									},
									{
										"source": {
											"name": "Model Analysis Code",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "ModelAnalysisCode",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "SIV",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "SIV",
											"type": "Decimal",
											"physicalType": "decimal"
										}
									},
									{
										"source": {
											"name": "Stock Number",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "StockNo2",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Chassis No",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "ChassisNo",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Engine Size",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "EngineSize",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "Body Style",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "BodyStyle",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Mileage",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Mileage",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "Fuel Type",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "FuelType",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Transmission",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Transmission",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Colour",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Colour",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Trim Type",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "TrimType",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Number of Doors",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "NumberOfDoors",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "Gross Profit",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "GrossProfit",
											"type": "Decimal",
											"physicalType": "decimal"
										}
									},
									{
										"source": {
											"name": "Reconditioning Cost",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "ReconditioningCost",
											"type": "Decimal",
											"physicalType": "decimal"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false,
									"dateTimeFormat": "dd/MM/yyyy"
								}
							}
						},
						"inputs": [
							{
								"referenceName": "PeterVardyEnquiryMaxXLSX",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "SQLEnquiryMax",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "DoReferenceTableUpdate",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "CopyPeterVardyEnquiryMax",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[DoReferenceTableUpdate]",
							"storedProcedureParameters": {
								"SourceSystemID": {
									"value": "4",
									"type": "Int64"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "autolytica",
							"type": "LinkedServiceReference"
						}
					}
				],
				"annotations": [],
				"lastPublishTime": "2020-08-21T06:56:41Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/PeterVardyEnquiryMaxXLSX')]",
				"[concat(variables('factoryId'), '/datasets/SQLEnquiryMax')]",
				"[concat(variables('factoryId'), '/linkedServices/autolytica')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PeterVardyEnquiryMAX_Temp')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "PeterVardyEnquiryMAX",
						"type": "ExecuteDataFlow",
						"dependsOn": [
							{
								"activity": "CopyFromXLSToCSV",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "PeterVardyEnquiryMAX",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"PeterVardyEnquiryMAX": {},
									"SQLPeterVardyEnquiryMAX": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					},
					{
						"name": "CopyFromXLSToCSV",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "ExcelSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true
								}
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "Branch",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Branch",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Sales Type",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Sales Type",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Enquiry No",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Enquiry No",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Customer Title",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Customer Title",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Customer Forename",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Customer Forename",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Customer Surname",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Customer Surname",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Company Name",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Company Name",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Email",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Email",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Home Phone",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Home Phone",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Mobile Phone",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Mobile Phone",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Work Phone",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Work Phone",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Postcode",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Postcode",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Enquiry Created",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Enquiry Created",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Enquiry Type",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Enquiry Type",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Sales Executive",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Sales Executive",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Business Manager",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Business Manager",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "N/U",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "N/U",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Vehicle Type",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Vehicle Type",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Make",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Make",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Range",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Range",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Model",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Model",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Derivative",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Derivative",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Registration No",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Registration No",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Registration Date",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Registration Date",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Stock No",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Stock No24",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Group Date in Stock",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Group Date in Stock",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Branch Date in Stock",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Branch Date in Stock",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "First Order Date",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "First Order Date",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Enquiry Status",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Enquiry Status",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Invoiced Date",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Invoiced Date",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Expected Delivery Date",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Expected Delivery Date",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Delivery Date",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Delivery Date",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Delivery Category",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Delivery Category",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Metal Only",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Metal Only",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "OTR Price exc Ins",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "OTR Price exc Ins",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Total Goods & Services inc Ins",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Total Goods & Services inc Ins",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Financed",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Financed",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Finance Provider",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Finance Provider",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Fin Type",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Fin Type",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Finance Scheme",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Finance Scheme",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Loan Term",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Loan Term",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "APR",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "APR",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Flat Rate",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Flat Rate",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Finance Balance",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Finance Balance",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Volume Bonus",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Volume Bonus",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Commission",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Commission",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "DOC Fee",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "DOC Fee",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Finance Subsidy",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Finance Subsidy",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Total Fin Margin",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Total Fin Margin",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "GAP",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "GAP",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "GAP Product",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "GAP Product",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "War",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "War",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "War Product",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "War Product",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Ext",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Ext",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Ext Product",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Ext Product",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Paint",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Paint",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Paint Product",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Paint Product",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Total Ins Margin",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Total Ins Margin",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Total F & I Margin",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Total F & I Margin",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Volume Bonus Central",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Volume Bonus Central",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "DOC Fee Central",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "DOC Fee Central",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Total Central Income",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Total Central Income",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Days in Stock",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Days in Stock",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Last Advertised Price",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Last Advertised Price",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Model Analysis Code",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Model Analysis Code",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "SIV",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "SIV",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Stock Number",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Stock No66",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Chassis No",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Chassis No",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Engine Size",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Engine Size",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Body Style",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Body Style",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Mileage",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Mileage",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Fuel Type",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Fuel Type",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Transmission",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Transmission",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Colour",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Colour",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Trim Type",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Trim Type",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Number of Doors",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Number of Doors",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Gross Profit",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Gross Profit",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Reconditioning Cost",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Reconditioning Cost",
											"type": "String",
											"physicalType": "String"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "PeterVardyEnquiryMaxXLSX",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "PeterVardyEnquiryMaxCSV",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "DoReferenceTableUpdate",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "PeterVardyEnquiryMAX",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[DoReferenceTableUpdate]",
							"storedProcedureParameters": {
								"SourceSystemID": {
									"value": "4",
									"type": "Int64"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "autolytica",
							"type": "LinkedServiceReference"
						}
					}
				],
				"annotations": [],
				"lastPublishTime": "2020-08-20T20:41:55Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/PeterVardyEnquiryMAX')]",
				"[concat(variables('factoryId'), '/datasets/PeterVardyEnquiryMaxXLSX')]",
				"[concat(variables('factoryId'), '/datasets/PeterVardyEnquiryMaxCSV')]",
				"[concat(variables('factoryId'), '/linkedServices/autolytica')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PeterVardyPartsSales')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "PeterVardyPartsSales",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "PeterVardyPartsSales",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"PeterVardyPartsSales": {},
									"SQLDMSPartsSales": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"annotations": [],
				"lastPublishTime": "2020-05-24T15:24:48Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/PeterVardyPartsSales')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PeterVardySOBI1')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "CopyPeterVardyDataToSQL",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"preCopyScript": "truncate table DMSAftersalesHours",
								"writeBehavior": "insert",
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "ID",
											"type": "Int32",
											"physicalType": "String"
										},
										"sink": {
											"name": "ClientID",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "S/Type",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "SaleType",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Invoice No",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "InvoiceNumber",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "WIP No",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "WIPNumber",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "RTS code",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "RTSCode",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Sold",
											"type": "Decimal",
											"physicalType": "String"
										},
										"sink": {
											"name": "SoldHours",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 2,
											"precision": 15
										}
									},
									{
										"source": {
											"name": "Taken",
											"type": "Decimal",
											"physicalType": "String"
										},
										"sink": {
											"name": "TakenHours",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 2,
											"precision": 15
										}
									},
									{
										"source": {
											"name": "Eff",
											"type": "Decimal",
											"physicalType": "String"
										},
										"sink": {
											"name": "Efficiency",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 2,
											"precision": 15
										}
									},
									{
										"source": {
											"name": "Sale Value",
											"type": "Decimal",
											"physicalType": "String"
										},
										"sink": {
											"name": "SaleValue",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 2,
											"precision": 15
										}
									},
									{
										"source": {
											"name": "Rec Rate",
											"type": "Decimal",
											"physicalType": "String"
										},
										"sink": {
											"name": "RecoveryRate",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 2,
											"precision": 15
										}
									},
									{
										"source": {
											"name": "Mech",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Technician",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "LA",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "LA",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "LT",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "LT",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "co",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Dealer",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Operator name",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "OperatorName",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Franchise code",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "FranchiseCode",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Chassis number",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "ChassisNumber",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Registration number.",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "RegistrationNumber",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Date editted",
											"type": "DateTime",
											"physicalType": "String"
										},
										"sink": {
											"name": "DateEdited",
											"type": "DateTime",
											"physicalType": "date"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false,
									"dateTimeFormat": "dd/MM/yyyy"
								}
							}
						},
						"inputs": [
							{
								"referenceName": "PeterVardySOBI1CSV",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "SQLDMSAftersalesHours",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "EmployeeMasterMerge",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "CopyPeterVardyDataToSQL",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[DoReferenceTableUpdate]",
							"storedProcedureParameters": {
								"SourceSystemID": {
									"value": "3",
									"type": "Int32"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "autolytica",
							"type": "LinkedServiceReference"
						}
					}
				],
				"annotations": [],
				"lastPublishTime": "2020-12-23T11:00:23Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/PeterVardySOBI1CSV')]",
				"[concat(variables('factoryId'), '/datasets/SQLDMSAftersalesHours')]",
				"[concat(variables('factoryId'), '/linkedServices/autolytica')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PeterVardyVehicleStock')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "PeterVardyVehicleStock",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "PeterVardyVehicleStock",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"PeterVardyVehicleStock": {},
									"SQLVehicleStock": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					},
					{
						"name": "DoReferenceTableUpdate",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "PeterVardyVehicleStock",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[DoReferenceTableUpdate]",
							"storedProcedureParameters": {
								"SourceSystemID": {
									"value": "8",
									"type": "Int64"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "autolytica",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "UpdateVehicleStock",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "DoReferenceTableUpdate",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[UpdateVehicleStock]"
						},
						"linkedServiceName": {
							"referenceName": "autolytica",
							"type": "LinkedServiceReference"
						}
					}
				],
				"annotations": [],
				"lastPublishTime": "2020-09-16T21:47:49Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/PeterVardyVehicleStock')]",
				"[concat(variables('factoryId'), '/linkedServices/autolytica')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PeterVardyVehicleWorkshopPrep')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "PeterVardyVehicleWorkshopPrep",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "PeterVardyVehicleWorkshopPrep",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"VSBI4csv": {},
									"SQLVehicleWorkshopPrep": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"annotations": [],
				"lastPublishTime": "2020-05-25T10:32:42Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/PeterVardyVehicleWorkshopPrep')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PeterVardyWebStockFeed')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "PeterVardyWebStockFeed",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "PeterVardyWebStockFeed",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"PeterVardyWebStockFeed": {},
									"WebStockFeed": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"annotations": [],
				"lastPublishTime": "2020-08-30T19:31:16Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/PeterVardyWebStockFeed')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PeterVardyWorkshopSales')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "PeterVardySOBI1",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "PeterVardySOBI1",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"PeterVardyWorkshopSales": {},
									"SQLDMSWorkshopSales": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"annotations": [],
				"lastPublishTime": "2020-05-24T15:08:42Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/PeterVardySOBI1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/RTCCTCBookingvUpsellDeclinedReasons')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "CopyDataFromRTC",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink",
								"preCopyScript": "truncate table [dbo].[RTCRaw_BookingvUpsellDeclinedReasons]",
								"writeBehavior": "insert",
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "GroupID",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "GroupID",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "ReasonId",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "ReasonID",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "Reason",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "Reason",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Active",
											"type": "Boolean",
											"physicalType": "bit"
										},
										"sink": {
											"name": "Active",
											"type": "Boolean",
											"physicalType": "bit"
										}
									},
									{
										"source": {
											"name": "EMail",
											"type": "Boolean",
											"physicalType": "bit"
										},
										"sink": {
											"name": "Email",
											"type": "Boolean",
											"physicalType": "bit"
										}
									},
									{
										"source": {
											"name": "AddToBooking",
											"type": "Boolean",
											"physicalType": "bit"
										},
										"sink": {
											"name": "AddToBooking",
											"type": "Boolean",
											"physicalType": "bit"
										}
									},
									{
										"source": {
											"name": "Updated",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "Updated",
											"type": "DateTime",
											"physicalType": "datetime2"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "RTC_Ext_BI_Booking_vUpsellDeclinedReasons",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "SQLRTCRaw_BookingvUpsellDeclinedReasons",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"annotations": [],
				"lastPublishTime": "2020-11-21T22:16:33Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/RTC_Ext_BI_Booking_vUpsellDeclinedReasons')]",
				"[concat(variables('factoryId'), '/datasets/SQLRTCRaw_BookingvUpsellDeclinedReasons')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/RTCCTCBookingvUpsellLog')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "CopyRTCDataToAutolytica",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "GetLastUpdatedForHeaders",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert"
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "GroupID",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "GroupID",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "Dealer",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "Dealer",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Recorded",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "Recorded",
											"type": "DateTime",
											"physicalType": "datetime2"
										}
									},
									{
										"source": {
											"name": "UpsellId",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "UpsellId",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "DeclinedId",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "DeclinedId",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "FreeTextDeclinedId",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "FreeTextDeclinedId",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "Agent",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "Agent",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "Price",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 2,
											"precision": 8
										},
										"sink": {
											"name": "Price",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 2,
											"precision": 8
										}
									},
									{
										"source": {
											"name": "Declined",
											"type": "Boolean",
											"physicalType": "bit"
										},
										"sink": {
											"name": "Declined",
											"type": "Boolean",
											"physicalType": "bit"
										}
									},
									{
										"source": {
											"name": "LogSeqNo",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "LogSeqNo",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "Campaign",
											"type": "Boolean",
											"physicalType": "bit"
										},
										"sink": {
											"name": "Campaign",
											"type": "Boolean",
											"physicalType": "bit"
										}
									},
									{
										"source": {
											"name": "Updated",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "Updated",
											"type": "DateTime",
											"physicalType": "datetime2"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "RTC_Ext_BI_Booking_vUpsellLog",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "SQLRTCRaw_BookingvUpsellLog_Merge",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "GetLastUpdatedForHeaders",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderStoredProcedureName": "[[dbo].[MaxUpdatedDate]",
								"storedProcedureParameters": {
									"TableName": {
										"type": "String",
										"value": "RTCRaw_BookingvUpsellLog"
									}
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "SQLRTCRaw_LastUpdated",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "ImportMerge",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "CopyRTCDataToAutolytica",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[ImportMerge]",
							"storedProcedureParameters": {
								"tablename": {
									"value": "[[dbo].[RTCRaw_BookingvUpsellLog]",
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "autolytica",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "UpdateLastUpdatedDate",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "ImportMerge",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[UpdateLastUpdatedRTCDate]",
							"storedProcedureParameters": {
								"tablename": {
									"value": "RTCRaw_BookingvUpsellLog",
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "autolytica",
							"type": "LinkedServiceReference"
						}
					}
				],
				"annotations": [],
				"lastPublishTime": "2020-11-21T18:12:43Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/RTC_Ext_BI_Booking_vUpsellLog')]",
				"[concat(variables('factoryId'), '/datasets/SQLRTCRaw_BookingvUpsellLog_Merge')]",
				"[concat(variables('factoryId'), '/datasets/SQLRTCRaw_LastUpdated')]",
				"[concat(variables('factoryId'), '/linkedServices/autolytica')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/RTCCTCBookingvUpsells')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "CopyRTCDataToAutolytica",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"additionalColumns": [
									{
										"name": "InsertedDate",
										"value": {
											"value": "@utcnow()",
											"type": "Expression"
										}
									}
								],
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink",
								"preCopyScript": "truncate table dbo.rtcraw_bookingvupsells",
								"writeBehavior": "insert",
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "GroupID",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "GroupID",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "UpsellId",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "UpsellId",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "UpsellName",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "UpsellName",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Updated",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "Updated",
											"type": "DateTime",
											"physicalType": "datetime2"
										}
									},
									{
										"source": {
											"name": "InsertedDate"
										},
										"sink": {
											"name": "InsertedDate",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "RTC_Ext_BI_Booking_vUpsells",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "SQLRTCRaw_GroupvUpsells",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"annotations": [],
				"lastPublishTime": "2020-11-21T18:12:43Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/RTC_Ext_BI_Booking_vUpsells')]",
				"[concat(variables('factoryId'), '/datasets/SQLRTCRaw_GroupvUpsells')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/RTCCTCContactvContactTypes')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "CopyRTCDataToAutolytica",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink",
								"preCopyScript": "truncate table [dbo].[RTCRaw_ContactvContactTypes]",
								"writeBehavior": "insert",
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "GroupID",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "GroupID",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "ContCode",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "ContCode",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Description",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "Description",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Type",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "Type",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Analysis",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "Analysis",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "AnalysisGroup",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "AnalysisGroup",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Updated",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "Updated",
											"type": "DateTime",
											"physicalType": "datetime2"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "RTC_Ext_BI_Contact_vContactTypes",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "SQLRTCRaw_ContactvContactTypes",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"annotations": [],
				"lastPublishTime": "2020-10-18T09:42:54Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/RTC_Ext_BI_Contact_vContactTypes')]",
				"[concat(variables('factoryId'), '/datasets/SQLRTCRaw_ContactvContactTypes')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/RTCCTCContactvContacts')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "CopyRTCDataToAutolytica",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "GetLastUpdatedForHeaders",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": {
									"value": "@concat('select * from BI_Contact_vContacts where updated > ''',activity('GetLastUpdatedForHeaders').output.firstrow.lastupdated,'''')",
									"type": "Expression"
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert"
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "GroupID",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "GroupID",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "SeqNo",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "SeqNo",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "Dealer",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "Dealer",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "ContCode",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "ContCode",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Notes1",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "Notes1",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Notes2",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "Notes2",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Notes3",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "Notes3",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "ContDate",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "ContDate",
											"type": "DateTime",
											"physicalType": "datetime2"
										}
									},
									{
										"source": {
											"name": "FollDate",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "FollDate",
											"type": "DateTime",
											"physicalType": "datetime2"
										}
									},
									{
										"source": {
											"name": "Complete",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "Complete",
											"type": "DateTime",
											"physicalType": "datetime2"
										}
									},
									{
										"source": {
											"name": "CompleteCode",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "CompleteCode",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "FollCode",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "FollCode",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Booking",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "Booking",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "Value",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 2,
											"precision": 6
										},
										"sink": {
											"name": "Value",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 2,
											"precision": 6
										}
									},
									{
										"source": {
											"name": "OpNum",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "OpNum",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "RegNo",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "RegNo",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Model",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "Model",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "VehDesc",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "VehDesc",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "RegDate",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "RegDate",
											"type": "DateTime",
											"physicalType": "datetime2"
										}
									},
									{
										"source": {
											"name": "Franchise",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Franchise",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "HeaderId",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "HeaderId",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "ItemId",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "ItemId",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "GroupedRAG",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "GroupedRAG",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "OpNumCreated",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "OpNumCreated",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "Updated",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "Updated",
											"type": "DateTime",
											"physicalType": "datetime2"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "RTC_Ext_BI_Contact_vContacts",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "SQLRTCRaw_ContactvContacts_Merge",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "GetLastUpdatedForHeaders",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderStoredProcedureName": "[[dbo].[MaxUpdatedDate]",
								"storedProcedureParameters": {
									"TableName": {
										"type": "String",
										"value": "RTCRaw_ContactvContacts"
									}
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "SQLRTCRaw_LastUpdated",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "ImportMerge",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "CopyRTCDataToAutolytica",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[ImportMerge]",
							"storedProcedureParameters": {
								"tablename": {
									"value": "[[dbo].[RTCRaw_ContactvContacts]",
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "autolytica",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "UpdateLastUpdatedDate",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "ImportMerge",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[UpdateLastUpdatedRTCDate]",
							"storedProcedureParameters": {
								"tablename": {
									"value": "RTCRaw_ContactvContacts",
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "autolytica",
							"type": "LinkedServiceReference"
						}
					}
				],
				"annotations": [],
				"lastPublishTime": "2020-10-18T12:09:53Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/RTC_Ext_BI_Contact_vContacts')]",
				"[concat(variables('factoryId'), '/datasets/SQLRTCRaw_ContactvContacts_Merge')]",
				"[concat(variables('factoryId'), '/datasets/SQLRTCRaw_LastUpdated')]",
				"[concat(variables('factoryId'), '/linkedServices/autolytica')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/RTCCTCContactvContactsParms')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "CopyRTCDataToAutolytica",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink",
								"preCopyScript": "truncate table [dbo].[RTCRaw_ContactvContactParms]",
								"writeBehavior": "insert",
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "GroupID",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "GroupID",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "Dealer",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "Dealer",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "ContCode",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "ContCode",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Description",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "Description",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "FollCode",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "FollCode",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "FollDays",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "FollDays",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "Type",
											"type": "String",
											"physicalType": "char"
										},
										"sink": {
											"name": "Type",
											"type": "String",
											"physicalType": "char"
										}
									},
									{
										"source": {
											"name": "ReportType",
											"type": "String",
											"physicalType": "char"
										},
										"sink": {
											"name": "ReportType",
											"type": "String",
											"physicalType": "char"
										}
									},
									{
										"source": {
											"name": "Updated",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "Updated",
											"type": "DateTime",
											"physicalType": "datetime2"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "RTC_Ext_BI_Contact_vContactsParms",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "SQLRTCRaw_ContactvContactParms",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"annotations": [],
				"lastPublishTime": "2020-10-18T09:35:54Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/RTC_Ext_BI_Contact_vContactsParms')]",
				"[concat(variables('factoryId'), '/datasets/SQLRTCRaw_ContactvContactParms')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/RTCCTCGroupvAgents')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "CopyRTCDataToSQL",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink",
								"preCopyScript": "truncate table [dbo].[RTCRaw_GroupvAgents]",
								"writeBehavior": "insert",
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "GroupID",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "GroupID",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "Grp",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "Grp",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Name",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "Name",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "OpNum",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "OpNum",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "Updated",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "Updated",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "RTC_Ext_BI_Group_vAgents",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "SQLRTCRaw_GroupvAgents",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"annotations": [],
				"lastPublishTime": "2020-11-21T15:47:23Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/RTC_Ext_BI_Group_vAgents')]",
				"[concat(variables('factoryId'), '/datasets/SQLRTCRaw_GroupvAgents')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/RTCCTCGroupvApplication')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "CopyRTCDataToAutolytica",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert",
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "GroupID",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "GroupID",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "ApplicationId",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "ApplicationId",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "ApplicationName",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "ApplicationName",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Updated",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "Updated",
											"type": "DateTime",
											"physicalType": "datetime2"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "RTC_Ext_BI_Group_vApplication",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "SQLRTCRaw_GroupvApplication_Merge",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"annotations": [],
				"lastPublishTime": "2020-10-13T22:36:32Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/RTC_Ext_BI_Group_vApplication')]",
				"[concat(variables('factoryId'), '/datasets/SQLRTCRaw_GroupvApplication_Merge')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/RTCCTCGroupvEmailLog')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "CopyDataFromRTC",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink",
								"preCopyScript": "truncate table [dbo].[RTCRaw_GroupvEmailLog]",
								"writeBehavior": "insert",
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "GroupID",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "GroupID",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "EmailLogID",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "EmailLogID",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "Dealer",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "Dealer",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "AgentID",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "AgentID",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "RegNo",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "RegNo",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Created",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "Created",
											"type": "DateTime",
											"physicalType": "datetime2"
										}
									},
									{
										"source": {
											"name": "ContSeqNo",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "ContSeqNo",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "ErrorLogID",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "ErrorLogID",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "Sent",
											"type": "Boolean",
											"physicalType": "bit"
										},
										"sink": {
											"name": "Sent",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "RemoteEmailID",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "RemoteEmailID",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "ServiceID",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "ServiceID",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "EmailChangedID",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "EmailChangedID",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "Updated",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "Updated",
											"type": "DateTime",
											"physicalType": "datetime2"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "RTC_Ext_BI_Group_vEmailLog",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "SQLRTCRaw_GroupvEmailLog",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"annotations": [],
				"lastPublishTime": "2021-05-18T19:33:45Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/RTC_Ext_BI_Group_vEmailLog')]",
				"[concat(variables('factoryId'), '/datasets/SQLRTCRaw_GroupvEmailLog')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/RTCCTCGroupvEmailLogNotifications')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "CopyDataFromRTC",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert"
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "GroupID",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "GroupID",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "ID",
											"type": "Int64",
											"physicalType": "bigint"
										},
										"sink": {
											"name": "ID",
											"type": "Int64",
											"physicalType": "bigint"
										}
									},
									{
										"source": {
											"name": "EmailID",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "EmailID",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "EventType",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "EventType",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "SmtpID",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "SmtpID",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Response",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Response",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "DeliveryAttempt",
											"type": "Int16",
											"physicalType": "smallint"
										},
										"sink": {
											"name": "DeliveryAttempt",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "BounceType",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "BounceType",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "BounceStatus",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "BounceStatus",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "IP",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "IP",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "UserAgent",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "UserAgent",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "TimeStamp",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "TimeStamp",
											"type": "DateTime",
											"physicalType": "datetime2"
										}
									},
									{
										"source": {
											"name": "Created",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "Created",
											"type": "DateTime",
											"physicalType": "datetime2"
										}
									},
									{
										"source": {
											"name": "Dealer",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "Dealer",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "EmailLogID",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "EmailLogID",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "Updated",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "Updated",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "RTC_Ext_BI_Group_vEmailLogEventNotifications",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "SQLRTCRaw_GroupvEmailLogNotifications",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"annotations": [],
				"lastPublishTime": "2020-11-14T20:28:17Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/RTC_Ext_BI_Group_vEmailLogEventNotifications')]",
				"[concat(variables('factoryId'), '/datasets/SQLRTCRaw_GroupvEmailLogNotifications')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/RTCCTCGroupvLogFile')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "CopyRTCDataToAutolytica",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "GetLastUpdatedForHeaders",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"additionalColumns": [
									{
										"name": "InsertedDate",
										"value": {
											"value": "@utcnow()",
											"type": "Expression"
										}
									}
								],
								"sqlReaderQuery": {
									"value": "@concat('select * from BI_Group_vLogFile where created > ''',activity('GetLastUpdatedForHeaders').output.firstrow.lastupdated,'''')",
									"type": "Expression"
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert"
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "GroupID",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "GroupID",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "Seq",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "Seq",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "Dealer",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "Dealer",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Booking",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "Booking",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "Created",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "Created",
											"type": "DateTime",
											"physicalType": "datetime2"
										}
									},
									{
										"source": {
											"name": "DateIn",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "DateIn",
											"type": "DateTime",
											"physicalType": "datetime2"
										}
									},
									{
										"source": {
											"name": "ServCode",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "ServCode",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Model",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Model",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Tran1",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Tran1",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Tran2",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Tran2",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Tran3",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Tran3",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "TranComm",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "TranComm",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "OpNum",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "OpNum",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "RegNo",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "RegNo",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "RegDate",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "RegDate",
											"type": "DateTime",
											"physicalType": "datetime2"
										}
									},
									{
										"source": {
											"name": "Account",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Account",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "ContCode",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "ContCode",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "PayType",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "PayType",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "OverRide",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "OverRide",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "SACA",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "SACA",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "SACU",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "SACU",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "SourceOfBusiness",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "SourceOfBusiness",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "LastServ",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "LastServ",
											"type": "DateTime",
											"physicalType": "datetime2"
										}
									},
									{
										"source": {
											"name": "NextServ",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "NextServ",
											"type": "DateTime",
											"physicalType": "datetime2"
										}
									},
									{
										"source": {
											"name": "MotDate",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "MotDate",
											"type": "DateTime",
											"physicalType": "datetime2"
										}
									},
									{
										"source": {
											"name": "Campaign",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "Campaign",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "CampaignPrice",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 2,
											"precision": 8
										},
										"sink": {
											"name": "CampaignPrice",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 2,
											"precision": 8
										}
									},
									{
										"source": {
											"name": "TotalValue",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 2,
											"precision": 8
										},
										"sink": {
											"name": "TotalValue",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 2,
											"precision": 8
										}
									},
									{
										"source": {
											"name": "ContSeqNo",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "ContSeqNo",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "ApplicationId",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "ApplicationId",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "Updated",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "Updated",
											"type": "DateTime",
											"physicalType": "datetime2"
										}
									},
									{
										"source": {
											"name": "InsertedDate"
										},
										"sink": {
											"name": "InsertedDate",
											"type": "DateTime",
											"physicalType": "datetime2"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "RTC_Ext_BI_Group_vLogFile",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "SQLRTCRaw_GroupvLogFile",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "GetLastUpdatedForHeaders",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderStoredProcedureName": "[[dbo].[MaxUpdatedDate]",
								"storedProcedureParameters": {
									"TableName": {
										"type": "String",
										"value": "RTCRaw_GroupvLogFile"
									}
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "SQLRTCRaw_LastUpdated",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "UpdateLastUpdatedDate",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "CopyRTCDataToAutolytica",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[UpdateLastUpdatedRTCDate]",
							"storedProcedureParameters": {
								"tablename": {
									"value": "RTCRaw_GroupvLogFile",
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "autolytica",
							"type": "LinkedServiceReference"
						}
					}
				],
				"annotations": [],
				"lastPublishTime": "2020-11-06T08:51:08Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/RTC_Ext_BI_Group_vLogFile')]",
				"[concat(variables('factoryId'), '/datasets/SQLRTCRaw_GroupvLogFile')]",
				"[concat(variables('factoryId'), '/datasets/SQLRTCRaw_LastUpdated')]",
				"[concat(variables('factoryId'), '/linkedServices/autolytica')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/RTCCTCGroupvLogFile_copy1')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "CopyRTCDataToAutolytica",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "select count(*) from  BI_Group_vLogFile where updated <> created",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert"
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "GroupID",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "GroupID",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "Seq",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "Seq",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "Dealer",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "Dealer",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Booking",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "Booking",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "Created",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "Created",
											"type": "DateTime",
											"physicalType": "datetime2"
										}
									},
									{
										"source": {
											"name": "DateIn",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "DateIn",
											"type": "DateTime",
											"physicalType": "datetime2"
										}
									},
									{
										"source": {
											"name": "ServCode",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "ServCode",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Model",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Model",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Tran1",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Tran1",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Tran2",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Tran2",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Tran3",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Tran3",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "TranComm",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "TranComm",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "OpNum",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "OpNum",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "RegNo",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "RegNo",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "RegDate",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "RegDate",
											"type": "DateTime",
											"physicalType": "datetime2"
										}
									},
									{
										"source": {
											"name": "Account",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Account",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "ContCode",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "ContCode",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "PayType",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "PayType",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "OverRide",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "OverRide",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "SACA",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "SACA",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "SACU",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "SACU",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "SourceOfBusiness",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "SourceOfBusiness",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "LastServ",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "LastServ",
											"type": "DateTime",
											"physicalType": "datetime2"
										}
									},
									{
										"source": {
											"name": "NextServ",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "NextServ",
											"type": "DateTime",
											"physicalType": "datetime2"
										}
									},
									{
										"source": {
											"name": "MotDate",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "MotDate",
											"type": "DateTime",
											"physicalType": "datetime2"
										}
									},
									{
										"source": {
											"name": "Campaign",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "Campaign",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "CampaignPrice",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 2,
											"precision": 8
										},
										"sink": {
											"name": "CampaignPrice",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 2,
											"precision": 8
										}
									},
									{
										"source": {
											"name": "TotalValue",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 2,
											"precision": 8
										},
										"sink": {
											"name": "TotalValue",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 2,
											"precision": 8
										}
									},
									{
										"source": {
											"name": "ContSeqNo",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "ContSeqNo",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "ApplicationId",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "ApplicationId",
											"type": "Int32",
											"physicalType": "int"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "RTC_Ext_BI_Group_vLogFile",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "SQLRTCRaw_GroupvLogFile_Merge",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"annotations": [],
				"lastPublishTime": "2020-10-15T20:09:05Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/RTC_Ext_BI_Group_vLogFile')]",
				"[concat(variables('factoryId'), '/datasets/SQLRTCRaw_GroupvLogFile_Merge')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/RTCCTCGroupvSMSLog')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "CopyDataFromRTC",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink",
								"preCopyScript": "truncate table [dbo].[RTCRaw_GroupvSMSLog]",
								"writeBehavior": "insert",
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "GroupID",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "GroupID",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "SMSLogID",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "SMSLogID",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "LinkSMSID",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "LinkSMSID",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "DealerID",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "DealerID",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "AgentID",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "AgentID",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "BookingID",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "BookingID",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "SMSID",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "SMSID",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "SendDate",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "SendDate",
											"type": "DateTime",
											"physicalType": "datetime2"
										}
									},
									{
										"source": {
											"name": "Created",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "Created",
											"type": "DateTime",
											"physicalType": "datetime2"
										}
									},
									{
										"source": {
											"name": "ContSeqNo",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "ContSeqNo",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "ErrorLogID",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "ErrorLogID",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "TypeID",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "TypeID",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "Updated",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "Updated",
											"type": "DateTime",
											"physicalType": "datetime2"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "RTC_Ext_BI_Group_vSMSLog",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "SQLRTCRaw_GroupvSMSLog",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"annotations": [],
				"lastPublishTime": "2021-05-18T19:34:22Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/RTC_Ext_BI_Group_vSMSLog')]",
				"[concat(variables('factoryId'), '/datasets/SQLRTCRaw_GroupvSMSLog')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/RTCCTCInspectionvMediaFile')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "CopyDataFromRTC",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink",
								"preCopyScript": "truncate table [dbo].[RTCRaw_InspectionvMediafile]",
								"writeBehavior": "insert",
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "GroupID",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "GroupID",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "InspectionID",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "InspectionID",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "InspectionItemID",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "InspectionItemID",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "FileType",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "FileType",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "Dealer",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "Dealer",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Complete",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "Complete",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "Status",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "Status",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "Updated",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "Updated",
											"type": "DateTime",
											"physicalType": "datetime2"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "RTC_Ext_BI_Inspection_vMediafile",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "SQLRTCRaw_InspectionvMediafile",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"annotations": [],
				"lastPublishTime": "2020-11-14T22:18:33Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/RTC_Ext_BI_Inspection_vMediafile')]",
				"[concat(variables('factoryId'), '/datasets/SQLRTCRaw_InspectionvMediafile')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/RTCCTCvBookingStatus')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "CopyRTCDataToAutolytica",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"additionalColumns": [
									{
										"name": "InsertedDate",
										"value": {
											"value": "@utcnow()",
											"type": "Expression"
										}
									}
								],
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink",
								"preCopyScript": "truncate table [dbo].[RTCRaw_BookingvBookingStatus]",
								"writeBehavior": "insert",
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "GroupID",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "GroupID",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "Dealer",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "Dealer",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Code",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "Code",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Description",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "Description",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "BaseCode",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "BaseCode",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Updated",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "Updated",
											"type": "DateTime",
											"physicalType": "datetime2"
										}
									},
									{
										"source": {
											"name": "InsertedDate"
										},
										"sink": {
											"name": "InsertedDate",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "RTC_Ext_BI_BookingStatus",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "SQLRTCRaw_vBookingStatus",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"annotations": [],
				"lastPublishTime": "2020-11-21T18:12:43Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/RTC_Ext_BI_BookingStatus')]",
				"[concat(variables('factoryId'), '/datasets/SQLRTCRaw_vBookingStatus')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/RTCCTCvRepairCodes')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "CopyRTCDataToAutolytica",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert",
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "GroupID",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "GroupID",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "Dealer",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "Dealer",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "RepairCode",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "RepairCode",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Text1",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "Text1",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Text2",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "Text2",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Text3",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "Text3",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Text4",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "Text4",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Text5",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "Text5",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Text6",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "Text6",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Allowed",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 2,
											"precision": 7
										},
										"sink": {
											"name": "Allowed",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 2,
											"precision": 7
										}
									},
									{
										"source": {
											"name": "LabType",
											"type": "String",
											"physicalType": "char"
										},
										"sink": {
											"name": "LabType",
											"type": "String",
											"physicalType": "char"
										}
									},
									{
										"source": {
											"name": "Price",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 2,
											"precision": 7
										},
										"sink": {
											"name": "Price",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 2,
											"precision": 7
										}
									},
									{
										"source": {
											"name": "Service",
											"type": "String",
											"physicalType": "char"
										},
										"sink": {
											"name": "Service",
											"type": "String",
											"physicalType": "char"
										}
									},
									{
										"source": {
											"name": "isUpsell",
											"type": "Boolean",
											"physicalType": "bit"
										},
										"sink": {
											"name": "isUpsell",
											"type": "Boolean",
											"physicalType": "bit"
										}
									},
									{
										"source": {
											"name": "OnlineGroup",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "OnlineGroup",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "OnlineDescription",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "OnlineDescription",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "LinkedUpsellCode",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "LinkedUpsellCode",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "AWS",
											"type": "Boolean",
											"physicalType": "bit"
										},
										"sink": {
											"name": "AWS",
											"type": "Boolean",
											"physicalType": "bit"
										}
									},
									{
										"source": {
											"name": "CSIContCode",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "CSIContCode",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "VehicleVisualsPartId",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "VehicleVisualsPartId",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Updated",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "Updated",
											"type": "DateTime",
											"physicalType": "datetime2"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "RTC_Ext_BI_vRepairCodes",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "SQLRTCRaw_vRepairCodes_Merge",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"annotations": [],
				"lastPublishTime": "2020-10-13T22:33:14Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/RTC_Ext_BI_vRepairCodes')]",
				"[concat(variables('factoryId'), '/datasets/SQLRTCRaw_vRepairCodes_Merge')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/RTCCheckValues')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "CheckValues",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"additionalColumns": [
									{
										"name": "Type",
										"value": "8"
									}
								],
								"sqlReaderQuery": "select YEAR(updated) as GroupID, month(updated) as ID, COUNT(*) as ValueToCheck\nfrom bi_group_vlogfile\nwhere year(updated) >= 2011\ngroup by YEAR(updated), month(updated)",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink",
								"preCopyScript": "delete from rtc_import_check where type = 8",
								"writeBehavior": "insert",
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "GroupID",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "GroupID",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "ID",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "ID",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "Type"
										},
										"sink": {
											"name": "Type",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "ValueToCheck",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "ValueToCheck",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 2,
											"precision": 18
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "RTC_Ext_BI_Contact_vContacts",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "RTC_Import_Check",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"annotations": [],
				"lastPublishTime": "2020-12-31T10:57:55Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/RTC_Ext_BI_Contact_vContacts')]",
				"[concat(variables('factoryId'), '/datasets/RTC_Import_Check')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/RTCGroupvDealerRegions')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "CopyDataFromRTC",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink",
								"preCopyScript": "truncate table RTCRaw_GroupvDealerRegions",
								"writeBehavior": "insert",
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "GroupID",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "GroupID"
										}
									},
									{
										"source": {
											"name": "Id",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "id"
										}
									},
									{
										"source": {
											"name": "Description",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "Description"
										}
									},
									{
										"source": {
											"name": "Updated",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "Updated"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "RTC_Ext_BI_Group_vDealersRegions",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "SQLRTCRaw_GroupvDealerRegions",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"annotations": [],
				"lastPublishTime": "2020-11-14T12:43:03Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/RTC_Ext_BI_Group_vDealersRegions')]",
				"[concat(variables('factoryId'), '/datasets/SQLRTCRaw_GroupvDealerRegions')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/RTCImportCheck')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "ImportHeaderCheckData",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"additionalColumns": [
									{
										"name": "Type",
										"value": "1"
									}
								],
								"sqlReaderQuery": "select groupid, id, created, Updated from dbo.BI_Inspection_vISHeaders",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink",
								"preCopyScript": "delete from dbo.RTC_Import_Check where type = 1",
								"writeBehavior": "insert",
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "groupid",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "GroupID",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "id",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "ID",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "created",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "KeyDate",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "Updated",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "UpdatedDate",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "Type"
										},
										"sink": {
											"name": "Type",
											"type": "Int32",
											"physicalType": "int"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "RTC_Ext_BI_Inspection_vISHeaders",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "RTC_Import_Check",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "ImportItemsCheckData",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "ImportHeaderCheckData",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"additionalColumns": [
									{
										"name": "Type",
										"value": "2"
									}
								],
								"sqlReaderQuery": "select groupid, id, itemid, AuthDate, Updated from dbo.BI_Inspection_vISItems",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink",
								"preCopyScript": "delete from dbo.RTC_Import_Check where type = 2",
								"writeBehavior": "insert",
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "groupid",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "GroupID",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "id",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "ID",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "itemid",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "ItemID",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "AuthDate",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "KeyDate",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "Updated",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "UpdatedDate",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "Type"
										},
										"sink": {
											"name": "Type",
											"type": "Int32",
											"physicalType": "int"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "RTC_Ext_BI_Inspection_vISItems",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "RTC_Import_Check",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "ImportLabourCheckData",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "ImportItemsCheckData",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"additionalColumns": [
									{
										"name": "Type",
										"value": "3"
									}
								],
								"sqlReaderQuery": "select groupid, id, itemid, Labourid, Updated from dbo.BI_Inspection_vISLabour",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink",
								"preCopyScript": "delete from dbo.RTC_Import_Check where type = 3",
								"writeBehavior": "insert",
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "groupid",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "GroupID",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "id",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "ID",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "itemid",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "ItemID",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "Labourid",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "PartsOrLabourID",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "Updated",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "UpdatedDate",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "Type"
										},
										"sink": {
											"name": "Type",
											"type": "Int32",
											"physicalType": "int"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "RTC_EXT_BI_Inspection_ISLabour",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "RTC_Import_Check",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "ImportPartsCheckData",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "ImportLabourCheckData",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"additionalColumns": [
									{
										"name": "Type",
										"value": "4"
									}
								],
								"sqlReaderQuery": "select groupid, id, itemid, Partsid, Updated from dbo.BI_Inspection_vISParts",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink",
								"preCopyScript": "delete from dbo.RTC_Import_Check where type = 4",
								"writeBehavior": "insert",
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "groupid",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "GroupID",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "id",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "ID",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "itemid",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "ItemID",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "Partsid",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "PartsOrLabourID",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "Updated",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "UpdatedDate",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "Type"
										},
										"sink": {
											"name": "Type",
											"type": "Int32",
											"physicalType": "int"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "RTC_EXT_BI_Inspection_ISParts",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "RTC_Import_Check",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"annotations": [],
				"lastPublishTime": "2020-12-13T09:17:53Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/RTC_Ext_BI_Inspection_vISHeaders')]",
				"[concat(variables('factoryId'), '/datasets/RTC_Import_Check')]",
				"[concat(variables('factoryId'), '/datasets/RTC_Ext_BI_Inspection_vISItems')]",
				"[concat(variables('factoryId'), '/datasets/RTC_EXT_BI_Inspection_ISLabour')]",
				"[concat(variables('factoryId'), '/datasets/RTC_EXT_BI_Inspection_ISParts')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/RTCVHCDealers')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "CopyDateFromRTCToAutolytica",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink",
								"preCopyScript": "truncate table RTCRaw_Dealers",
								"writeBehavior": "insert",
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "GroupID",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "GroupID",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "Dealer",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "DealerID",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Name",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "DealerName",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Marque",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "Marque",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "DMS",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "DMS",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Updated",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "Updated",
											"type": "DateTime",
											"physicalType": "datetime2"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "RTC_Ext_BI_Group_vDealers",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "SQLRTCRaw_Dealers",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"annotations": [],
				"lastPublishTime": "2020-07-19T14:13:21Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/RTC_Ext_BI_Group_vDealers')]",
				"[concat(variables('factoryId'), '/datasets/SQLRTCRaw_Dealers')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/RTCVHCEmployees')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "CopyRTCDataToAutolytica",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink",
								"preCopyScript": "truncate table RTCRaw_Employees",
								"writeBehavior": "insert",
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "GroupID",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "GroupID",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "Dealer",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "DealerID",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "EmpNo",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "EmployeeNumber",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "Name",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "Name",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "EmpType",
											"type": "String",
											"physicalType": "char"
										},
										"sink": {
											"name": "EmployeeType",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "OpNum",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "OpNum",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "Updated",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "Updated",
											"type": "DateTime",
											"physicalType": "datetime2"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "RTC_Ext_BI_Group_vEmployee",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "SQLRTCRaw_Employees",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"annotations": [],
				"lastPublishTime": "2020-07-19T14:23:10Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/RTC_Ext_BI_Group_vEmployee')]",
				"[concat(variables('factoryId'), '/datasets/SQLRTCRaw_Employees')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/RTCVHCGroupExtStatus')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "CopyRTCDataToAutolytica",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink",
								"preCopyScript": "truncate table RTCRaw_GroupvExtStatus",
								"writeBehavior": "insert",
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "GroupID",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "GroupID",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "ExtStatusID",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "ExtStatusID",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "Description",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Description",
											"type": "String",
											"physicalType": "nvarchar"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "RTC_Ext_BI_Group_vExtStatus",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "SQLRTCRaw_GroupExtStatus",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"annotations": [],
				"lastPublishTime": "2020-07-19T14:45:35Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/RTC_Ext_BI_Group_vExtStatus')]",
				"[concat(variables('factoryId'), '/datasets/SQLRTCRaw_GroupExtStatus')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/RTCVHCGroupISSections')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "CopyRTCDataToAutolytica",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink",
								"preCopyScript": "truncate table RTCRaw_GroupvISSections",
								"writeBehavior": "insert",
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "GroupID",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "GroupID",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "Dealer",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "Dealer",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "TypeId",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "TypeId",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "SectionId",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "SectionId",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "Name",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "Name",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "LongName",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "LongName",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "InUse",
											"type": "Boolean",
											"physicalType": "bit"
										},
										"sink": {
											"name": "InUse",
											"type": "Boolean",
											"physicalType": "bit"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "RTC_Ext_BI_Group_vISSections",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "SQLRTCRaw_GroupvISSections",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"annotations": [],
				"lastPublishTime": "2020-07-19T14:56:04Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/RTC_Ext_BI_Group_vISSections')]",
				"[concat(variables('factoryId'), '/datasets/SQLRTCRaw_GroupvISSections')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/RTCVHCGroupISSubSections')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "CopyRTCDataToAutolytica",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink",
								"preCopyScript": "truncate table RTCRaw_GroupvISSubSections",
								"writeBehavior": "insert",
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "GroupID",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "GroupID",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "Dealer",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "Dealer",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "TypeId",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "TypeId",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "SectionId",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "SectionId",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "SubSectionId",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "SubSectionId",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "DisplaySeq",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "DisplaySeq",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "Name",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "Name",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "LongName",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "LongName",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "CategoryId",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "CategoryId",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "Special",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "Special",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "InUse",
											"type": "Boolean",
											"physicalType": "bit"
										},
										"sink": {
											"name": "InUse",
											"type": "Boolean",
											"physicalType": "bit"
										}
									},
									{
										"source": {
											"name": "Mandatory",
											"type": "Boolean",
											"physicalType": "bit"
										},
										"sink": {
											"name": "Mandatory",
											"type": "Boolean",
											"physicalType": "bit"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "RTC_Ext_BI_Group_vISSubSections",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "SQLRTCRaw_GroupvISSubSections",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"annotations": [],
				"lastPublishTime": "2020-07-19T15:03:49Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/RTC_Ext_BI_Group_vISSubSections')]",
				"[concat(variables('factoryId'), '/datasets/SQLRTCRaw_GroupvISSubSections')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/RTCVHCInspectionISCheckTypes')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "CopyRTCDataToAutolytica",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink",
								"preCopyScript": "truncate table RTCRaw_InspectionISCheckTypes",
								"writeBehavior": "insert",
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "GroupID",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "GroupID",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "Dealer",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "DealerID",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "TypeId",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "TypeId",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Name",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "Name",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Type",
											"type": "String",
											"physicalType": "char"
										},
										"sink": {
											"name": "Type",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "InUse",
											"type": "Boolean",
											"physicalType": "bit"
										},
										"sink": {
											"name": "InUse",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Marque",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "Marque",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "CheckSheetType",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "CheckSheetType",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Updated",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "Updated",
											"type": "DateTime",
											"physicalType": "datetime2"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "RTC_EXT_BI_Inspection_vISCheckTypes",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "SQLRTCRaw_InspectionISCheckTypes",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"annotations": [],
				"lastPublishTime": "2020-07-19T15:27:02Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/RTC_EXT_BI_Inspection_vISCheckTypes')]",
				"[concat(variables('factoryId'), '/datasets/SQLRTCRaw_InspectionISCheckTypes')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/RTCVHCInspectionISHeaders')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Copy items from the RTC SQL server to the items table\n",
				"activities": [
					{
						"name": "CopyDataFromRTCtoAutolytica",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "GetLastUpdatedForHeaders",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": {
									"value": "@concat('select * from BI_Inspection_vISHeaders where updated > ''',activity('GetLastUpdatedForHeaders').output.firstrow.lastupdated,'''')",
									"type": "Expression"
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert"
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "GroupID",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "GroupID",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "Id",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "Id",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "Dealer",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "Dealer",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "TypeId",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "TypeId",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "Booking",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "Booking",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "RegNo",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "RegNo",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "VehDesc",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "VehDesc",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Mileage",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "Mileage",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "NextServ",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "NextServ",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "NextMot",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "NextMot",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "Created",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "Created",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "Tech",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "Tech",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "Advisor",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "Advisor",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "hcType",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "hcType",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "InputStarted",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "InputStarted",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "InputCompleted",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "InputCompleted",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "PartsIdentified",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "PartsIdentified",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "LabourIdentified",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "LabourIdentified",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "FollowUpCompleted",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "FollowUpCompleted",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "InspectionClosed",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "InspectionClosed",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "InspectionPrinted",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "InspectionPrinted",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "PartsAssistance",
											"type": "Boolean",
											"physicalType": "bit"
										},
										"sink": {
											"name": "PartsAssistance",
											"type": "Boolean",
											"physicalType": "bit"
										}
									},
									{
										"source": {
											"name": "InvoiceValue",
											"type": "Decimal",
											"physicalType": "decimal"
										},
										"sink": {
											"name": "InvoiceValue",
											"type": "Decimal",
											"physicalType": "decimal"
										}
									},
									{
										"source": {
											"name": "InUse",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "InUse",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "PartsRequired",
											"type": "Boolean",
											"physicalType": "bit"
										},
										"sink": {
											"name": "PartsRequired",
											"type": "Boolean",
											"physicalType": "bit"
										}
									},
									{
										"source": {
											"name": "Model",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "Model",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "RegDate",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "RegDate",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "JobNo",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "JobNo",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "NotInspectedReason",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "NotInspectedReason",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "Franchise",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "Franchise",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "DMSRef",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "DMSRef",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "VehNo",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "VehNo",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "QualityControllerId",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "QualityControllerId",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "NewTyre",
											"type": "Boolean",
											"physicalType": "bit"
										},
										"sink": {
											"name": "NewTyre",
											"type": "Boolean",
											"physicalType": "bit"
										}
									},
									{
										"source": {
											"name": "TyresIdentified",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "TyresIdentified",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "ExtStatus",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "ExtStatus",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "ExtAccessed",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "ExtAccessed",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "ExtResponded",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "ExtResponded",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "EventId",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "EventId",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "UniqueBookingID",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "UniqueBookingID",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "OriginalClosedDate",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "OriginalClosedDate",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "PreAgreedWorkValue",
											"type": "Decimal",
											"physicalType": "decimal"
										},
										"sink": {
											"name": "PreAgreedWorkValue",
											"type": "Decimal",
											"physicalType": "decimal"
										}
									},
									{
										"source": {
											"name": "Updated",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "Updated",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "RTC_Ext_BI_Inspection_vISHeaders",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "SQLRTCRaw_InspectionvISHeaders_Merge",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "GetLastUpdatedForHeaders",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderStoredProcedureName": "[[dbo].[MaxUpdatedDate]",
								"storedProcedureParameters": {
									"TableName": {
										"type": "String",
										"value": "RTCRaw_InspectionvISHeaders"
									}
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "SQLRTCRaw_LastUpdated",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "UpdateLastUpdatedDate",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "ImportMerge",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[UpdateLastUpdatedRTCDate]",
							"storedProcedureParameters": {
								"tablename": {
									"value": "RTCRaw_InspectionvISHeaders",
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "autolytica",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "ImportMerge",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "UpdateNullDatesBeforeMerge",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[ImportMerge]",
							"storedProcedureParameters": {
								"tablename": {
									"value": "[[dbo].[RTCRaw_InspectionvISHeaders]",
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "autolytica",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "UpdateNullDatesBeforeMerge",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "CopyDataFromRTCtoAutolytica",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "UpdateISHeadersNullDatesBeforeMerge"
						},
						"linkedServiceName": {
							"referenceName": "autolytica",
							"type": "LinkedServiceReference"
						}
					}
				],
				"annotations": [],
				"lastPublishTime": "2020-09-24T20:07:17Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/RTC_Ext_BI_Inspection_vISHeaders')]",
				"[concat(variables('factoryId'), '/datasets/SQLRTCRaw_InspectionvISHeaders_Merge')]",
				"[concat(variables('factoryId'), '/datasets/SQLRTCRaw_LastUpdated')]",
				"[concat(variables('factoryId'), '/linkedServices/autolytica')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/RTCVHCInspectionISItems')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "GetLastUpdatedForHeaders",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderStoredProcedureName": "[[dbo].[MaxUpdatedDate]",
								"storedProcedureParameters": {
									"TableName": {
										"type": "String",
										"value": "RTCRaw_InspectionvISItems"
									}
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "SQLRTCRaw_LastUpdated",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "CopyDataFromRTCtoAutolytica",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "GetLastUpdatedForHeaders",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": {
									"value": "@concat('select * from BI_Inspection_vISItems where updated > ''',activity('GetLastUpdatedForHeaders').output.firstrow.lastupdated,'''')",
									"type": "Expression"
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert"
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "GroupID",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "GroupID",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "Id",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "Id",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "ItemId",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "ItemId",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "SectionId",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "SectionId",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "SubSectionId",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "SubSectionId",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "OutcomeId",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "OutcomeId",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "FollNum",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "FollNum",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "FollDate",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "FollDate",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "FollType",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "FollType",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "RAG",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "RAG",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "InnerId",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "InnerId",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "MiddleId",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "MiddleId",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "OuterId",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "OuterId",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "hcType",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "hcType",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "hcOutcome",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "hcOutcome",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "NSInnerId",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "NSInnerId",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "NSOuterId",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "NSOuterId",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "OSInnerId",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "OSInnerId",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "OSOuterId",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "OSOuterId",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "Details",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Details",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Price",
											"type": "Decimal",
											"physicalType": "decimal"
										},
										"sink": {
											"name": "Price",
											"type": "Decimal",
											"physicalType": "decimal"
										}
									},
									{
										"source": {
											"name": "PartsAssistance",
											"type": "Boolean",
											"physicalType": "bit"
										},
										"sink": {
											"name": "PartsAssistance",
											"type": "Boolean",
											"physicalType": "bit"
										}
									},
									{
										"source": {
											"name": "NoLabour",
											"type": "Boolean",
											"physicalType": "bit"
										},
										"sink": {
											"name": "NoLabour",
											"type": "Boolean",
											"physicalType": "bit"
										}
									},
									{
										"source": {
											"name": "NoParts",
											"type": "Boolean",
											"physicalType": "bit"
										},
										"sink": {
											"name": "NoParts",
											"type": "Boolean",
											"physicalType": "bit"
										}
									},
									{
										"source": {
											"name": "NoPrice",
											"type": "Boolean",
											"physicalType": "bit"
										},
										"sink": {
											"name": "NoPrice",
											"type": "Boolean",
											"physicalType": "bit"
										}
									},
									{
										"source": {
											"name": "FixedPrice",
											"type": "Boolean",
											"physicalType": "bit"
										},
										"sink": {
											"name": "FixedPrice",
											"type": "Boolean",
											"physicalType": "bit"
										}
									},
									{
										"source": {
											"name": "PartsPicked",
											"type": "Boolean",
											"physicalType": "bit"
										},
										"sink": {
											"name": "PartsPicked",
											"type": "Boolean",
											"physicalType": "bit"
										}
									},
									{
										"source": {
											"name": "Completed",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "Completed",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "AuthorisedBy",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "AuthorisedBy",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "AuthAdvisor",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "AuthAdvisor",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "AuthDate",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "AuthDate",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "VideoStatus",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "VideoStatus",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "SendVideo",
											"type": "Boolean",
											"physicalType": "bit"
										},
										"sink": {
											"name": "SendVideo",
											"type": "Boolean",
											"physicalType": "bit"
										}
									},
									{
										"source": {
											"name": "ExtOutcome",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "ExtOutcome",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "TechRAG",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "TechRAG",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "BookedContSeqNo",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "BookedContSeqNo",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "Updated",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "Updated",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "RTC_Ext_BI_Inspection_vISItems",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "SQLRTCRaw_InspectionvISItems_Merge",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "UpdateLastUpdatedDate",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "ImportMerge",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[UpdateLastUpdatedRTCDate]",
							"storedProcedureParameters": {
								"tablename": {
									"value": "RTCRaw_InspectionvISItems",
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "autolytica",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "ImportMerge",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "UpdateNullDatesBeforeMerge",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[ImportMerge]",
							"storedProcedureParameters": {
								"tablename": {
									"value": "[[dbo].[RTCRaw_InspectionvISItems]",
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "autolytica",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "UpdateNullDatesBeforeMerge",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "CopyDataFromRTCtoAutolytica",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[UpdateToNullDates]",
							"storedProcedureParameters": {
								"TableName": {
									"value": "[[dbo].[RTCRaw_InspectionvISItems_Merge]",
									"type": "String"
								},
								"ColumnName": {
									"value": "FollDate",
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "autolytica",
							"type": "LinkedServiceReference"
						}
					}
				],
				"annotations": [],
				"lastPublishTime": "2020-08-04T07:32:50Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/SQLRTCRaw_LastUpdated')]",
				"[concat(variables('factoryId'), '/datasets/RTC_Ext_BI_Inspection_vISItems')]",
				"[concat(variables('factoryId'), '/datasets/SQLRTCRaw_InspectionvISItems_Merge')]",
				"[concat(variables('factoryId'), '/linkedServices/autolytica')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/RTCVHCInspectionISLabour')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "GetLastUpdatedForHeaders",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderStoredProcedureName": "[[dbo].[MaxUpdatedDate]",
								"storedProcedureParameters": {
									"TableName": {
										"type": "String",
										"value": "RTCRaw_InspectionvlSLabour"
									}
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "SQLRTCRaw_LastUpdated",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "CopyDataFromRTCtoAutolytica",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "GetLastUpdatedForHeaders",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": {
									"value": "@concat('select * from BI_Inspection_vISLabour where updated > ''',activity('GetLastUpdatedForHeaders').output.firstrow.lastupdated,'''')",
									"type": "Expression"
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert"
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "GroupID",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "GroupID",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "Id",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "Id",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "ItemId",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "ItemId",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "LabourId",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "LabourId",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "Details",
											"type": "String",
											"physicalType": "ntext"
										},
										"sink": {
											"name": "Details",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Allowed",
											"type": "Decimal",
											"physicalType": "decimal"
										},
										"sink": {
											"name": "Allowed",
											"type": "Decimal",
											"physicalType": "decimal"
										}
									},
									{
										"source": {
											"name": "Price",
											"type": "Decimal",
											"physicalType": "decimal"
										},
										"sink": {
											"name": "Price",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "RepairCode",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "RepairCode",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Discount",
											"type": "Decimal",
											"physicalType": "decimal"
										},
										"sink": {
											"name": "Discount",
											"type": "Decimal",
											"physicalType": "decimal"
										}
									},
									{
										"source": {
											"name": "NetPrice",
											"type": "Decimal",
											"physicalType": "decimal"
										},
										"sink": {
											"name": "NetPrice",
											"type": "Decimal",
											"physicalType": "decimal"
										}
									},
									{
										"source": {
											"name": "Rate",
											"type": "Decimal",
											"physicalType": "decimal"
										},
										"sink": {
											"name": "Rate",
											"type": "Decimal",
											"physicalType": "decimal"
										}
									},
									{
										"source": {
											"name": "LabourRate",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "LabourRate",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "BookingLineNo",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "BookingLineNo",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "Updated",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "Updated",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "RTC_EXT_BI_Inspection_ISLabour",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "SQLRTCRaw_InspectionISLabour_Merge",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "UpdateLastUpdatedDate",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "ImportMerge",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[UpdateLastUpdatedRTCDate]",
							"storedProcedureParameters": {
								"tablename": {
									"value": "RTCRaw_InspectionvlSLabour",
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "autolytica",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "ImportMerge",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "CopyDataFromRTCtoAutolytica",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[ImportMerge]",
							"storedProcedureParameters": {
								"tablename": {
									"value": "[[dbo].[RTCRaw_InspectionvlSLabour]",
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "autolytica",
							"type": "LinkedServiceReference"
						}
					}
				],
				"annotations": [],
				"lastPublishTime": "2020-07-29T22:36:55Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/SQLRTCRaw_LastUpdated')]",
				"[concat(variables('factoryId'), '/datasets/RTC_EXT_BI_Inspection_ISLabour')]",
				"[concat(variables('factoryId'), '/datasets/SQLRTCRaw_InspectionISLabour_Merge')]",
				"[concat(variables('factoryId'), '/linkedServices/autolytica')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/RTCVHCInspectionISParts')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "GetLastUpdatedForHeaders",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderStoredProcedureName": "[[dbo].[MaxUpdatedDate]",
								"storedProcedureParameters": {
									"TableName": {
										"type": "String",
										"value": "RTCRaw_InspectionvISParts"
									}
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "SQLRTCRaw_LastUpdated",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "CopyDataFromRTCtoAutolytica",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "GetLastUpdatedForHeaders",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": {
									"value": "@concat('select * from BI_Inspection_vISParts where updated > ''',activity('GetLastUpdatedForHeaders').output.firstrow.lastupdated,'''')",
									"type": "Expression"
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert"
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "GroupID",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "GroupID",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "Id",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "Id",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "ItemId",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "ItemId",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "PartsId",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "PartsId",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "PartNo",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "PartNo",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Details",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "Details",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Qty",
											"type": "Decimal",
											"physicalType": "decimal"
										},
										"sink": {
											"name": "Qty",
											"type": "Decimal",
											"physicalType": "decimal"
										}
									},
									{
										"source": {
											"name": "Price",
											"type": "Decimal",
											"physicalType": "decimal"
										},
										"sink": {
											"name": "Price",
											"type": "Decimal",
											"physicalType": "decimal"
										}
									},
									{
										"source": {
											"name": "Discount",
											"type": "Decimal",
											"physicalType": "decimal"
										},
										"sink": {
											"name": "Discount",
											"type": "Decimal",
											"physicalType": "decimal"
										}
									},
									{
										"source": {
											"name": "NetPrice",
											"type": "Decimal",
											"physicalType": "decimal"
										},
										"sink": {
											"name": "NetPrice",
											"type": "Decimal",
											"physicalType": "decimal"
										}
									},
									{
										"source": {
											"name": "LabourId",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "LabourId",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "BinLocn",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "BinLocn",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "InStock",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "InStock",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "Reserved",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "Reserved",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "Excluded",
											"type": "Boolean",
											"physicalType": "bit"
										},
										"sink": {
											"name": "Excluded",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "Cost",
											"type": "Decimal",
											"physicalType": "decimal"
										},
										"sink": {
											"name": "Cost",
											"type": "Decimal",
											"physicalType": "decimal"
										}
									},
									{
										"source": {
											"name": "LinkedPartsId",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "LinkedPartsId",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "Alternative",
											"type": "Boolean",
											"physicalType": "bit"
										},
										"sink": {
											"name": "Alternative",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "Franchise",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "Franchise",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "BookingLineNo",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "BookingLineNo",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "Updated",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "Updated",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "RTC_EXT_BI_Inspection_ISParts",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "SQLRTCRaw_InspectionISParts_Merge",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "UpdateLastUpdatedDate",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "ImportMerge",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[UpdateLastUpdatedRTCDate]",
							"storedProcedureParameters": {
								"tablename": {
									"value": "RTCRaw_InspectionvISParts",
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "autolytica",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "ImportMerge",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "CopyDataFromRTCtoAutolytica",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[ImportMerge]",
							"storedProcedureParameters": {
								"tablename": {
									"value": "[[dbo].[RTCRaw_InspectionvISParts]",
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "autolytica",
							"type": "LinkedServiceReference"
						}
					}
				],
				"annotations": [],
				"lastPublishTime": "2020-07-29T22:36:55Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/SQLRTCRaw_LastUpdated')]",
				"[concat(variables('factoryId'), '/datasets/RTC_EXT_BI_Inspection_ISParts')]",
				"[concat(variables('factoryId'), '/datasets/SQLRTCRaw_InspectionISParts_Merge')]",
				"[concat(variables('factoryId'), '/linkedServices/autolytica')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/RTCVHCInspectionISParts_copy1')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "CopyDataFromRTCtoAutolytica",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "select * from BI_Inspection_vISParts",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert"
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "GroupID",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "GroupID",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "Id",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "Id",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "ItemId",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "ItemId",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "PartsId",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "PartsId",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "PartNo",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "PartNo",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Details",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "Details",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Qty",
											"type": "Decimal",
											"physicalType": "decimal"
										},
										"sink": {
											"name": "Qty",
											"type": "Decimal",
											"physicalType": "decimal"
										}
									},
									{
										"source": {
											"name": "Price",
											"type": "Decimal",
											"physicalType": "decimal"
										},
										"sink": {
											"name": "Price",
											"type": "Decimal",
											"physicalType": "decimal"
										}
									},
									{
										"source": {
											"name": "Discount",
											"type": "Decimal",
											"physicalType": "decimal"
										},
										"sink": {
											"name": "Discount",
											"type": "Decimal",
											"physicalType": "decimal"
										}
									},
									{
										"source": {
											"name": "NetPrice",
											"type": "Decimal",
											"physicalType": "decimal"
										},
										"sink": {
											"name": "NetPrice",
											"type": "Decimal",
											"physicalType": "decimal"
										}
									},
									{
										"source": {
											"name": "LabourId",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "LabourId",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "BinLocn",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "BinLocn",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "InStock",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "InStock",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "Reserved",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "Reserved",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "Excluded",
											"type": "Boolean",
											"physicalType": "bit"
										},
										"sink": {
											"name": "Excluded",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "Cost",
											"type": "Decimal",
											"physicalType": "decimal"
										},
										"sink": {
											"name": "Cost",
											"type": "Decimal",
											"physicalType": "decimal"
										}
									},
									{
										"source": {
											"name": "LinkedPartsId",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "LinkedPartsId",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "Alternative",
											"type": "Boolean",
											"physicalType": "bit"
										},
										"sink": {
											"name": "Alternative",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "Franchise",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "Franchise",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "BookingLineNo",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "BookingLineNo",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "Updated",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "Updated",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "RTC_EXT_BI_Inspection_ISParts",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "SQLRTCRaw_InspectionISParts_Merge",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "UpdateLastUpdatedDate",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "ImportMerge",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[UpdateLastUpdatedRTCDate]",
							"storedProcedureParameters": {
								"tablename": {
									"value": "RTCRaw_InspectionvISParts",
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "autolytica",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "ImportMerge",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "CopyDataFromRTCtoAutolytica",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[ImportMerge]",
							"storedProcedureParameters": {
								"tablename": {
									"value": "[[dbo].[RTCRaw_InspectionvISParts]",
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "autolytica",
							"type": "LinkedServiceReference"
						}
					}
				],
				"annotations": [],
				"lastPublishTime": "2020-09-07T12:21:57Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/RTC_EXT_BI_Inspection_ISParts')]",
				"[concat(variables('factoryId'), '/datasets/SQLRTCRaw_InspectionISParts_Merge')]",
				"[concat(variables('factoryId'), '/linkedServices/autolytica')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/RTCVHCInspectionVHCOutcome')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "CopyRTCDataToAutolytica",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink",
								"preCopyScript": "truncate table RTCRaw_InspectionVHCOutcome_Merge",
								"writeBehavior": "insert",
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "GroupID",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "GroupID",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "id",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "ID",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "inuse",
											"type": "String",
											"physicalType": "char"
										},
										"sink": {
											"name": "InUse",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "dealer",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "DealerID",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "description",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "Description",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "hctype",
											"type": "String",
											"physicalType": "char"
										},
										"sink": {
											"name": "HCType",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "outcometype",
											"type": "String",
											"physicalType": "char"
										},
										"sink": {
											"name": "OutcomeType",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "contactcode",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "ContactCode",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Updated",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "Updated",
											"type": "DateTime",
											"physicalType": "datetime2"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "RTC_EXT_BI_Inspection_VHCOutcome",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "SQLRTCRaw_InspectionVHCOutcome_Merge",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "DoReferenceTableUpdate",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "CopyRTCDataToAutolytica",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[DoReferenceTableUpdate]",
							"storedProcedureParameters": {
								"SourceSystemID": {
									"value": "7",
									"type": "Int64"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "autolytica",
							"type": "LinkedServiceReference"
						}
					}
				],
				"annotations": [],
				"lastPublishTime": "2021-03-07T15:31:47Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/RTC_EXT_BI_Inspection_VHCOutcome')]",
				"[concat(variables('factoryId'), '/datasets/SQLRTCRaw_InspectionVHCOutcome_Merge')]",
				"[concat(variables('factoryId'), '/linkedServices/autolytica')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/RTCVHCInspectionVHCType')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "CopyRTCDataToAutolytica",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink",
								"preCopyScript": "truncate table RTCRaw_InspectionVHCType",
								"writeBehavior": "insert",
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "GroupID",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "GroupID",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "id",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "ID",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "inuse",
											"type": "String",
											"physicalType": "char"
										},
										"sink": {
											"name": "InUse",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "dealer",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "DealerID",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "description",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "Description",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Updated",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "Updated",
											"type": "DateTime",
											"physicalType": "datetime2"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "RTC_EXT_BI_Inspection_VHCType",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "SQLRTCRaw_InspectionVHCType",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"annotations": [],
				"lastPublishTime": "2020-07-19T15:30:56Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/RTC_EXT_BI_Inspection_VHCType')]",
				"[concat(variables('factoryId'), '/datasets/SQLRTCRaw_InspectionVHCType')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/RTCVHCvGroup')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "CopyRTCDataToAutolytica",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink",
								"preCopyScript": "truncate table RTCRaw_vGroup",
								"writeBehavior": "insert",
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "GroupID",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "GroupID",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "GroupName",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "GroupName",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Enabled",
											"type": "Boolean",
											"physicalType": "bit"
										},
										"sink": {
											"name": "Enabled",
											"type": "Int32",
											"physicalType": "int"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "RTC_EXT_BI_vGroup",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "SQLRTCRaw_vGroup",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"annotations": [],
				"lastPublishTime": "2020-07-19T16:35:46Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/RTC_EXT_BI_vGroup')]",
				"[concat(variables('factoryId'), '/datasets/SQLRTCRaw_vGroup')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Showroom')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "CopyPeterVardyEnquiryMax",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "ExcelSource",
								"additionalColumns": [
									{
										"name": "ClientID",
										"value": "10000"
									}
								],
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"preCopyScript": "truncate table EnquiryMaxSales",
								"writeBehavior": "insert",
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "ClientID",
											"type": "String"
										},
										"sink": {
											"name": "ClientID",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "Branch",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "DealershipID",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Sales Type",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "SalesType",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Enquiry No",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "EnquiryNo",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "Customer Title",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "CustomerTitle",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Customer Forename",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "CustomerForename",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Customer Surname",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "CustomerSurname",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Company Name",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "CompanyName",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Email",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Email",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Home Phone",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "HomePhone",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Mobile Phone",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "MobilePhone",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Work Phone",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "WorkPhone",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Postcode",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Postcode",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Enquiry Created",
											"type": "DateTime",
											"physicalType": "String"
										},
										"sink": {
											"name": "EnquiryCreatedDate",
											"type": "DateTime",
											"physicalType": "date"
										}
									},
									{
										"source": {
											"name": "Enquiry Type",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "EnquiryType",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Sales Executive",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "SalesExecutive",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Business Manager",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "BusinessManager",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "N/U",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "NewOrUsed",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Vehicle Type",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "VehicleType",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Make",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Make",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Range",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Range",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Model",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Model",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Derivative",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Derivative",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Registration No",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "RegistrationNo",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Registration Date",
											"type": "DateTime",
											"physicalType": "String"
										},
										"sink": {
											"name": "RegistrationDate",
											"type": "DateTime",
											"physicalType": "date"
										}
									},
									{
										"source": {
											"name": "Stock No",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "StockNo",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Group Date in Stock",
											"type": "DateTime",
											"physicalType": "String"
										},
										"sink": {
											"name": "GroupDateInStock",
											"type": "DateTime",
											"physicalType": "date"
										}
									},
									{
										"source": {
											"name": "Branch Date in Stock",
											"type": "DateTime",
											"physicalType": "String"
										},
										"sink": {
											"name": "BranchDateInStock",
											"type": "DateTime",
											"physicalType": "date"
										}
									},
									{
										"source": {
											"name": "First Order Date",
											"type": "DateTime",
											"physicalType": "String"
										},
										"sink": {
											"name": "FirstOrderDate",
											"type": "DateTime",
											"physicalType": "date"
										}
									},
									{
										"source": {
											"name": "Enquiry Status",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "EnquiryStatus",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Invoiced Date",
											"type": "DateTime",
											"physicalType": "String"
										},
										"sink": {
											"name": "InvoicedDate",
											"type": "DateTime",
											"physicalType": "date"
										}
									},
									{
										"source": {
											"name": "Expected Delivery Date",
											"type": "DateTime",
											"physicalType": "String"
										},
										"sink": {
											"name": "ExpectedDeliveryDate",
											"type": "DateTime",
											"physicalType": "date"
										}
									},
									{
										"source": {
											"name": "Delivery Date",
											"type": "DateTime",
											"physicalType": "String"
										},
										"sink": {
											"name": "DeliveryDate",
											"type": "DateTime",
											"physicalType": "date"
										}
									},
									{
										"source": {
											"name": "Delivery Category",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "DeliveryCategory",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Metal Only",
											"type": "Decimal",
											"physicalType": "String"
										},
										"sink": {
											"name": "MetalOnly",
											"type": "Decimal",
											"physicalType": "decimal"
										}
									},
									{
										"source": {
											"name": "OTR Price exc Ins",
											"type": "Decimal",
											"physicalType": "String"
										},
										"sink": {
											"name": "OTRPriceExcIns",
											"type": "Decimal",
											"physicalType": "decimal"
										}
									},
									{
										"source": {
											"name": "Total Goods & Services inc Ins",
											"type": "Decimal",
											"physicalType": "String"
										},
										"sink": {
											"name": "TotalGoodsAndServicesIncIns",
											"type": "Decimal",
											"physicalType": "decimal"
										}
									},
									{
										"source": {
											"name": "Financed",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Financed",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Finance Provider",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "FinanceProvider",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Fin Type",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "FinanceType",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Finance Scheme",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "FinanceScheme",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Loan Term",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "LoanTerm",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "APR",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "APR",
											"type": "Decimal",
											"physicalType": "decimal"
										}
									},
									{
										"source": {
											"name": "Flat Rate",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "FlatRate",
											"type": "Decimal",
											"physicalType": "decimal"
										}
									},
									{
										"source": {
											"name": "Finance Balance",
											"type": "Decimal",
											"physicalType": "String"
										},
										"sink": {
											"name": "FinanceBalance",
											"type": "Decimal",
											"physicalType": "decimal"
										}
									},
									{
										"source": {
											"name": "Volume Bonus",
											"type": "Decimal",
											"physicalType": "String"
										},
										"sink": {
											"name": "VolumeBonus",
											"type": "Decimal",
											"physicalType": "decimal"
										}
									},
									{
										"source": {
											"name": "Commission",
											"type": "Decimal",
											"physicalType": "String"
										},
										"sink": {
											"name": "Commission",
											"type": "Decimal",
											"physicalType": "decimal"
										}
									},
									{
										"source": {
											"name": "DOC Fee",
											"type": "Decimal",
											"physicalType": "String"
										},
										"sink": {
											"name": "DocFee",
											"type": "Decimal",
											"physicalType": "decimal"
										}
									},
									{
										"source": {
											"name": "Finance Subsidy",
											"type": "Decimal",
											"physicalType": "String"
										},
										"sink": {
											"name": "FinanceSubsidy",
											"type": "Decimal",
											"physicalType": "decimal"
										}
									},
									{
										"source": {
											"name": "Total Fin Margin",
											"type": "Decimal",
											"physicalType": "String"
										},
										"sink": {
											"name": "TotalFinanceMargin",
											"type": "Decimal",
											"physicalType": "decimal"
										}
									},
									{
										"source": {
											"name": "GAP",
											"type": "Decimal",
											"physicalType": "String"
										},
										"sink": {
											"name": "GAP",
											"type": "Decimal",
											"physicalType": "decimal"
										}
									},
									{
										"source": {
											"name": "GAP Product",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "GapProduct",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "War",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Warranty",
											"type": "Decimal",
											"physicalType": "decimal"
										}
									},
									{
										"source": {
											"name": "War Product",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "WarrantyProduct",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Ext",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Extras",
											"type": "Decimal",
											"physicalType": "decimal"
										}
									},
									{
										"source": {
											"name": "Ext Product",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "ExtrasProduct",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Paint",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Paint",
											"type": "Decimal",
											"physicalType": "decimal"
										}
									},
									{
										"source": {
											"name": "Paint Product",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "PaintProduct",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Total Ins Margin",
											"type": "Decimal",
											"physicalType": "String"
										},
										"sink": {
											"name": "TotalInsMargin",
											"type": "Decimal",
											"physicalType": "decimal"
										}
									},
									{
										"source": {
											"name": "Total F & I Margin",
											"type": "Decimal",
											"physicalType": "String"
										},
										"sink": {
											"name": "TotalFandIMargin",
											"type": "Decimal",
											"physicalType": "decimal"
										}
									},
									{
										"source": {
											"name": "Volume Bonus Central",
											"type": "Decimal",
											"physicalType": "String"
										},
										"sink": {
											"name": "VolumeBonusCentral",
											"type": "Decimal",
											"physicalType": "decimal"
										}
									},
									{
										"source": {
											"name": "DOC Fee Central",
											"type": "Decimal",
											"physicalType": "String"
										},
										"sink": {
											"name": "DOCFeeCentral",
											"type": "Decimal",
											"physicalType": "decimal"
										}
									},
									{
										"source": {
											"name": "Total Central Income",
											"type": "Decimal",
											"physicalType": "String"
										},
										"sink": {
											"name": "TotalCentralIncome",
											"type": "Decimal",
											"physicalType": "decimal"
										}
									},
									{
										"source": {
											"name": "Days in Stock",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "DaysInStock",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "Last Advertised Price",
											"type": "Decimal",
											"physicalType": "String"
										},
										"sink": {
											"name": "LastAdvertisedPrice",
											"type": "Decimal",
											"physicalType": "decimal"
										}
									},
									{
										"source": {
											"name": "Model Analysis Code",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "ModelAnalysisCode",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "SIV",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "SIV",
											"type": "Decimal",
											"physicalType": "decimal"
										}
									},
									{
										"source": {
											"name": "Stock Number",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "StockNo2",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Chassis No",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "ChassisNo",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Engine Size",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "EngineSize",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "Body Style",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "BodyStyle",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Mileage",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Mileage",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "Fuel Type",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "FuelType",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Transmission",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Transmission",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Colour",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Colour",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Trim Type",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "TrimType",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Number of Doors",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "NumberOfDoors",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "Gross Profit",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "GrossProfit",
											"type": "Decimal",
											"physicalType": "decimal"
										}
									},
									{
										"source": {
											"name": "Reconditioning Cost",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "ReconditioningCost",
											"type": "Decimal",
											"physicalType": "decimal"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false,
									"dateTimeFormat": "dd/MM/yyyy"
								}
							}
						},
						"inputs": [
							{
								"referenceName": "PeterVardyEnquiryMaxXLSX",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "SQLEnquiryMax",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "DoReferenceTableUpdate",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "CopyPeterVardyEnquiryMax",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[DoReferenceTableUpdate]",
							"storedProcedureParameters": {
								"SourceSystemID": {
									"value": "4",
									"type": "Int64"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "autolytica",
							"type": "LinkedServiceReference"
						}
					}
				],
				"annotations": [],
				"lastPublishTime": "2021-06-09T21:40:21Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/PeterVardyEnquiryMaxXLSX')]",
				"[concat(variables('factoryId'), '/datasets/SQLEnquiryMax')]",
				"[concat(variables('factoryId'), '/linkedServices/autolytica')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/VHCHeaders')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "RTCVHCHeaders",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"preCopyScript": "truncate table dbo.vhcheaders",
								"writeBehavior": "insert",
								"disableMetricsCollection": false
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "VHCHeadersFromAzureBlob",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "SQLRTCVHCHeaders",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"annotations": [],
				"lastPublishTime": "2020-04-25T21:30:11Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/VHCHeadersFromAzureBlob')]",
				"[concat(variables('factoryId'), '/datasets/SQLRTCVHCHeaders')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/VehicleStock')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "CopyCSVToSQL",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "SftpReadSettings",
									"recursive": true,
									"wildcardFileName": "VehicleStock-*.csv",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"preCopyScript": "delete from vehiclestock where clientid <> 10000",
								"writeBehavior": "insert",
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "Client ID"
										},
										"sink": {
											"name": "ClientID",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "Dealer ID"
										},
										"sink": {
											"name": "DealershipID",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Vehicle Type"
										},
										"sink": {
											"name": "Type",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Registration Number"
										},
										"sink": {
											"name": "RegistrationNo",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Stock Number"
										},
										"sink": {
											"name": "StockNo",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Group Date in Stock"
										},
										"sink": {
											"name": "GroupDateInStock",
											"type": "DateTime",
											"physicalType": "date"
										}
									},
									{
										"source": {
											"name": "Dealership Date In Stock"
										},
										"sink": {
											"name": "DealershipDateInStock",
											"type": "DateTime",
											"physicalType": "date"
										}
									},
									{
										"source": {
											"name": "Status"
										},
										"sink": {
											"name": "Status",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "New Or Used"
										},
										"sink": {
											"name": "NewOrUsed",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Chassis"
										},
										"sink": {
											"name": "Chassis",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Registration Date"
										},
										"sink": {
											"name": "FirstRegisteredDate",
											"type": "DateTime",
											"physicalType": "date"
										}
									},
									{
										"source": {
											"name": "Make"
										},
										"sink": {
											"name": "Make",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Model"
										},
										"sink": {
											"name": "Model",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Derivative"
										},
										"sink": {
											"name": "Derivative",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Trim"
										},
										"sink": {
											"name": "Trim",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Engine Size"
										},
										"sink": {
											"name": "EngineSize",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Bodystyle"
										},
										"sink": {
											"name": "Bodystyle",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Odometer"
										},
										"sink": {
											"name": "Mileage",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "FuelType"
										},
										"sink": {
											"name": "FuelType",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Transmission"
										},
										"sink": {
											"name": "Transmission",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Generic Colour"
										},
										"sink": {
											"name": "GenericColour",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Doors"
										},
										"sink": {
											"name": "Doors",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "Stock Value"
										},
										"sink": {
											"name": "SIV",
											"type": "Double",
											"physicalType": "float"
										}
									},
									{
										"source": {
											"name": "Vat"
										},
										"sink": {
											"name": "Vat",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Source"
										},
										"sink": {
											"name": "Source",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Vehicle Category Code"
										},
										"sink": {
											"name": "ModelAnalysisCode",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Retail Price"
										},
										"sink": {
											"name": "RetailPrice",
											"type": "Double",
											"physicalType": "float"
										}
									},
									{
										"source": {
											"name": "Purchaser ID"
										},
										"sink": {
											"name": "Purchaser",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Supplier"
										},
										"sink": {
											"name": "SupplierName",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Group Purchase Date"
										},
										"sink": {
											"name": "PurchaseInvoiceDate",
											"type": "DateTime",
											"physicalType": "date"
										}
									},
									{
										"source": {
											"name": "Available Date"
										},
										"sink": {
											"name": "AvailableDate",
											"type": "DateTime",
											"physicalType": "date"
										}
									},
									{
										"source": {
											"name": "Progress Code"
										},
										"sink": {
											"name": "ProgressCode",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Reconditioning"
										},
										"sink": {
											"name": "Recon",
											"type": "Double",
											"physicalType": "float"
										}
									},
									{
										"source": {
											"name": "Transport Costs"
										},
										"sink": {
											"name": "TransportCosts",
											"type": "Double",
											"physicalType": "float"
										}
									},
									{
										"source": {
											"name": "Adjusted Stock Value"
										},
										"sink": {
											"name": "AdjustedSIV",
											"type": "Double",
											"physicalType": "float"
										}
									},
									{
										"source": {
											"name": "Received Date"
										},
										"sink": {
											"name": "ReceivedDate",
											"type": "DateTime",
											"physicalType": "date"
										}
									},
									{
										"source": {
											"name": "Purchase Account"
										},
										"sink": {
											"name": "PurchaseAccount",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Quarantine Status"
										},
										"sink": {
											"name": "QuarantineStatus",
											"type": "String",
											"physicalType": "varchar"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false,
									"dateTimeFormat": "dd/MM/yyyy"
								}
							}
						},
						"inputs": [
							{
								"referenceName": "VehicleStockCSV",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "SQLVehicleStock",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "DoReferenceTableUpdate",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "CopyCSVToSQL",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[DoReferenceTableUpdate]",
							"storedProcedureParameters": {
								"SourceSystemID": {
									"value": "8",
									"type": "Int64"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "autolytica",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "UpdateVehicleStock",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "DoReferenceTableUpdate",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[UpdateVehicleStock]"
						},
						"linkedServiceName": {
							"referenceName": "autolytica",
							"type": "LinkedServiceReference"
						}
					}
				],
				"annotations": [],
				"lastPublishTime": "2021-06-09T21:35:44Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/VehicleStockCSV')]",
				"[concat(variables('factoryId'), '/datasets/SQLVehicleStock')]",
				"[concat(variables('factoryId'), '/linkedServices/autolytica')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/WebStockFeed')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "PeterVardyWebStockFeed",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "PeterVardyWebStockFeed",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"PeterVardyWebStockFeed": {},
									"WebStockFeed": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"annotations": [],
				"lastPublishTime": "2021-06-09T21:39:48Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/PeterVardyWebStockFeed')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/WorkshopPrep')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "PeterVardyVehicleWorkshopPrep",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "PeterVardyVehicleWorkshopPrep",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"VSBI4csv": {},
									"SQLVehicleWorkshopPrep": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"annotations": [],
				"lastPublishTime": "2021-06-09T21:36:28Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/PeterVardyVehicleWorkshopPrep')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/WorkshopWIP')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "PeterVardyDMSAftersalesWIP",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"additionalColumns": [
									{
										"name": "ClientID",
										"value": "10000"
									}
								],
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"preCopyScript": "delete from dmsaftersaleswip where clientid = 10000",
								"writeBehavior": "insert",
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "ClientID",
											"type": "String"
										},
										"sink": {
											"name": "ClientID",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "D",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Department",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "WIP",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "WIP",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "Date Due",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Date Due",
											"type": "DateTime",
											"physicalType": "datetime2"
										}
									},
									{
										"source": {
											"name": "Customer",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Customer",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Reg No",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Registration Number",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Operator",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Operator",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "O/due",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Overdue",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "Parts",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Parts Value",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 2,
											"precision": 18
										}
									},
									{
										"source": {
											"name": "Lin",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Parts Lines",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "Labour",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Labour Value",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 2,
											"precision": 18
										}
									},
									{
										"source": {
											"name": "Ln",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Labour Lines",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "Total",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Total Value",
											"type": "Int32",
											"physicalType": "int"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false,
									"dateTimeFormat": "dd/MM/yyyy"
								}
							}
						},
						"inputs": [
							{
								"referenceName": "PeterVardySOBI7CSV",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "SQLDMSAftersalesWIP",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"annotations": [],
				"lastPublishTime": "2021-06-09T21:39:21Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/PeterVardySOBI7CSV')]",
				"[concat(variables('factoryId'), '/datasets/SQLDMSAftersalesWIP')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AutotraderCompetitorsCSV')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AutolyticaBlobStorage",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "AutotraderCompetitors.csv",
						"folderPath": "VehicleStock",
						"container": "peter-vardy"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "AdvertText",
						"type": "String"
					},
					{
						"name": "AdvertURL",
						"type": "String"
					},
					{
						"name": "AttentionGrabber",
						"type": "String"
					},
					{
						"name": "Bodystyle",
						"type": "String"
					},
					{
						"name": "Colour",
						"type": "String"
					},
					{
						"name": "CompetitorReg",
						"type": "String"
					},
					{
						"name": "Date",
						"type": "Date"
					},
					{
						"name": "DaysinStock",
						"type": "String"
					},
					{
						"name": "Derivative",
						"type": "String"
					},
					{
						"name": "Fuel",
						"type": "String"
					},
					{
						"name": "Id",
						"type": "String"
					},
					{
						"name": "MainImage",
						"type": "String"
					},
					{
						"name": "Make",
						"type": "String"
					},
					{
						"name": "Mileage",
						"type": "String"
					},
					{
						"name": "Model",
						"type": "String"
					},
					{
						"name": "Owners",
						"type": "String"
					},
					{
						"name": "Plate",
						"type": "String"
					},
					{
						"name": "Price",
						"type": "String"
					},
					{
						"name": "PriceIndicator",
						"type": "String"
					},
					{
						"name": "PricePosition",
						"type": "String"
					},
					{
						"name": "Reg No",
						"type": "String"
					},
					{
						"name": "SellerName",
						"type": "String"
					},
					{
						"name": "SellerSegment",
						"type": "String"
					},
					{
						"name": "SellerTown",
						"type": "String"
					},
					{
						"name": "StockNumber",
						"type": "String"
					},
					{
						"name": "TaxRate",
						"type": "String"
					},
					{
						"name": "Transmission",
						"type": "String"
					},
					{
						"name": "Year",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AutolyticaBlobStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AutotraderJSON')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AutolyticaBlobStorage",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Json",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "AutotraderValuations.json",
						"folderPath": "VehicleStock",
						"container": "peter-vardy"
					}
				},
				"schema": {
					"type": "object",
					"properties": {
						"OriginalInformation": {
							"type": "object",
							"properties": {
								"RecordID": {
									"type": "string"
								},
								"RegNo": {
									"type": "string"
								},
								"StockNo": {
									"type": "integer"
								}
							}
						},
						"information": {
							"type": "object",
							"properties": {
								"derivative": {
									"type": "string"
								},
								"make": {
									"type": "string"
								},
								"model": {
									"type": "string"
								},
								"owners": {
									"type": "integer"
								},
								"plate": {
									"type": "string"
								},
								"year": {
									"type": "integer"
								},
								"attentionGrabber": {
									"type": "string"
								},
								"advertText": {
									"type": "string"
								}
							}
						},
						"advert": {
							"type": "object",
							"properties": {
								"responseMetrics": {
									"type": "object",
									"properties": {
										"performanceRating": {
											"type": "object",
											"properties": {
												"score": {
													"type": "integer"
												},
												"rating": {
													"type": "string"
												}
											}
										},
										"yesterday": {
											"type": "object",
											"properties": {
												"advertViews": {
													"type": "integer"
												},
												"searchViews": {
													"type": "integer"
												}
											}
										},
										"lastWeek": {
											"type": "object",
											"properties": {
												"advertViews": {
													"type": "integer"
												},
												"searchViews": {
													"type": "integer"
												}
											}
										}
									}
								},
								"advertUrl": {
									"type": "string"
								},
								"source": {
									"type": "string"
								}
							}
						},
						"valuations": {
							"type": "object",
							"properties": {
								"marketAverageGuidePrice": {
									"type": "object",
									"properties": {
										"trade": {
											"type": "object",
											"properties": {
												"amountGBP": {
													"type": "number"
												}
											}
										},
										"retail": {
											"type": "object",
											"properties": {
												"amountGBP": {
													"type": "number"
												}
											}
										},
										"partExchange": {
											"type": "object",
											"properties": {
												"amountGBP": {
													"type": "number"
												}
											}
										}
									}
								},
								"adjustedGuidePrice": {
									"type": "object",
									"properties": {
										"trade": {
											"type": "object",
											"properties": {
												"amountGBP": {
													"type": "number"
												}
											}
										},
										"retail": {
											"type": "object",
											"properties": {
												"amountGBP": {
													"type": "number"
												}
											}
										},
										"partExchange": {
											"type": "object",
											"properties": {
												"amountGBP": {
													"type": "number"
												}
											}
										},
										"priceIndicator": {
											"type": "string"
										},
										"priceIndicatorV2": {
											"type": "string"
										}
									}
								}
							}
						},
						"retailMetrics": {
							"type": "object",
							"properties": {
								"liveMarketCondition": {
									"type": "integer"
								},
								"marketSupply": {
									"type": "integer"
								},
								"buyerDemand": {
									"type": "integer"
								},
								"dealerMetrics": {
									"type": "array",
									"items": {
										"type": "object",
										"properties": {
											"dealerId": {
												"type": "string"
											},
											"dealerName": {
												"type": "string"
											},
											"localRetailRating": {
												"type": "integer"
											},
											"localDaysToSell": {
												"type": "integer"
											}
										}
									}
								}
							}
						},
						"competitors": {
							"type": "object",
							"properties": {
								"totalResultCount": {
									"type": "integer"
								},
								"filters": {
									"type": "object",
									"properties": {
										"filterExclusions": {
											"type": "array"
										},
										"includeWriteOffCategoryVehicles": {
											"type": "boolean"
										},
										"segment": {
											"type": "null"
										},
										"fuelType": {
											"type": "string"
										},
										"distance": {
											"type": "integer"
										},
										"plateMin": {
											"type": "string"
										},
										"plateMax": {
											"type": "string"
										},
										"mileageMin": {
											"type": "null"
										},
										"mileageMax": {
											"type": "null"
										},
										"engineSize": {
											"type": "integer"
										},
										"colour": {
											"type": "null"
										},
										"bodyType": {
											"type": "string"
										},
										"postcode": {
											"type": "string"
										},
										"taxRate": {
											"type": "integer"
										},
										"doors": {
											"type": "integer"
										},
										"driveTrain": {
											"type": "string"
										},
										"trim": {
											"type": "string"
										},
										"transmission": {
											"type": "string"
										}
									}
								},
								"competitorAdverts": {
									"type": "array",
									"items": {
										"type": "object",
										"properties": {
											"registration": {
												"type": "string"
											},
											"make": {
												"type": "string"
											},
											"model": {
												"type": "string"
											},
											"derivative": {
												"type": "string"
											},
											"mileage": {
												"type": "integer"
											},
											"year": {
												"type": "integer"
											},
											"plate": {
												"type": "string"
											},
											"colour": {
												"type": "string"
											},
											"insuranceWriteOffCategory": {
												"type": "null"
											},
											"taxRate": {
												"type": "integer"
											},
											"owners": {
												"type": "null"
											},
											"bodyType": {
												"type": "string"
											},
											"fuel": {
												"type": "string"
											},
											"transmission": {
												"type": "string"
											},
											"seller": {
												"type": "object",
												"properties": {
													"name": {
														"type": "string"
													},
													"town": {
														"type": "string"
													},
													"segment": {
														"type": "string"
													}
												}
											},
											"atMetrics": {
												"type": "object",
												"properties": {
													"pricePosition": {
														"type": "number"
													}
												}
											},
											"atAdvertUrl": {
												"type": "string"
											},
											"attentionGrabber": {
												"type": "string"
											},
											"daysInStock": {
												"type": "integer"
											},
											"mainImage": {
												"type": "string"
											},
											"advertText": {
												"type": "string"
											},
											"price": {
												"type": "number"
											},
											"priceIndicator": {
												"type": "string"
											},
											"priceIndicatorV2": {
												"type": "string"
											}
										}
									}
								}
							}
						}
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AutolyticaBlobStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AutotraderJSONExtended')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AutolyticaBlobStorage",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Json",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "AutotraderValuations-Extended.json",
						"folderPath": "VehicleStock",
						"container": "peter-vardy"
					}
				},
				"schema": {
					"type": "object",
					"properties": {
						"OriginalInformation": {
							"type": "object",
							"properties": {
								"RecordID": {
									"type": "string"
								},
								"RegNo": {
									"type": "string"
								},
								"StockNo": {
									"type": "integer"
								}
							}
						},
						"information": {
							"type": "object",
							"properties": {
								"derivative": {
									"type": "string"
								},
								"make": {
									"type": "string"
								},
								"model": {
									"type": "string"
								},
								"owners": {
									"type": "integer"
								},
								"plate": {
									"type": "string"
								},
								"year": {
									"type": "integer"
								},
								"attentionGrabber": {
									"type": "string"
								},
								"advertText": {
									"type": "string"
								}
							}
						},
						"advert": {
							"type": "object",
							"properties": {
								"responseMetrics": {
									"type": "object",
									"properties": {
										"performanceRating": {
											"type": "object",
											"properties": {
												"score": {
													"type": "integer"
												},
												"rating": {
													"type": "string"
												}
											}
										},
										"yesterday": {
											"type": "object",
											"properties": {
												"advertViews": {
													"type": "integer"
												},
												"searchViews": {
													"type": "integer"
												}
											}
										},
										"lastWeek": {
											"type": "object",
											"properties": {
												"advertViews": {
													"type": "integer"
												},
												"searchViews": {
													"type": "integer"
												}
											}
										}
									}
								},
								"advertUrl": {
									"type": "string"
								},
								"source": {
									"type": "string"
								}
							}
						},
						"valuations": {
							"type": "object",
							"properties": {
								"marketAverageGuidePrice": {
									"type": "object",
									"properties": {
										"trade": {
											"type": "object",
											"properties": {
												"amountGBP": {
													"type": "number"
												}
											}
										},
										"retail": {
											"type": "object",
											"properties": {
												"amountGBP": {
													"type": "number"
												}
											}
										},
										"partExchange": {
											"type": "object",
											"properties": {
												"amountGBP": {
													"type": "number"
												}
											}
										}
									}
								},
								"adjustedGuidePrice": {
									"type": "object",
									"properties": {
										"trade": {
											"type": "object",
											"properties": {
												"amountGBP": {
													"type": "number"
												}
											}
										},
										"retail": {
											"type": "object",
											"properties": {
												"amountGBP": {
													"type": "number"
												}
											}
										},
										"partExchange": {
											"type": "object",
											"properties": {
												"amountGBP": {
													"type": "number"
												}
											}
										},
										"priceIndicator": {
											"type": "string"
										},
										"priceIndicatorV2": {
											"type": "string"
										}
									}
								}
							}
						},
						"retailMetrics": {
							"type": "object",
							"properties": {
								"liveMarketCondition": {
									"type": "integer"
								},
								"marketSupply": {
									"type": "integer"
								},
								"buyerDemand": {
									"type": "integer"
								},
								"dealerMetrics": {
									"type": "array",
									"items": {
										"type": "object",
										"properties": {
											"dealerId": {
												"type": "string"
											},
											"dealerName": {
												"type": "string"
											},
											"localRetailRating": {
												"type": "integer"
											},
											"localDaysToSell": {
												"type": "integer"
											}
										}
									}
								}
							}
						},
						"competitors": {
							"type": "object",
							"properties": {
								"totalResultCount": {
									"type": "integer"
								},
								"filters": {
									"type": "object",
									"properties": {
										"filterExclusions": {
											"type": "array"
										},
										"includeWriteOffCategoryVehicles": {
											"type": "boolean"
										},
										"segment": {
											"type": "null"
										},
										"fuelType": {
											"type": "string"
										},
										"distance": {
											"type": "integer"
										},
										"plateMin": {
											"type": "string"
										},
										"plateMax": {
											"type": "string"
										},
										"mileageMin": {
											"type": "null"
										},
										"mileageMax": {
											"type": "null"
										},
										"engineSize": {
											"type": "integer"
										},
										"colour": {
											"type": "null"
										},
										"bodyType": {
											"type": "string"
										},
										"postcode": {
											"type": "string"
										},
										"taxRate": {
											"type": "integer"
										},
										"doors": {
											"type": "integer"
										},
										"driveTrain": {
											"type": "string"
										},
										"trim": {
											"type": "string"
										},
										"transmission": {
											"type": "string"
										}
									}
								},
								"competitorAdverts": {
									"type": "array",
									"items": {
										"type": "object",
										"properties": {
											"registration": {
												"type": "string"
											},
											"make": {
												"type": "string"
											},
											"model": {
												"type": "string"
											},
											"derivative": {
												"type": "string"
											},
											"mileage": {
												"type": "integer"
											},
											"year": {
												"type": "integer"
											},
											"plate": {
												"type": "string"
											},
											"colour": {
												"type": "string"
											},
											"insuranceWriteOffCategory": {
												"type": "null"
											},
											"taxRate": {
												"type": "integer"
											},
											"owners": {
												"type": "null"
											},
											"bodyType": {
												"type": "string"
											},
											"fuel": {
												"type": "string"
											},
											"transmission": {
												"type": "string"
											},
											"seller": {
												"type": "object",
												"properties": {
													"name": {
														"type": "string"
													},
													"town": {
														"type": "string"
													},
													"segment": {
														"type": "string"
													}
												}
											},
											"atMetrics": {
												"type": "object",
												"properties": {
													"pricePosition": {
														"type": "number"
													}
												}
											},
											"atAdvertUrl": {
												"type": "string"
											},
											"attentionGrabber": {
												"type": "string"
											},
											"daysInStock": {
												"type": "integer"
											},
											"mainImage": {
												"type": "string"
											},
											"advertText": {
												"type": "string"
											},
											"price": {
												"type": "number"
											},
											"priceIndicator": {
												"type": "string"
											},
											"priceIndicatorV2": {
												"type": "string"
											}
										}
									}
								}
							}
						}
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AutolyticaBlobStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AutotraderLocalRetailerRatingsCSV')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AutolyticaBlobStorage",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "AutotraderLocalRetailerRatings.csv",
						"folderPath": "VehicleStock",
						"container": "peter-vardy"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "Date",
						"type": "Date"
					},
					{
						"name": "DealerID",
						"type": "String"
					},
					{
						"name": "DealerName",
						"type": "String"
					},
					{
						"name": "ID",
						"type": "String"
					},
					{
						"name": "LocalRating",
						"type": "String"
					},
					{
						"name": "Reg No",
						"type": "String"
					},
					{
						"name": "StockNumber",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AutolyticaBlobStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AutotraderMarketSupplyCSV')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AutolyticaBlobStorage",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "AutotraderMarketSupply.csv",
						"folderPath": "VehicleStock",
						"container": "peter-vardy"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "BuyerDemand",
						"type": "String"
					},
					{
						"name": "Date",
						"type": "Date"
					},
					{
						"name": "ID",
						"type": "String"
					},
					{
						"name": "LiveMarketCondition",
						"type": "String"
					},
					{
						"name": "MarketSupply",
						"type": "String"
					},
					{
						"name": "RegNo",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AutolyticaBlobStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AutotraderStockManagementJSON')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AutolyticaBlobStorage",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Json",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "AutotraderStockManagement.json",
						"folderPath": "Autotrader",
						"container": "autolytica"
					}
				},
				"schema": {
					"type": "object",
					"properties": {
						"AutotraderRecord": {
							"type": "object",
							"properties": {
								"OriginalInformation": {
									"type": "object",
									"properties": {
										"RecordID": {
											"type": "string"
										},
										"RegNo": {
											"type": "string"
										},
										"StockNo": {
											"type": "string"
										}
									}
								},
								"vehicle": {
									"type": "object",
									"properties": {
										"ownershipCondition": {
											"type": "string"
										},
										"registration": {
											"type": "string"
										},
										"vin": {
											"type": "null"
										},
										"make": {
											"type": "string"
										},
										"model": {
											"type": "string"
										},
										"generation": {
											"type": "null"
										},
										"derivative": {
											"type": "string"
										},
										"derivativeId": {
											"type": "null"
										},
										"vehicleType": {
											"type": "string"
										},
										"trim": {
											"type": "null"
										},
										"bodyType": {
											"type": "string"
										},
										"fuelType": {
											"type": "string"
										},
										"cabType": {
											"type": "null"
										},
										"transmissionType": {
											"type": "string"
										},
										"wheelbaseType": {
											"type": "null"
										},
										"roofHeightType": {
											"type": "null"
										},
										"drivetrain": {
											"type": "string"
										},
										"seats": {
											"type": "null"
										},
										"doors": {
											"type": "integer"
										},
										"co2EmissionGPKM": {
											"type": "null"
										},
										"topSpeedMPH": {
											"type": "null"
										},
										"zeroToSixtyMPHSeconds": {
											"type": "null"
										},
										"badgeEngineSizeLitres": {
											"type": "number"
										},
										"engineCapacityCC": {
											"type": "integer"
										},
										"enginePowerBHP": {
											"type": "null"
										},
										"fuelCapacityLitres": {
											"type": "null"
										},
										"emissionClass": {
											"type": "null"
										},
										"fuelEconomyNEDCExtraUrbanMPG": {
											"type": "null"
										},
										"fuelEconomyNEDCUrbanMPG": {
											"type": "null"
										},
										"fuelEconomyNEDCCombinedMPG": {
											"type": "null"
										},
										"fuelEconomyWLTPLowMPG": {
											"type": "null"
										},
										"fuelEconomyWLTPMediumMPG": {
											"type": "null"
										},
										"fuelEconomyWLTPHighMPG": {
											"type": "null"
										},
										"fuelEconomyWLTPExtraHighMPG": {
											"type": "null"
										},
										"fuelEconomyWLTPCombinedMPG": {
											"type": "null"
										},
										"bootSpaceSeatsUpLitres": {
											"type": "null"
										},
										"insuranceGroup": {
											"type": "null"
										},
										"insuranceSecurityCode": {
											"type": "null"
										},
										"firstRegistrationDate": {
											"type": "null"
										},
										"colour": {
											"type": "null"
										},
										"style": {
											"type": "null"
										},
										"subStyle": {
											"type": "null"
										},
										"lengthMM": {
											"type": "null"
										},
										"heightMM": {
											"type": "null"
										},
										"widthMM": {
											"type": "null"
										},
										"payloadLengthMM": {
											"type": "null"
										},
										"payloadWidthMM": {
											"type": "null"
										},
										"payloadHeightMM": {
											"type": "null"
										},
										"payloadWeightKG": {
											"type": "null"
										},
										"minimumKerbWeightKG": {
											"type": "null"
										},
										"grossVehicleWeightKG": {
											"type": "null"
										},
										"odometerReadingMiles": {
											"type": "integer"
										},
										"warrantyMonthsOnPurchase": {
											"type": "null"
										},
										"serviceHistory": {
											"type": "null"
										},
										"plate": {
											"type": "string"
										},
										"yearOfManufacture": {
											"type": "string"
										},
										"interiorCondition": {
											"type": "null"
										},
										"tyreCondition": {
											"type": "null"
										},
										"bodyCondition": {
											"type": "null"
										},
										"previousOwners": {
											"type": "null"
										},
										"exDemo": {
											"type": "null"
										},
										"v5Certificate": {
											"type": "null"
										},
										"driverPosition": {
											"type": "string"
										},
										"axleConfiguration": {
											"type": "null"
										},
										"upholstery": {
											"type": "null"
										},
										"interiorColour": {
											"type": "null"
										},
										"exteriorFinish": {
											"type": "null"
										},
										"lastServiceOdometerReadingMiles": {
											"type": "null"
										},
										"lastServiceDate": {
											"type": "null"
										},
										"chassisMake": {
											"type": "null"
										},
										"chassisModel": {
											"type": "null"
										},
										"bedroomLayout": {
											"type": "null"
										},
										"endLayout": {
											"type": "null"
										},
										"bedrooms": {
											"type": "null"
										},
										"berths": {
											"type": "null"
										},
										"standard": {
											"type": "object",
											"properties": {
												"make": {
													"type": "string"
												},
												"model": {
													"type": "string"
												},
												"generation": {
													"type": "null"
												},
												"derivative": {
													"type": "string"
												},
												"trim": {
													"type": "null"
												},
												"bodyType": {
													"type": "string"
												},
												"fuelType": {
													"type": "string"
												},
												"transmissionType": {
													"type": "string"
												},
												"cabType": {
													"type": "null"
												},
												"drivetrain": {
													"type": "string"
												},
												"colour": {
													"type": "string"
												},
												"style": {
													"type": "null"
												},
												"subStyle": {
													"type": "null"
												}
											}
										}
									}
								},
								"advertiser": {
									"type": "object",
									"properties": {
										"advertiserId": {
											"type": "string"
										},
										"name": {
											"type": "string"
										},
										"segment": {
											"type": "string"
										},
										"website": {
											"type": "string"
										},
										"mobileWebsite": {
											"type": "string"
										},
										"phone": {
											"type": "string"
										},
										"location": {
											"type": "object",
											"properties": {
												"addressLineOne": {
													"type": "string"
												},
												"town": {
													"type": "string"
												},
												"county": {
													"type": "null"
												},
												"region": {
													"type": "string"
												},
												"postCode": {
													"type": "string"
												},
												"latitude": {
													"type": "number"
												},
												"longitude": {
													"type": "number"
												}
											}
										},
										"advertStrapline": {
											"type": "null"
										}
									}
								},
								"adverts": {
									"type": "object",
									"properties": {
										"forecourtPrice": {
											"type": "object",
											"properties": {
												"amountGBP": {
													"type": "integer"
												}
											}
										},
										"dueDate": {
											"type": "null"
										},
										"manufacturerApproved": {
											"type": "boolean"
										},
										"twelveMonthsMot": {
											"type": "boolean"
										},
										"motInsurance": {
											"type": "null"
										},
										"retailAdverts": {
											"type": "object",
											"properties": {
												"price": {
													"type": "object",
													"properties": {
														"amountGBP": {
															"type": "integer"
														}
													}
												},
												"priceOnApplication": {
													"type": "boolean"
												},
												"manufacturerRRP": {
													"type": "object",
													"properties": {
														"amountGBP": {
															"type": "null"
														}
													}
												},
												"vatExcluded": {
													"type": "null"
												},
												"attentionGrabber": {
													"type": "null"
												},
												"description": {
													"type": "null"
												},
												"description2": {
													"type": "null"
												},
												"priceIndicatorRating": {
													"type": "string"
												},
												"autotraderAdvert": {
													"type": "object",
													"properties": {
														"status": {
															"type": "string"
														}
													}
												},
												"advertiserAdvert": {
													"type": "object",
													"properties": {
														"status": {
															"type": "string"
														}
													}
												},
												"locatorAdvert": {
													"type": "object",
													"properties": {
														"status": {
															"type": "string"
														}
													}
												},
												"exportAdvert": {
													"type": "object",
													"properties": {
														"status": {
															"type": "string"
														}
													}
												},
												"profileAdvert": {
													"type": "object",
													"properties": {
														"status": {
															"type": "string"
														}
													}
												},
												"displayOptions": {
													"type": "object",
													"properties": {
														"excludePreviousOwners": {
															"type": "boolean"
														},
														"excludeStrapline": {
															"type": "boolean"
														},
														"excludeMot": {
															"type": "boolean"
														},
														"excludeWarranty": {
															"type": "boolean"
														},
														"excludeInteriorDetails": {
															"type": "boolean"
														},
														"excludeTyreCondition": {
															"type": "boolean"
														},
														"excludeBodyCondition": {
															"type": "boolean"
														}
													}
												}
											}
										}
									}
								},
								"metadata": {
									"type": "object",
									"properties": {
										"stockId": {
											"type": "string"
										},
										"searchId": {
											"type": "string"
										},
										"externalStockId": {
											"type": "string"
										},
										"externalStockReference": {
											"type": "null"
										},
										"lastUpdated": {
											"type": "string"
										},
										"lastUpdatedByAdvertiser": {
											"type": "string"
										},
										"versionNumber": {
											"type": "integer"
										},
										"lifecycleState": {
											"type": "string"
										},
										"dateOnForecourt": {
											"type": "string"
										}
									}
								},
								"features": {
									"type": "array",
									"items": {
										"type": "object",
										"properties": {
											"name": {
												"type": "string"
											},
											"type": {
												"type": "string"
											}
										}
									}
								},
								"media": {
									"type": "object",
									"properties": {
										"images": {
											"type": "array",
											"items": {
												"type": "object",
												"properties": {
													"href": {
														"type": "string"
													}
												}
											}
										},
										"video": {
											"type": "object",
											"properties": {
												"href": {
													"type": "null"
												},
												"photoHref": {
													"type": "null"
												}
											}
										}
									}
								},
								"valuations": {
									"type": "object",
									"properties": {
										"marketAverage": {
											"type": "object",
											"properties": {
												"trade": {
													"type": "object",
													"properties": {
														"amountGBP": {
															"type": "null"
														}
													}
												},
												"partExchange": {
													"type": "object",
													"properties": {
														"amountGBP": {
															"type": "null"
														}
													}
												},
												"retail": {
													"type": "object",
													"properties": {
														"amountGBP": {
															"type": "null"
														},
														"amountExcludingVatGBP": {
															"type": "null"
														}
													}
												},
												"private": {
													"type": "object",
													"properties": {
														"amountGBP": {
															"type": "null"
														}
													}
												}
											}
										},
										"adjusted": {
											"type": "object",
											"properties": {
												"retail": {
													"type": "object",
													"properties": {
														"amountGBP": {
															"type": "null"
														}
													}
												},
												"trade": {
													"type": "object",
													"properties": {
														"amountGBP": {
															"type": "null"
														}
													}
												},
												"partExchange": {
													"type": "object",
													"properties": {
														"amountGBP": {
															"type": "null"
														}
													}
												},
												"private": {
													"type": "object",
													"properties": {
														"amountGBP": {
															"type": "null"
														}
													}
												}
											}
										}
									}
								},
								"vehicleMetrics": {
									"type": "object",
									"properties": {
										"national": {
											"type": "object",
											"properties": {
												"retail": {
													"type": "object",
													"properties": {
														"supply": {
															"type": "object",
															"properties": {
																"value": {
																	"type": "null"
																}
															}
														},
														"demand": {
															"type": "object",
															"properties": {
																"value": {
																	"type": "null"
																}
															}
														},
														"marketCondition": {
															"type": "object",
															"properties": {
																"value": {
																	"type": "null"
																}
															}
														},
														"rating": {
															"type": "object",
															"properties": {
																"value": {
																	"type": "null"
																}
															}
														},
														"daysToSell": {
															"type": "object",
															"properties": {
																"value": {
																	"type": "null"
																}
															}
														},
														"locations": {
															"type": "array"
														}
													}
												}
											}
										},
										"local": {
											"type": "object",
											"properties": {
												"retail": {
													"type": "object",
													"properties": {
														"rating": {
															"type": "object",
															"properties": {
																"value": {
																	"type": "null"
																}
															}
														},
														"daysToSell": {
															"type": "object",
															"properties": {
																"value": {
																	"type": "null"
																}
															}
														}
													}
												}
											}
										}
									}
								},
								"responseMetrics": {
									"type": "object",
									"properties": {
										"performanceRating": {
											"type": "object",
											"properties": {
												"score": {
													"type": "null"
												},
												"rating": {
													"type": "null"
												}
											}
										},
										"yesterday": {
											"type": "object",
											"properties": {
												"advertViews": {
													"type": "null"
												},
												"searchViews": {
													"type": "null"
												}
											}
										},
										"lastWeek": {
											"type": "object",
											"properties": {
												"advertViews": {
													"type": "null"
												},
												"searchViews": {
													"type": "null"
												}
											}
										}
									}
								},
								"check": {
									"type": "object",
									"properties": {
										"insuranceWriteoffCategory": {
											"type": "null"
										},
										"scrapped": {
											"type": "null"
										},
										"stolen": {
											"type": "null"
										},
										"imported": {
											"type": "null"
										},
										"exported": {
											"type": "null"
										},
										"privateFinance": {
											"type": "null"
										},
										"tradeFinance": {
											"type": "null"
										},
										"highRisk": {
											"type": "null"
										},
										"mileageDiscrepancy": {
											"type": "null"
										},
										"colourChanged": {
											"type": "null"
										},
										"registrationChanged": {
											"type": "null"
										},
										"previousOwners": {
											"type": "null"
										}
									}
								},
								"links": {
									"type": "object",
									"properties": {
										"competitor": {
											"type": "object",
											"properties": {
												"href": {
													"type": "string"
												}
											}
										}
									}
								}
							}
						},
						"results": {
							"type": "array",
							"items": {
								"type": "object",
								"properties": {
									"vehicle": {
										"type": "object",
										"properties": {
											"ownershipCondition": {
												"type": "string"
											},
											"registration": {
												"type": "string"
											},
											"vin": {
												"type": "string"
											},
											"make": {
												"type": "string"
											},
											"model": {
												"type": "string"
											},
											"generation": {
												"type": "string"
											},
											"derivative": {
												"type": "string"
											},
											"derivativeId": {
												"type": "string"
											},
											"vehicleType": {
												"type": "string"
											},
											"trim": {
												"type": "string"
											},
											"bodyType": {
												"type": "string"
											},
											"fuelType": {
												"type": "string"
											},
											"cabType": {
												"type": "null"
											},
											"transmissionType": {
												"type": "string"
											},
											"wheelbaseType": {
												"type": "string"
											},
											"roofHeightType": {
												"type": "null"
											},
											"drivetrain": {
												"type": "string"
											},
											"seats": {
												"type": "integer"
											},
											"doors": {
												"type": "integer"
											},
											"co2EmissionGPKM": {
												"type": "integer"
											},
											"topSpeedMPH": {
												"type": "integer"
											},
											"zeroToSixtyMPHSeconds": {
												"type": "null"
											},
											"badgeEngineSizeLitres": {
												"type": "number"
											},
											"engineCapacityCC": {
												"type": "integer"
											},
											"enginePowerBHP": {
												"type": "integer"
											},
											"fuelCapacityLitres": {
												"type": "number"
											},
											"emissionClass": {
												"type": "string"
											},
											"fuelEconomyNEDCExtraUrbanMPG": {
												"type": "number"
											},
											"fuelEconomyNEDCUrbanMPG": {
												"type": "number"
											},
											"fuelEconomyNEDCCombinedMPG": {
												"type": "number"
											},
											"fuelEconomyWLTPLowMPG": {
												"type": "null"
											},
											"fuelEconomyWLTPMediumMPG": {
												"type": "null"
											},
											"fuelEconomyWLTPHighMPG": {
												"type": "null"
											},
											"fuelEconomyWLTPExtraHighMPG": {
												"type": "null"
											},
											"fuelEconomyWLTPCombinedMPG": {
												"type": "number"
											},
											"bootSpaceSeatsUpLitres": {
												"type": "number"
											},
											"insuranceGroup": {
												"type": "string"
											},
											"insuranceSecurityCode": {
												"type": "string"
											},
											"firstRegistrationDate": {
												"type": "string"
											},
											"colour": {
												"type": "null"
											},
											"style": {
												"type": "null"
											},
											"subStyle": {
												"type": "null"
											},
											"lengthMM": {
												"type": "integer"
											},
											"heightMM": {
												"type": "integer"
											},
											"widthMM": {
												"type": "integer"
											},
											"payloadLengthMM": {
												"type": "null"
											},
											"payloadWidthMM": {
												"type": "null"
											},
											"payloadHeightMM": {
												"type": "null"
											},
											"payloadWeightKG": {
												"type": "null"
											},
											"minimumKerbWeightKG": {
												"type": "null"
											},
											"grossVehicleWeightKG": {
												"type": "null"
											},
											"odometerReadingMiles": {
												"type": "integer"
											},
											"warrantyMonthsOnPurchase": {
												"type": "null"
											},
											"serviceHistory": {
												"type": "null"
											},
											"plate": {
												"type": "string"
											},
											"yearOfManufacture": {
												"type": "string"
											},
											"interiorCondition": {
												"type": "null"
											},
											"tyreCondition": {
												"type": "null"
											},
											"bodyCondition": {
												"type": "null"
											},
											"previousOwners": {
												"type": "null"
											},
											"exDemo": {
												"type": "null"
											},
											"v5Certificate": {
												"type": "null"
											},
											"driverPosition": {
												"type": "string"
											},
											"axleConfiguration": {
												"type": "null"
											},
											"upholstery": {
												"type": "null"
											},
											"interiorColour": {
												"type": "null"
											},
											"exteriorFinish": {
												"type": "null"
											},
											"lastServiceOdometerReadingMiles": {
												"type": "null"
											},
											"lastServiceDate": {
												"type": "null"
											},
											"chassisMake": {
												"type": "null"
											},
											"chassisModel": {
												"type": "null"
											},
											"bedroomLayout": {
												"type": "null"
											},
											"endLayout": {
												"type": "null"
											},
											"bedrooms": {
												"type": "null"
											},
											"berths": {
												"type": "null"
											},
											"standard": {
												"type": "object",
												"properties": {
													"make": {
														"type": "string"
													},
													"model": {
														"type": "string"
													},
													"generation": {
														"type": "string"
													},
													"derivative": {
														"type": "string"
													},
													"trim": {
														"type": "string"
													},
													"bodyType": {
														"type": "string"
													},
													"fuelType": {
														"type": "string"
													},
													"transmissionType": {
														"type": "string"
													},
													"cabType": {
														"type": "null"
													},
													"drivetrain": {
														"type": "string"
													},
													"colour": {
														"type": "string"
													},
													"style": {
														"type": "null"
													},
													"subStyle": {
														"type": "null"
													}
												}
											}
										}
									},
									"advertiser": {
										"type": "object",
										"properties": {
											"advertiserId": {
												"type": "string"
											},
											"name": {
												"type": "string"
											},
											"segment": {
												"type": "string"
											},
											"website": {
												"type": "string"
											},
											"mobileWebsite": {
												"type": "string"
											},
											"phone": {
												"type": "string"
											},
											"location": {
												"type": "object",
												"properties": {
													"addressLineOne": {
														"type": "string"
													},
													"town": {
														"type": "string"
													},
													"county": {
														"type": "null"
													},
													"region": {
														"type": "string"
													},
													"postCode": {
														"type": "string"
													},
													"latitude": {
														"type": "number"
													},
													"longitude": {
														"type": "number"
													}
												}
											},
											"advertStrapline": {
												"type": "null"
											}
										}
									},
									"adverts": {
										"type": "object",
										"properties": {
											"forecourtPrice": {
												"type": "object",
												"properties": {
													"amountGBP": {
														"type": "integer"
													}
												}
											},
											"dueDate": {
												"type": "null"
											},
											"manufacturerApproved": {
												"type": "boolean"
											},
											"twelveMonthsMot": {
												"type": "boolean"
											},
											"motInsurance": {
												"type": "null"
											},
											"retailAdverts": {
												"type": "object",
												"properties": {
													"price": {
														"type": "object",
														"properties": {
															"amountGBP": {
																"type": "integer"
															}
														}
													},
													"priceOnApplication": {
														"type": "boolean"
													},
													"manufacturerRRP": {
														"type": "object",
														"properties": {
															"amountGBP": {
																"type": "null"
															}
														}
													},
													"vatExcluded": {
														"type": "null"
													},
													"attentionGrabber": {
														"type": "string"
													},
													"description": {
														"type": "null"
													},
													"description2": {
														"type": "string"
													},
													"priceIndicatorRating": {
														"type": "string"
													},
													"autotraderAdvert": {
														"type": "object",
														"properties": {
															"status": {
																"type": "string"
															}
														}
													},
													"advertiserAdvert": {
														"type": "object",
														"properties": {
															"status": {
																"type": "string"
															}
														}
													},
													"locatorAdvert": {
														"type": "object",
														"properties": {
															"status": {
																"type": "string"
															}
														}
													},
													"exportAdvert": {
														"type": "object",
														"properties": {
															"status": {
																"type": "string"
															}
														}
													},
													"profileAdvert": {
														"type": "object",
														"properties": {
															"status": {
																"type": "string"
															}
														}
													},
													"displayOptions": {
														"type": "object",
														"properties": {
															"excludePreviousOwners": {
																"type": "boolean"
															},
															"excludeStrapline": {
																"type": "boolean"
															},
															"excludeMot": {
																"type": "boolean"
															},
															"excludeWarranty": {
																"type": "boolean"
															},
															"excludeInteriorDetails": {
																"type": "boolean"
															},
															"excludeTyreCondition": {
																"type": "boolean"
															},
															"excludeBodyCondition": {
																"type": "boolean"
															}
														}
													}
												}
											}
										}
									},
									"metadata": {
										"type": "object",
										"properties": {
											"stockId": {
												"type": "string"
											},
											"searchId": {
												"type": "string"
											},
											"externalStockId": {
												"type": "string"
											},
											"externalStockReference": {
												"type": "null"
											},
											"lastUpdated": {
												"type": "string"
											},
											"lastUpdatedByAdvertiser": {
												"type": "string"
											},
											"versionNumber": {
												"type": "integer"
											},
											"lifecycleState": {
												"type": "string"
											},
											"dateOnForecourt": {
												"type": "string"
											}
										}
									},
									"features": {
										"type": "array",
										"items": {
											"type": "object",
											"properties": {
												"name": {
													"type": "string"
												},
												"type": {
													"type": "string"
												}
											}
										}
									},
									"media": {
										"type": "object",
										"properties": {
											"images": {
												"type": "array",
												"items": {
													"type": "object",
													"properties": {
														"href": {
															"type": "string"
														}
													}
												}
											},
											"video": {
												"type": "object",
												"properties": {
													"href": {
														"type": "null"
													},
													"photoHref": {
														"type": "null"
													}
												}
											}
										}
									},
									"valuations": {
										"type": "object",
										"properties": {
											"marketAverage": {
												"type": "object",
												"properties": {
													"retail": {
														"type": "object",
														"properties": {
															"amountGBP": {
																"type": "integer"
															},
															"amountExcludingVatGBP": {
																"type": "null"
															}
														}
													}
												}
											},
											"adjusted": {
												"type": "object",
												"properties": {
													"retail": {
														"type": "object",
														"properties": {
															"amountGBP": {
																"type": "integer"
															}
														}
													}
												}
											}
										}
									},
									"check": {
										"type": "object",
										"properties": {
											"insuranceWriteoffCategory": {
												"type": "null"
											},
											"scrapped": {
												"type": "boolean"
											},
											"stolen": {
												"type": "boolean"
											},
											"imported": {
												"type": "boolean"
											},
											"exported": {
												"type": "boolean"
											},
											"privateFinance": {
												"type": "null"
											},
											"tradeFinance": {
												"type": "null"
											},
											"highRisk": {
												"type": "null"
											},
											"mileageDiscrepancy": {
												"type": "null"
											},
											"colourChanged": {
												"type": "null"
											},
											"registrationChanged": {
												"type": "null"
											},
											"previousOwners": {
												"type": "null"
											}
										}
									}
								}
							}
						},
						"facets": {
							"type": "object"
						},
						"totalResults": {
							"type": "integer"
						}
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AutolyticaBlobStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AutotraderValuationsCSV')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AutolyticaBlobStorage",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "AutotraderValuations.csv",
						"folderPath": "VehicleStock",
						"container": "peter-vardy"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "AdjustedPartExchange",
						"type": "String"
					},
					{
						"name": "AdjustedRetail",
						"type": "String"
					},
					{
						"name": "AdjustedTrade",
						"type": "String"
					},
					{
						"name": "Date",
						"type": "Date"
					},
					{
						"name": "ID",
						"type": "String"
					},
					{
						"name": "Part Exchange",
						"type": "String"
					},
					{
						"name": "Price Indicator",
						"type": "String"
					},
					{
						"name": "RegNo",
						"type": "String"
					},
					{
						"name": "Retail",
						"type": "String"
					},
					{
						"name": "StockNumber",
						"type": "String"
					},
					{
						"name": "Trade",
						"type": "String"
					},
					{
						"name": "Valuation Type",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AutolyticaBlobStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/CloseIT_Ext_Sales_Leads')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AutolyticaBlobStorage",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "SalesLeads.csv",
						"container": "rtc"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "Dealer_ID",
						"type": "String"
					},
					{
						"name": "Deal_ID",
						"type": "String"
					},
					{
						"name": "DealerName",
						"type": "String"
					},
					{
						"name": "GroupName",
						"type": "String"
					},
					{
						"name": "Customer_SalesPerson",
						"type": "String"
					},
					{
						"name": "Customer_ID",
						"type": "String"
					},
					{
						"name": "Customer_ProspectURN",
						"type": "String"
					},
					{
						"name": "Customer_Type",
						"type": "String"
					},
					{
						"name": "Customer_PostCode",
						"type": "String"
					},
					{
						"name": "Customer_LeadProviderName",
						"type": "String"
					},
					{
						"name": "Customer_DateCreated",
						"type": "String"
					},
					{
						"name": "Customer_ChangeDate",
						"type": "String"
					},
					{
						"name": "Customer_Status",
						"type": "String"
					},
					{
						"name": "Customer_DateStatusChanged",
						"type": "String"
					},
					{
						"name": "Customer_QuickLostReason",
						"type": "String"
					},
					{
						"name": "Customer_FirstContact",
						"type": "String"
					},
					{
						"name": "Customer_DateSold",
						"type": "String"
					},
					{
						"name": "Customer_DateLost",
						"type": "String"
					},
					{
						"name": "Deal_Type",
						"type": "String"
					},
					{
						"name": "Deal_Gap",
						"type": "String"
					},
					{
						"name": "Deal_Paint",
						"type": "String"
					},
					{
						"name": "Deal_Warranty",
						"type": "String"
					},
					{
						"name": "Deal_ClosedDate",
						"type": "String"
					},
					{
						"name": "Deal_BasicPrice",
						"type": "String"
					},
					{
						"name": "Deal_DeilveryCharge",
						"type": "String"
					},
					{
						"name": "Deal_FirstRegFee",
						"type": "String"
					},
					{
						"name": "Deal_RoadTax",
						"type": "String"
					},
					{
						"name": "Desired_Make",
						"type": "String"
					},
					{
						"name": "Desired_Model",
						"type": "String"
					},
					{
						"name": "Deal_Make",
						"type": "String"
					},
					{
						"name": "Deal_Model",
						"type": "String"
					},
					{
						"name": "Deal_ModelVariant",
						"type": "String"
					},
					{
						"name": "Deal_FuelType",
						"type": "String"
					},
					{
						"name": "Deal_GearType",
						"type": "String"
					},
					{
						"name": "Deal_OrderMethod",
						"type": "String"
					},
					{
						"name": "Deal_Colour",
						"type": "String"
					},
					{
						"name": "Deal_Interior",
						"type": "String"
					},
					{
						"name": "Deal_Mileage",
						"type": "String"
					},
					{
						"name": "Deal_DateConfirmed",
						"type": "String"
					},
					{
						"name": "Deal_ModelYear",
						"type": "String"
					},
					{
						"name": "Deal_Registration",
						"type": "String"
					},
					{
						"name": "Deal_DateOfRegistration",
						"type": "String"
					},
					{
						"name": "Deal_DemoDriven",
						"type": "String"
					},
					{
						"name": "Deal_ServicePayment",
						"type": "String"
					},
					{
						"name": "Deal_ExpectedDeliveryMonth",
						"type": "String"
					},
					{
						"name": "Deal_ExpectedDeliveryYear",
						"type": "String"
					},
					{
						"name": "Deal_ExpectedDeliveryTimeOfMonth",
						"type": "String"
					},
					{
						"name": "Deal_DepositPaymentMethod",
						"type": "String"
					},
					{
						"name": "Deal_FinanceMethod",
						"type": "String"
					},
					{
						"name": "Deal_MonthlyBudget",
						"type": "String"
					},
					{
						"name": "Deal_Deposit",
						"type": "String"
					},
					{
						"name": "Deal_NewFinancedBy",
						"type": "String"
					},
					{
						"name": "PartEx_ID",
						"type": "String"
					},
					{
						"name": "PartEx_Registration",
						"type": "String"
					},
					{
						"name": "PartEx_Make",
						"type": "String"
					},
					{
						"name": "PartEx_Model",
						"type": "String"
					},
					{
						"name": "PartEx_Variant",
						"type": "String"
					},
					{
						"name": "PartEx_Colour",
						"type": "String"
					},
					{
						"name": "PartEx_DateOfRegistration",
						"type": "String"
					},
					{
						"name": "PartEx_Mileage",
						"type": "String"
					},
					{
						"name": "PartEx_VatQualifying",
						"type": "String"
					},
					{
						"name": "PartEx_NumberOfOwners",
						"type": "String"
					},
					{
						"name": "PartEx_ServiceHistory",
						"type": "String"
					},
					{
						"name": "PartEx_SIVAmount",
						"type": "String"
					},
					{
						"name": "InitialContact_Created",
						"type": "String"
					},
					{
						"name": "InitialContact_Type",
						"type": "String"
					},
					{
						"name": "Deal_CancelledDate",
						"type": "String"
					},
					{
						"name": "Deal_HandOverDate",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AutolyticaBlobStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DetailedSalesCSV')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AutolyticaBlobProd",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"container": "autolytica"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "Client ID",
						"type": "String"
					},
					{
						"name": "Dealer ID",
						"type": "String"
					},
					{
						"name": "Customer ID",
						"type": "String"
					},
					{
						"name": "New or Used",
						"type": "String"
					},
					{
						"name": "Vehicle Type",
						"type": "String"
					},
					{
						"name": "Vehicle ID",
						"type": "String"
					},
					{
						"name": "Stock Number",
						"type": "String"
					},
					{
						"name": "Registration Number",
						"type": "String"
					},
					{
						"name": "Registration Date",
						"type": "String"
					},
					{
						"name": "Dealership Date in Stock",
						"type": "String"
					},
					{
						"name": "Mileage",
						"type": "String"
					},
					{
						"name": "Stock Value",
						"type": "String"
					},
					{
						"name": "Sale Date",
						"type": "String"
					},
					{
						"name": "Invoice Number",
						"type": "String"
					},
					{
						"name": "Sales Executive ID",
						"type": "String"
					},
					{
						"name": "Full Invoice Value",
						"type": "String"
					},
					{
						"name": "Paint Value",
						"type": "String"
					},
					{
						"name": "Warranty Value",
						"type": "String"
					},
					{
						"name": "GAP Value",
						"type": "String"
					},
					{
						"name": "Wheel Protection Value",
						"type": "String"
					},
					{
						"name": "Add on Product 1",
						"type": "String"
					},
					{
						"name": "Add on Product 2",
						"type": "String"
					},
					{
						"name": "Add on Product 3",
						"type": "String"
					},
					{
						"name": "Add on Product 4",
						"type": "String"
					},
					{
						"name": "Accessory Value",
						"type": "String"
					},
					{
						"name": "Reconditioning",
						"type": "String"
					},
					{
						"name": "Finance Commission",
						"type": "String"
					},
					{
						"name": "Financed",
						"type": "String"
					},
					{
						"name": "Total Gross Profit",
						"type": "String"
					},
					{
						"name": "Sale Type",
						"type": "String"
					},
					{
						"name": "Part Exchange Stock Number 1",
						"type": "String"
					},
					{
						"name": "Part Exchange Stock Number 2",
						"type": "String"
					},
					{
						"name": "Part Exchange Stock Number 3",
						"type": "String"
					},
					{
						"name": "Source",
						"type": "String"
					},
					{
						"name": "Vehicle Category Code",
						"type": "String"
					},
					{
						"name": "Purchaser ID",
						"type": "String"
					},
					{
						"name": "Supplier",
						"type": "String"
					},
					{
						"name": "Available Date",
						"type": "String"
					},
					{
						"name": "Accessory Profit",
						"type": "String"
					},
					{
						"name": "Paint Profit",
						"type": "String"
					},
					{
						"name": "Warranty Profit",
						"type": "String"
					},
					{
						"name": "GAP Profit",
						"type": "String"
					},
					{
						"name": "Other Profit",
						"type": "String"
					},
					{
						"name": "Add On Product 1 Profit",
						"type": "String"
					},
					{
						"name": "Add On Product 2 Profit",
						"type": "String"
					},
					{
						"name": "Add On Product 3 Profit",
						"type": "String"
					},
					{
						"name": "Add On Product 4 Profit",
						"type": "String"
					},
					{
						"name": "Volume Bonus",
						"type": "String"
					},
					{
						"name": "Other Bonus",
						"type": "String"
					},
					{
						"name": "RFL Profit",
						"type": "String"
					},
					{
						"name": "Metal Profit",
						"type": "String"
					},
					{
						"name": "Metal Invoice Value",
						"type": "String"
					},
					{
						"name": "Delivery Date",
						"type": "String"
					},
					{
						"name": "Group Purchase Date",
						"type": "String"
					},
					{
						"name": "Received Date",
						"type": "String"
					},
					{
						"name": "Purchase Account",
						"type": "String"
					},
					{
						"name": "Sales Account ID",
						"type": "String"
					},
					{
						"name": "Sales Account Name",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AutolyticaBlobProd')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/EMAXCSV_EnquiryActivity')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AutolyticaBlobStorage",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "EMAXRaw_EnquiryActivity.csv",
						"container": "enquirymax"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "DealerID",
						"type": "String"
					},
					{
						"name": "DealerCode",
						"type": "String"
					},
					{
						"name": "DealerName",
						"type": "String"
					},
					{
						"name": "SalesPerson",
						"type": "String"
					},
					{
						"name": "SalespersonID",
						"type": "String"
					},
					{
						"name": "EnquiryID",
						"type": "String"
					},
					{
						"name": "CustomerID",
						"type": "String"
					},
					{
						"name": "CustomerType",
						"type": "String"
					},
					{
						"name": "SourceOfEnquiry",
						"type": "String"
					},
					{
						"name": "MethodOfContact",
						"type": "String"
					},
					{
						"name": "EnquiryVehicleType",
						"type": "String"
					},
					{
						"name": "EnquiryVehicleMake",
						"type": "String"
					},
					{
						"name": "EnquiryVehicleRange",
						"type": "String"
					},
					{
						"name": "EnquiryVehicleModel",
						"type": "String"
					},
					{
						"name": "EnquiryVehicleDerivative",
						"type": "String"
					},
					{
						"name": "EnquiryVehicleReg",
						"type": "String"
					},
					{
						"name": "EnquiryVehicleVin",
						"type": "String"
					},
					{
						"name": "PXVehicle",
						"type": "String"
					},
					{
						"name": "PXReg",
						"type": "String"
					},
					{
						"name": "PXVin",
						"type": "String"
					},
					{
						"name": "PXMake",
						"type": "String"
					},
					{
						"name": "PXRange",
						"type": "String"
					},
					{
						"name": "PXModel",
						"type": "String"
					},
					{
						"name": "PXDerivative",
						"type": "String"
					},
					{
						"name": "PXSIValue",
						"type": "String"
					},
					{
						"name": "PXDisposalMethod",
						"type": "String"
					},
					{
						"name": "OfferCreatedDate",
						"type": "String"
					},
					{
						"name": "OfferVehicleType",
						"type": "String"
					},
					{
						"name": "OfferVehicleMake",
						"type": "String"
					},
					{
						"name": "OfferVehicleRange",
						"type": "String"
					},
					{
						"name": "OfferVehicleModel",
						"type": "String"
					},
					{
						"name": "OfferVehicleDerivative",
						"type": "String"
					},
					{
						"name": "OfferVehicleReg",
						"type": "String"
					},
					{
						"name": "OfferVehicleVin",
						"type": "String"
					},
					{
						"name": "VehicleBasePrice",
						"type": "String"
					},
					{
						"name": "AddonsPrice",
						"type": "String"
					},
					{
						"name": "Discounts",
						"type": "String"
					},
					{
						"name": "DeliveryFee",
						"type": "String"
					},
					{
						"name": "RegFee",
						"type": "String"
					},
					{
						"name": "RFLFee",
						"type": "String"
					},
					{
						"name": "TotalOTRprice",
						"type": "String"
					},
					{
						"name": "PXVehicleOffer",
						"type": "String"
					},
					{
						"name": "PXOverAllowance",
						"type": "String"
					},
					{
						"name": "OrderNo",
						"type": "String"
					},
					{
						"name": "Financed",
						"type": "String"
					},
					{
						"name": "FinanceHouse",
						"type": "String"
					},
					{
						"name": "Rate",
						"type": "String"
					},
					{
						"name": "APR",
						"type": "String"
					},
					{
						"name": "FinanceTerms",
						"type": "String"
					},
					{
						"name": "FinanceType",
						"type": "String"
					},
					{
						"name": "CashDeposit",
						"type": "String"
					},
					{
						"name": "DealerFDA",
						"type": "String"
					},
					{
						"name": "ProviderFDA",
						"type": "String"
					},
					{
						"name": "Cashback",
						"type": "String"
					},
					{
						"name": "FinanceValue",
						"type": "String"
					},
					{
						"name": "MonthlyPayments",
						"type": "String"
					},
					{
						"name": "EnquiryStatusCode",
						"type": "String"
					},
					{
						"name": "EnquiryStatus",
						"type": "String"
					},
					{
						"name": "EnquiryDate",
						"type": "String"
					},
					{
						"name": "TestDriveDate",
						"type": "String"
					},
					{
						"name": "OrderDate",
						"type": "String"
					},
					{
						"name": "EstimatedHandoverDate",
						"type": "String"
					},
					{
						"name": "DeliveryDate",
						"type": "String"
					},
					{
						"name": "LostSaleDate",
						"type": "String"
					},
					{
						"name": "LostSaleReason",
						"type": "String"
					},
					{
						"name": "LostSaleRequestedDate",
						"type": "String"
					},
					{
						"name": "NULL",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AutolyticaBlobStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/EnquiryMAXEnquiriesJSON')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AutolyticaBlobStorage",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Json",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "EnquiriesJSON.json",
						"container": "enquirymax"
					}
				},
				"schema": {
					"type": "object",
					"properties": {
						"createdDateTime": {
							"type": "string"
						},
						"enquiryId": {
							"type": "string"
						},
						"customerId": {
							"type": "string"
						},
						"leadId": {
							"type": "string"
						},
						"status": {
							"type": "object",
							"properties": {
								"code": {
									"type": "string"
								},
								"description": {
									"type": "string"
								}
							}
						},
						"testDrive": {
							"type": "object",
							"properties": {
								"appointmentDate": {
									"type": "string"
								},
								"taken": {
									"type": "boolean"
								}
							}
						},
						"type": {
							"type": "string"
						},
						"partExchangeCount": {
							"type": "integer"
						},
						"sourceOfEnquiry": {
							"type": "string"
						},
						"methodOfContact": {
							"type": "string"
						},
						"vehicleOfInterest": {
							"type": "object",
							"properties": {
								"make": {
									"type": "string"
								},
								"range": {
									"type": "string"
								},
								"model": {
									"type": "string"
								},
								"derivative": {
									"type": "string"
								},
								"vrm": {
									"type": "string"
								},
								"fuelType": {
									"type": "string"
								},
								"vehicleCode": {
									"type": "string"
								},
								"vehicleCodeType": {
									"type": "string"
								},
								"odometer": {
									"type": "object",
									"properties": {
										"unit": {
											"type": "string"
										},
										"currentValue": {
											"type": "integer"
										}
									}
								},
								"stockNumber": {
									"type": "string"
								},
								"vin": {
									"type": "string"
								}
							}
						},
						"soldVehicle": {
							"type": "object",
							"properties": {
								"make": {
									"type": "string"
								},
								"range": {
									"type": "string"
								},
								"model": {
									"type": "string"
								},
								"derivative": {
									"type": "string"
								},
								"vrm": {
									"type": "string"
								},
								"fuelType": {
									"type": "string"
								},
								"vehicleCode": {
									"type": "string"
								},
								"vehicleCodeType": {
									"type": "string"
								},
								"odometer": {
									"type": "object",
									"properties": {
										"unit": {
											"type": "string"
										},
										"currentValue": {
											"type": "integer"
										}
									}
								},
								"stockNumber": {
									"type": "string"
								},
								"vin": {
									"type": "string"
								}
							}
						},
						"links": {
							"type": "object"
						},
						"lostSale": {
							"type": "object",
							"properties": {
								"lostSaleRequested": {
									"type": "string"
								},
								"lostSaleAccepted": {
									"type": "string"
								},
								"lostSaleReason": {
									"type": "string"
								}
							}
						},
						"originApp": {
							"type": "string"
						},
						"enquiryNotes": {
							"type": "array",
							"items": {
								"type": "object",
								"properties": {
									"description": {
										"type": "string"
									},
									"createdDateTime": {
										"type": "string"
									},
									"createdByName": {
										"type": "string"
									}
								}
							}
						},
						"customerFinanceDetails": {
							"type": "object",
							"properties": {
								"model": {
									"type": "string"
								},
								"registration": {
									"type": "string"
								},
								"agreementNo": {
									"type": "string"
								},
								"financeProduct": {
									"type": "string"
								},
								"term": {
									"type": "string"
								},
								"deposit": {
									"type": "string"
								},
								"installmentAmount": {
									"type": "string"
								},
								"gmfvBalloon": {
									"type": "string"
								},
								"annualContractMileage": {
									"type": "string"
								},
								"contractStartDate": {
									"type": "string"
								},
								"contractEndDate": {
									"type": "string"
								},
								"outstandingBalance": {
									"type": "string"
								}
							}
						},
						"deskingDeal": {
							"type": "object",
							"properties": {
								"financeProduct": {
									"type": "string"
								},
								"term": {
									"type": "string"
								},
								"deposit": {
									"type": "string"
								},
								"installmentAmount": {
									"type": "string"
								},
								"gmfvBalloon": {
									"type": "string"
								},
								"annualContractMileage": {
									"type": "string"
								}
							}
						},
						"estimatedEquityPosition": {
							"type": "object",
							"properties": {
								"estimatedPxValue": {
									"type": "string"
								},
								"estimatedEquity": {
									"type": "string"
								}
							}
						}
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AutolyticaBlobStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/EnquiryMAXOffersJSON')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AutolyticaBlobStorage",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Json",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "OffersJSON.json",
						"container": "enquirymax"
					}
				},
				"schema": {
					"type": "object",
					"properties": {
						"enquiryID": {
							"type": "string"
						},
						"Offers": {
							"type": "object",
							"properties": {
								"offerStatus": {
									"type": "string"
								},
								"vehicle": {
									"type": "object",
									"properties": {
										"make": {
											"type": "string"
										},
										"range": {
											"type": "string"
										},
										"model": {
											"type": "string"
										},
										"derivative": {
											"type": "string"
										},
										"vrm": {
											"type": "string"
										},
										"fuelType": {
											"type": "string"
										},
										"vehicleCode": {
											"type": "string"
										},
										"vehicleCodeType": {
											"type": "string"
										},
										"odometer": {
											"type": "object",
											"properties": {
												"unit": {
													"type": "string"
												},
												"currentValue": {
													"type": "integer"
												}
											}
										},
										"stockNumber": {
											"type": "string"
										},
										"vin": {
											"type": "string"
										}
									}
								},
								"financeQuotes": {
									"type": "array",
									"items": {
										"type": "object",
										"properties": {
											"financeType": {
												"type": "string"
											},
											"cashDeposit": {
												"type": "integer"
											},
											"fda": {
												"type": "integer"
											},
											"cashBack": {
												"type": "integer"
											},
											"docFee": {
												"type": "integer"
											},
											"balanceToFund": {
												"type": "integer"
											},
											"term": {
												"type": "integer"
											},
											"rate": {
												"type": "integer"
											},
											"maxAnnualMileage": {
												"type": "integer"
											},
											"monthlyPayment": {
												"type": "integer"
											},
											"finalPayment": {
												"type": "integer"
											}
										}
									}
								},
								"totalOnRoadPrice": {
									"type": "integer"
								},
								"specificationFrom": {
									"type": "string"
								},
								"vehicleBasePrice": {
									"type": "integer"
								},
								"deliveryFee": {
									"type": "integer"
								},
								"registrationFee": {
									"type": "integer"
								},
								"roadFundLicense": {
									"type": "integer"
								},
								"partExchangeVehicles": {
									"type": "array",
									"items": {
										"type": "object",
										"properties": {
											"vatQualifiying": {
												"type": "boolean"
											},
											"import": {
												"type": "boolean"
											},
											"noOfKeys": {
												"type": "integer"
											},
											"outstandingFinanceAmount": {
												"type": "integer"
											},
											"totalReconditionCost": {
												"type": "integer"
											},
											"siv": {
												"type": "integer"
											},
											"dateOfRegistration": {
												"type": "string"
											},
											"lastService": {
												"type": "string"
											},
											"nextService": {
												"type": "string"
											},
											"carTaxExpiry": {
												"type": "string"
											},
											"motExpiry": {
												"type": "string"
											},
											"numberOfOwners": {
												"type": "integer"
											},
											"valuation": {
												"type": "integer"
											},
											"underwrittenBy": {
												"type": "string"
											},
											"salesManager": {
												"type": "string"
											},
											"validUntil": {
												"type": "string"
											},
											"vehicleDisposal": {
												"type": "string"
											},
											"traderName": {
												"type": "string"
											},
											"lastServiceDate": {
												"type": "string"
											},
											"lastMotDate": {
												"type": "string"
											},
											"additionalHpiSummaryNotes": {
												"type": "string"
											},
											"refurbishmentComments": {
												"type": "string"
											},
											"vehicleDriven": {
												"type": "boolean"
											},
											"offerValidUntilDate": {
												"type": "string"
											},
											"vehicleDisposalRoute": {
												"type": "string"
											},
											"make": {
												"type": "string"
											},
											"range": {
												"type": "string"
											},
											"model": {
												"type": "string"
											},
											"derivative": {
												"type": "string"
											},
											"vrm": {
												"type": "string"
											},
											"fuelType": {
												"type": "string"
											},
											"vehicleCode": {
												"type": "string"
											},
											"vehicleCodeType": {
												"type": "string"
											},
											"odometer": {
												"type": "object",
												"properties": {
													"unit": {
														"type": "string"
													},
													"currentValue": {
														"type": "integer"
													}
												}
											},
											"stockNumber": {
												"type": "string"
											},
											"vin": {
												"type": "string"
											}
										}
									}
								},
								"partExchangeOverAllowance": {
									"type": "integer"
								},
								"incentives": {
									"type": "array",
									"items": {
										"type": "object",
										"properties": {
											"description": {
												"type": "string"
											},
											"priceExTax": {
												"type": "integer"
											},
											"price": {
												"type": "integer"
											},
											"categoryText": {
												"type": "string"
											},
											"optionCode": {
												"type": "string"
											},
											"optionText": {
												"type": "string"
											},
											"supplementaryOption": {
												"type": "boolean"
											}
										}
									}
								},
								"dealerOptions": {
									"type": "array",
									"items": {
										"type": "object",
										"properties": {
											"description": {
												"type": "string"
											},
											"priceExTax": {
												"type": "integer"
											},
											"price": {
												"type": "integer"
											},
											"categoryText": {
												"type": "string"
											},
											"optionCode": {
												"type": "string"
											},
											"optionText": {
												"type": "string"
											},
											"supplementaryOption": {
												"type": "boolean"
											}
										}
									}
								},
								"factoryOptions": {
									"type": "array",
									"items": {
										"type": "object",
										"properties": {
											"description": {
												"type": "string"
											},
											"priceExTax": {
												"type": "integer"
											},
											"price": {
												"type": "integer"
											},
											"categoryText": {
												"type": "string"
											},
											"optionCode": {
												"type": "string"
											},
											"optionText": {
												"type": "string"
											},
											"supplementaryOption": {
												"type": "boolean"
											}
										}
									}
								}
							}
						}
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AutolyticaBlobStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ExternalSchemas')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "autolytica",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "table_catalog",
						"type": "varchar"
					},
					{
						"name": "table_schema",
						"type": "varchar"
					},
					{
						"name": "table_name",
						"type": "varchar"
					},
					{
						"name": "column_name",
						"type": "varchar"
					},
					{
						"name": "ordinal_position",
						"type": "int",
						"precision": 10
					},
					{
						"name": "column_default",
						"type": "varchar"
					},
					{
						"name": "is_nullable",
						"type": "varchar"
					},
					{
						"name": "data_type",
						"type": "varchar"
					},
					{
						"name": "CHARACTER_MAXIMUM_LENGTH",
						"type": "int",
						"precision": 10
					},
					{
						"name": "CHARACTER_OCTET_LENGTH",
						"type": "int",
						"precision": 10
					},
					{
						"name": "NUMERIC_PRECISION",
						"type": "int",
						"precision": 10
					},
					{
						"name": "NUMERIC_PRECISION_RADIX",
						"type": "int",
						"precision": 10
					},
					{
						"name": "NUMERIC_SCALE",
						"type": "int",
						"precision": 10
					},
					{
						"name": "DATETIME_PRECISION",
						"type": "int",
						"precision": 10
					},
					{
						"name": "CHARACTER_SET_CATALOG",
						"type": "varchar"
					},
					{
						"name": "CHARACTER_SET_SCHEMA",
						"type": "varchar"
					},
					{
						"name": "CHARACTER_SET_NAME",
						"type": "varchar"
					},
					{
						"name": "COLLATION_CATALOG",
						"type": "varchar"
					},
					{
						"name": "COLLATION_SCHEMA",
						"type": "varchar"
					},
					{
						"name": "COLLATION_NAME",
						"type": "varchar"
					},
					{
						"name": "DOMAIN_CATALOG",
						"type": "varchar"
					},
					{
						"name": "DOMAIN_SCHEMA",
						"type": "varchar"
					},
					{
						"name": "DOMAIN_NAME",
						"type": "varchar"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "ExternalSchemas"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/autolytica')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PeterVardyClockingCSV')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AutolyticaBlobStorage",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "Clocking.csv",
						"container": "peter-vardy"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "ClockingSeqNo",
						"type": "String"
					},
					{
						"name": "DealerName",
						"type": "String"
					},
					{
						"name": "EmployeeName",
						"type": "String"
					},
					{
						"name": "EmployeeType",
						"type": "String"
					},
					{
						"name": "BookingNumber",
						"type": "String"
					},
					{
						"name": "RegistrationNumber",
						"type": "String"
					},
					{
						"name": "Action",
						"type": "String"
					},
					{
						"name": "DateTimeOn",
						"type": "String"
					},
					{
						"name": "DateTimeOff",
						"type": "String"
					},
					{
						"name": "AdjElapsed",
						"type": "String"
					},
					{
						"name": "Column1",
						"type": "String"
					},
					{
						"name": "Allowed",
						"type": "String"
					},
					{
						"name": "WorkType",
						"type": "String"
					},
					{
						"name": "SaleType",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AutolyticaBlobStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PeterVardyCustomerCSV')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AutolyticaBlobStorage",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "MKBI5.csv",
						"container": "peter-vardy"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"quoteChar": "\""
				},
				"schema": [
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AutolyticaBlobStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PeterVardyDMSEmployeeCSV')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AutolyticaBlobStorage",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "VSSBD.csv",
						"container": "peter-vardy"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": false,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "ID",
						"type": "String"
					},
					{
						"name": "Name",
						"type": "String"
					},
					{
						"name": "Dealership",
						"type": "String"
					},
					{
						"name": "EmployeeType",
						"type": "String"
					},
					{
						"name": "Check",
						"type": "String"
					},
					{
						"name": "RefID",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AutolyticaBlobStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PeterVardyDetailedSalesCSV')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AutolyticaBlobStorage",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "VSSBB.csv",
						"container": "peter-vardy"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": false,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "Client ID",
						"type": "String"
					},
					{
						"name": "Dealer",
						"type": "String"
					},
					{
						"name": "Cust ID",
						"type": "String"
					},
					{
						"name": "Title",
						"type": "String"
					},
					{
						"name": "forename",
						"type": "String"
					},
					{
						"name": "Surname",
						"type": "String"
					},
					{
						"name": "email",
						"type": "String"
					},
					{
						"name": "home phone",
						"type": "String"
					},
					{
						"name": "mobile",
						"type": "String"
					},
					{
						"name": "add 1",
						"type": "String"
					},
					{
						"name": "add 2",
						"type": "String"
					},
					{
						"name": "add 3",
						"type": "String"
					},
					{
						"name": "add 4",
						"type": "String"
					},
					{
						"name": "postcode",
						"type": "String"
					},
					{
						"name": "New or Used",
						"type": "String"
					},
					{
						"name": "type",
						"type": "String"
					},
					{
						"name": "Veh Magic",
						"type": "String"
					},
					{
						"name": "stock no",
						"type": "String"
					},
					{
						"name": "chassis",
						"type": "String"
					},
					{
						"name": "reg no",
						"type": "String"
					},
					{
						"name": "reg date",
						"type": "String"
					},
					{
						"name": "date in stock",
						"type": "String"
					},
					{
						"name": "CAP VIN",
						"type": "String"
					},
					{
						"name": "CAP code",
						"type": "String"
					},
					{
						"name": "make",
						"type": "String"
					},
					{
						"name": "model",
						"type": "String"
					},
					{
						"name": "derivative",
						"type": "String"
					},
					{
						"name": "engine size",
						"type": "String"
					},
					{
						"name": "bodystyle",
						"type": "String"
					},
					{
						"name": "mileage",
						"type": "String"
					},
					{
						"name": "fuel",
						"type": "String"
					},
					{
						"name": "transmission",
						"type": "String"
					},
					{
						"name": "generic colour",
						"type": "String"
					},
					{
						"name": "specific colour",
						"type": "String"
					},
					{
						"name": "doors",
						"type": "String"
					},
					{
						"name": "SIV",
						"type": "String"
					},
					{
						"name": "sale date",
						"type": "String"
					},
					{
						"name": "inv number",
						"type": "String"
					},
					{
						"name": "sales exec",
						"type": "String"
					},
					{
						"name": "full inv value",
						"type": "String"
					},
					{
						"name": "paint",
						"type": "String"
					},
					{
						"name": "warr",
						"type": "String"
					},
					{
						"name": "GAP",
						"type": "String"
					},
					{
						"name": "Acc",
						"type": "String"
					},
					{
						"name": "recon",
						"type": "String"
					},
					{
						"name": "Finance commission",
						"type": "String"
					},
					{
						"name": "profit",
						"type": "String"
					},
					{
						"name": "Sale type",
						"type": "String"
					},
					{
						"name": "PX1",
						"type": "String"
					},
					{
						"name": "PX2",
						"type": "String"
					},
					{
						"name": "PX3",
						"type": "String"
					},
					{
						"name": "Source",
						"type": "String"
					},
					{
						"name": "Model Analysis Code",
						"type": "String"
					},
					{
						"name": "Purchaser",
						"type": "String"
					},
					{
						"name": "Supplier Name",
						"type": "String"
					},
					{
						"name": "Purchase Invoice Date",
						"type": "String"
					},
					{
						"name": "Available Date",
						"type": "String"
					},
					{
						"name": "Accessory Profit",
						"type": "String"
					},
					{
						"name": "Paint Profit",
						"type": "String"
					},
					{
						"name": "Warr Profit",
						"type": "String"
					},
					{
						"name": "Gap Profit",
						"type": "String"
					},
					{
						"name": "Other Profit",
						"type": "String"
					},
					{
						"name": "Volume Bonus",
						"type": "String"
					},
					{
						"name": "Bonus",
						"type": "String"
					},
					{
						"name": "RFL Profit",
						"type": "String"
					},
					{
						"name": "Metal Profit",
						"type": "String"
					},
					{
						"name": "Vehicle Invoice Value",
						"type": "String"
					},
					{
						"name": "Delivery Date",
						"type": "String"
					},
					{
						"name": "Group Purchase Date",
						"type": "String"
					},
					{
						"name": "Received Date",
						"type": "String"
					},
					{
						"name": "Date In Group",
						"type": "String"
					},
					{
						"name": "Purchase Account",
						"type": "String"
					},
					{
						"name": "Supplier Name",
						"type": "String"
					},
					{
						"name": "Fuel Type",
						"type": "String"
					},
					{
						"name": "Sales Account ID",
						"type": "String"
					},
					{
						"name": "Sales Account Name",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AutolyticaBlobStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PeterVardyDetailedSalesCSV_Older')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AutolyticaBlobStorage",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "VSSBA.csv",
						"container": "peter-vardy"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": false,
					"nullValue": " ",
					"quoteChar": "\"",
					"treatEmptyAsNull": true
				},
				"schema": [
					{
						"name": "Client ID",
						"type": "String"
					},
					{
						"name": "Dealer",
						"type": "String"
					},
					{
						"name": "Cust ID",
						"type": "String"
					},
					{
						"name": "Title",
						"type": "String"
					},
					{
						"name": "forename",
						"type": "String"
					},
					{
						"name": "Surname",
						"type": "String"
					},
					{
						"name": "email",
						"type": "String"
					},
					{
						"name": "home phone",
						"type": "String"
					},
					{
						"name": "mobile",
						"type": "String"
					},
					{
						"name": "add 1",
						"type": "String"
					},
					{
						"name": "add 2",
						"type": "String"
					},
					{
						"name": "add 3",
						"type": "String"
					},
					{
						"name": "add 4",
						"type": "String"
					},
					{
						"name": "postcode",
						"type": "String"
					},
					{
						"name": "New or Used",
						"type": "String"
					},
					{
						"name": "type",
						"type": "String"
					},
					{
						"name": "Veh Magic",
						"type": "String"
					},
					{
						"name": "stock no",
						"type": "String"
					},
					{
						"name": "chassis",
						"type": "String"
					},
					{
						"name": "reg no",
						"type": "String"
					},
					{
						"name": "reg date",
						"type": "Date"
					},
					{
						"name": "date in stock",
						"type": "Date"
					},
					{
						"name": "CAP VIN",
						"type": "String"
					},
					{
						"name": "CAP code",
						"type": "String"
					},
					{
						"name": "make",
						"type": "String"
					},
					{
						"name": "model",
						"type": "String"
					},
					{
						"name": "derivative",
						"type": "String"
					},
					{
						"name": "engine size",
						"type": "String"
					},
					{
						"name": "bodystyle",
						"type": "String"
					},
					{
						"name": "mileage",
						"type": "String"
					},
					{
						"name": "fuel",
						"type": "String"
					},
					{
						"name": "transmission",
						"type": "String"
					},
					{
						"name": "generic colour",
						"type": "String"
					},
					{
						"name": "specific colour",
						"type": "String"
					},
					{
						"name": "doors",
						"type": "String"
					},
					{
						"name": "SIV",
						"type": "String"
					},
					{
						"name": "sale date",
						"type": "Date"
					},
					{
						"name": "inv number",
						"type": "String"
					},
					{
						"name": "sales exec",
						"type": "String"
					},
					{
						"name": "full inv value",
						"type": "String"
					},
					{
						"name": "paint",
						"type": "String"
					},
					{
						"name": "warr",
						"type": "String"
					},
					{
						"name": "GAP",
						"type": "String"
					},
					{
						"name": "Acc",
						"type": "String"
					},
					{
						"name": "recon",
						"type": "String"
					},
					{
						"name": "Finance commission",
						"type": "String"
					},
					{
						"name": "profit",
						"type": "String"
					},
					{
						"name": "Sale type",
						"type": "String"
					},
					{
						"name": "PX1",
						"type": "String"
					},
					{
						"name": "PX2",
						"type": "String"
					},
					{
						"name": "PX3",
						"type": "String"
					},
					{
						"name": "Source",
						"type": "String"
					},
					{
						"name": "Model Analysis Code",
						"type": "String"
					},
					{
						"name": "Purchaser",
						"type": "String"
					},
					{
						"name": "Supplier Name",
						"type": "String"
					},
					{
						"name": "Purchase Invoice Date",
						"type": "Date"
					},
					{
						"name": "Available Date",
						"type": "Date"
					},
					{
						"name": "Accessory Profit",
						"type": "String"
					},
					{
						"name": "Paint Profit",
						"type": "String"
					},
					{
						"name": "Warr Profit",
						"type": "String"
					},
					{
						"name": "Gap Profit",
						"type": "String"
					},
					{
						"name": "Other Profit",
						"type": "String"
					},
					{
						"name": "Volume Bonus",
						"type": "String"
					},
					{
						"name": "Bonus",
						"type": "String"
					},
					{
						"name": "RFL Profit",
						"type": "String"
					},
					{
						"name": "Metal Profit",
						"type": "String"
					},
					{
						"name": "Vehicle Invoice Value",
						"type": "String"
					},
					{
						"name": "Delivery Date",
						"type": "Date"
					},
					{
						"name": "Sales Account ID",
						"type": "String"
					},
					{
						"name": "Sales Account Name",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AutolyticaBlobStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PeterVardyEnquiryMaxCSV')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AutolyticaBlobStorage",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "enquirymax.csv",
						"folderPath": "Showroom",
						"container": "peter-vardy"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "Branch",
						"type": "String"
					},
					{
						"name": "Sales Type",
						"type": "String"
					},
					{
						"name": "Enquiry No",
						"type": "String"
					},
					{
						"name": "Customer Title",
						"type": "String"
					},
					{
						"name": "Customer Forename",
						"type": "String"
					},
					{
						"name": "Customer Surname",
						"type": "String"
					},
					{
						"name": "Company Name",
						"type": "String"
					},
					{
						"name": "Email",
						"type": "String"
					},
					{
						"name": "Home Phone",
						"type": "String"
					},
					{
						"name": "Mobile Phone",
						"type": "String"
					},
					{
						"name": "Work Phone",
						"type": "String"
					},
					{
						"name": "Postcode",
						"type": "String"
					},
					{
						"name": "Enquiry Created",
						"type": "String"
					},
					{
						"name": "Enquiry Type",
						"type": "String"
					},
					{
						"name": "Sales Executive",
						"type": "String"
					},
					{
						"name": "Business Manager",
						"type": "String"
					},
					{
						"name": "N/U",
						"type": "String"
					},
					{
						"name": "Vehicle Type",
						"type": "String"
					},
					{
						"name": "Make",
						"type": "String"
					},
					{
						"name": "Range",
						"type": "String"
					},
					{
						"name": "Model",
						"type": "String"
					},
					{
						"name": "Derivative",
						"type": "String"
					},
					{
						"name": "Registration No",
						"type": "String"
					},
					{
						"name": "Registration Date",
						"type": "String"
					},
					{
						"name": "Stock No",
						"type": "String"
					},
					{
						"name": "Group Date in Stock",
						"type": "String"
					},
					{
						"name": "Branch Date in Stock",
						"type": "String"
					},
					{
						"name": "First Order Date",
						"type": "String"
					},
					{
						"name": "Enquiry Status",
						"type": "String"
					},
					{
						"name": "Invoiced Date",
						"type": "String"
					},
					{
						"name": "Expected Delivery Date",
						"type": "String"
					},
					{
						"name": "Delivery Date",
						"type": "String"
					},
					{
						"name": "Delivery Category",
						"type": "String"
					},
					{
						"name": "Metal Only",
						"type": "String"
					},
					{
						"name": "OTR Price exc Ins",
						"type": "String"
					},
					{
						"name": "Total Goods & Services inc Ins",
						"type": "String"
					},
					{
						"name": "Financed",
						"type": "String"
					},
					{
						"name": "Finance Provider",
						"type": "String"
					},
					{
						"name": "Fin Type",
						"type": "String"
					},
					{
						"name": "Finance Scheme",
						"type": "String"
					},
					{
						"name": "Loan Term",
						"type": "String"
					},
					{
						"name": "APR",
						"type": "String"
					},
					{
						"name": "Flat Rate",
						"type": "String"
					},
					{
						"name": "Finance Balance",
						"type": "String"
					},
					{
						"name": "Volume Bonus",
						"type": "String"
					},
					{
						"name": "Commission",
						"type": "String"
					},
					{
						"name": "DOC Fee",
						"type": "String"
					},
					{
						"name": "Finance Subsidy",
						"type": "String"
					},
					{
						"name": "Total Fin Margin",
						"type": "String"
					},
					{
						"name": "GAP",
						"type": "String"
					},
					{
						"name": "GAP Product",
						"type": "String"
					},
					{
						"name": "War",
						"type": "String"
					},
					{
						"name": "War Product",
						"type": "String"
					},
					{
						"name": "Ext",
						"type": "String"
					},
					{
						"name": "Ext Product",
						"type": "String"
					},
					{
						"name": "Paint",
						"type": "String"
					},
					{
						"name": "Paint Product",
						"type": "String"
					},
					{
						"name": "Total Ins Margin",
						"type": "String"
					},
					{
						"name": "Total F & I Margin",
						"type": "String"
					},
					{
						"name": "Volume Bonus Central",
						"type": "String"
					},
					{
						"name": "DOC Fee Central",
						"type": "String"
					},
					{
						"name": "Total Central Income",
						"type": "String"
					},
					{
						"name": "Days in Stock",
						"type": "String"
					},
					{
						"name": "Last Advertised Price",
						"type": "String"
					},
					{
						"name": "Model Analysis Code",
						"type": "String"
					},
					{
						"name": "SIV",
						"type": "String"
					},
					{
						"name": "Stock No66",
						"type": "String"
					},
					{
						"name": "Chassis No",
						"type": "String"
					},
					{
						"name": "Engine Size",
						"type": "String"
					},
					{
						"name": "Body Style",
						"type": "String"
					},
					{
						"name": "Mileage",
						"type": "String"
					},
					{
						"name": "Fuel Type",
						"type": "String"
					},
					{
						"name": "Transmission",
						"type": "String"
					},
					{
						"name": "Colour",
						"type": "String"
					},
					{
						"name": "Trim Type",
						"type": "String"
					},
					{
						"name": "Number of Doors",
						"type": "String"
					},
					{
						"name": "Gross Profit",
						"type": "String"
					},
					{
						"name": "Reconditioning Cost",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AutolyticaBlobStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PeterVardyEnquiryMaxXLSX')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AutolyticaBlobStorage",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Excel",
				"typeProperties": {
					"sheetName": "enquiryMAX",
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "Peter Vardy EnquiryMax Raw.xlsx",
						"folderPath": "Showroom",
						"container": "peter-vardy"
					},
					"range": "",
					"firstRowAsHeader": true
				},
				"schema": [
					{
						"name": "Branch",
						"type": "String"
					},
					{
						"name": "Sales Type",
						"type": "String"
					},
					{
						"name": "Enquiry No",
						"type": "String"
					},
					{
						"name": "Customer Title",
						"type": "String"
					},
					{
						"name": "Customer Forename",
						"type": "String"
					},
					{
						"name": "Customer Surname",
						"type": "String"
					},
					{
						"name": "Company Name",
						"type": "String"
					},
					{
						"name": "Email",
						"type": "String"
					},
					{
						"name": "Home Phone",
						"type": "String"
					},
					{
						"name": "Mobile Phone",
						"type": "String"
					},
					{
						"name": "Work Phone",
						"type": "String"
					},
					{
						"name": "Postcode",
						"type": "String"
					},
					{
						"name": "Enquiry Created",
						"type": "String"
					},
					{
						"name": "Enquiry Type",
						"type": "String"
					},
					{
						"name": "Sales Executive",
						"type": "String"
					},
					{
						"name": "Business Manager",
						"type": "String"
					},
					{
						"name": "N/U",
						"type": "String"
					},
					{
						"name": "Vehicle Type",
						"type": "String"
					},
					{
						"name": "Make",
						"type": "String"
					},
					{
						"name": "Range",
						"type": "String"
					},
					{
						"name": "Model",
						"type": "String"
					},
					{
						"name": "Derivative",
						"type": "String"
					},
					{
						"name": "Registration No",
						"type": "String"
					},
					{
						"name": "Registration Date",
						"type": "String"
					},
					{
						"name": "Stock No",
						"type": "String"
					},
					{
						"name": "Group Date in Stock",
						"type": "String"
					},
					{
						"name": "Branch Date in Stock",
						"type": "String"
					},
					{
						"name": "First Order Date",
						"type": "String"
					},
					{
						"name": "Enquiry Status",
						"type": "String"
					},
					{
						"name": "Invoiced Date",
						"type": "String"
					},
					{
						"name": "Expected Delivery Date",
						"type": "String"
					},
					{
						"name": "Delivery Date",
						"type": "String"
					},
					{
						"name": "Delivery Category",
						"type": "String"
					},
					{
						"name": "Metal Only",
						"type": "String"
					},
					{
						"name": "OTR Price exc Ins",
						"type": "String"
					},
					{
						"name": "Total Goods & Services inc Ins",
						"type": "String"
					},
					{
						"name": "Financed",
						"type": "String"
					},
					{
						"name": "Finance Provider",
						"type": "String"
					},
					{
						"name": "Fin Type",
						"type": "String"
					},
					{
						"name": "Finance Scheme",
						"type": "String"
					},
					{
						"name": "Loan Term",
						"type": "String"
					},
					{
						"name": "APR",
						"type": "String"
					},
					{
						"name": "Flat Rate",
						"type": "String"
					},
					{
						"name": "Finance Balance",
						"type": "String"
					},
					{
						"name": "Volume Bonus",
						"type": "String"
					},
					{
						"name": "Commission",
						"type": "String"
					},
					{
						"name": "DOC Fee",
						"type": "String"
					},
					{
						"name": "Finance Subsidy",
						"type": "String"
					},
					{
						"name": "Total Fin Margin",
						"type": "String"
					},
					{
						"name": "GAP",
						"type": "String"
					},
					{
						"name": "GAP Product",
						"type": "String"
					},
					{
						"name": "War",
						"type": "String"
					},
					{
						"name": "War Product",
						"type": "String"
					},
					{
						"name": "Ext",
						"type": "String"
					},
					{
						"name": "Ext Product",
						"type": "String"
					},
					{
						"name": "Paint",
						"type": "String"
					},
					{
						"name": "Paint Product",
						"type": "String"
					},
					{
						"name": "Total Ins Margin",
						"type": "String"
					},
					{
						"name": "Total F & I Margin",
						"type": "String"
					},
					{
						"name": "Volume Bonus Central",
						"type": "String"
					},
					{
						"name": "DOC Fee Central",
						"type": "String"
					},
					{
						"name": "Total Central Income",
						"type": "String"
					},
					{
						"name": "Days in Stock",
						"type": "String"
					},
					{
						"name": "Last Advertised Price",
						"type": "String"
					},
					{
						"name": "Model Analysis Code",
						"type": "String"
					},
					{
						"name": "SIV",
						"type": "String"
					},
					{
						"name": "Stock Number",
						"type": "String"
					},
					{
						"name": "Chassis No",
						"type": "String"
					},
					{
						"name": "Engine Size",
						"type": "String"
					},
					{
						"name": "Body Style",
						"type": "String"
					},
					{
						"name": "Mileage",
						"type": "String"
					},
					{
						"name": "Fuel Type",
						"type": "String"
					},
					{
						"name": "Transmission",
						"type": "String"
					},
					{
						"name": "Colour",
						"type": "String"
					},
					{
						"name": "Trim Type",
						"type": "String"
					},
					{
						"name": "Number of Doors",
						"type": "String"
					},
					{
						"name": "Gross Profit",
						"type": "String"
					},
					{
						"name": "Reconditioning Cost",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AutolyticaBlobStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PeterVardyPartsSalesCSV')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AutolyticaBlobStorage",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "SOBI2.csv",
						"container": "peter-vardy"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "co",
						"type": "String"
					},
					{
						"name": "ST",
						"type": "String"
					},
					{
						"name": "desc",
						"type": "String"
					},
					{
						"name": "Fran",
						"type": "String"
					},
					{
						"name": "Part number",
						"type": "String"
					},
					{
						"name": "Retail Value",
						"type": "String"
					},
					{
						"name": "Sale Value",
						"type": "String"
					},
					{
						"name": "Cost Value",
						"type": "String"
					},
					{
						"name": "Gross Profit",
						"type": "String"
					},
					{
						"name": "GP%",
						"type": "String"
					},
					{
						"name": "WIP No",
						"type": "String"
					},
					{
						"name": "Anal code",
						"type": "String"
					},
					{
						"name": "Order quantity",
						"type": "String"
					},
					{
						"name": "Selling pric",
						"type": "String"
					},
					{
						"name": "Date",
						"type": "String"
					},
					{
						"name": "Product group",
						"type": "String"
					},
					{
						"name": "Dept",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AutolyticaBlobStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PeterVardySMBI3CSV')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AutolyticaBlobStorage",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "SMBI3.csv",
						"container": "peter-vardy"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "Co",
						"type": "String"
					},
					{
						"name": "F",
						"type": "String"
					},
					{
						"name": "Part Number",
						"type": "String"
					},
					{
						"name": "Description",
						"type": "String"
					},
					{
						"name": "Qty",
						"type": "String"
					},
					{
						"name": "Avg Cos",
						"type": "String"
					},
					{
						"name": "3-6 Months",
						"type": "String"
					},
					{
						"name": "6-9 Months",
						"type": "String"
					},
					{
						"name": "9-12 Months",
						"type": "String"
					},
					{
						"name": "12-18 Months",
						"type": "String"
					},
					{
						"name": "18-24 Months",
						"type": "String"
					},
					{
						"name": "\u001c 24 Months",
						"type": "String"
					},
					{
						"name": "Date last sold",
						"type": "String"
					},
					{
						"name": "Date last purchased",
						"type": "String"
					},
					{
						"name": "Date last moved",
						"type": "String"
					},
					{
						"name": "ID",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AutolyticaBlobStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PeterVardySOBI1CSV')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AutolyticaBlobStorage",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "SOBI1.csv",
						"container": "peter-vardy"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "S/Type",
						"type": "String"
					},
					{
						"name": "Invoice No",
						"type": "String"
					},
					{
						"name": "WIP No",
						"type": "String"
					},
					{
						"name": "RTS code",
						"type": "String"
					},
					{
						"name": "Sold",
						"type": "String"
					},
					{
						"name": "Taken",
						"type": "String"
					},
					{
						"name": "Eff",
						"type": "String"
					},
					{
						"name": "Sale Value",
						"type": "String"
					},
					{
						"name": "Rec Rate",
						"type": "String"
					},
					{
						"name": "Mech",
						"type": "String"
					},
					{
						"name": "LA",
						"type": "String"
					},
					{
						"name": "LT",
						"type": "String"
					},
					{
						"name": "co",
						"type": "String"
					},
					{
						"name": "Operator name",
						"type": "String"
					},
					{
						"name": "Franchise code",
						"type": "String"
					},
					{
						"name": "Chassis number",
						"type": "String"
					},
					{
						"name": "Registration number.",
						"type": "String"
					},
					{
						"name": "Date editted",
						"type": "String"
					},
					{
						"name": "ID",
						"type": "String"
					},
					{
						"name": "Tmagic",
						"type": "String"
					},
					{
						"name": "Vmagic",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AutolyticaBlobStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PeterVardySOBI7CSV')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AutolyticaBlobStorage",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "SOBI7.csv",
						"container": "peter-vardy"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "D",
						"type": "String"
					},
					{
						"name": "WIP",
						"type": "String"
					},
					{
						"name": "Date Due",
						"type": "String"
					},
					{
						"name": "Customer",
						"type": "String"
					},
					{
						"name": "Reg No",
						"type": "String"
					},
					{
						"name": "Operator",
						"type": "String"
					},
					{
						"name": "O/due",
						"type": "String"
					},
					{
						"name": "Parts",
						"type": "String"
					},
					{
						"name": "Lin",
						"type": "String"
					},
					{
						"name": "Labour",
						"type": "String"
					},
					{
						"name": "Ln",
						"type": "String"
					},
					{
						"name": "Total",
						"type": "String"
					},
					{
						"name": "Prop_12",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AutolyticaBlobStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PeterVardyVSBI4')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AutolyticaBlobStorage",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "VSBI4.csv",
						"container": "peter-vardy"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "co",
						"type": "String"
					},
					{
						"name": "Vehicle",
						"type": "String"
					},
					{
						"name": "Regn",
						"type": "String"
					},
					{
						"name": "Desc",
						"type": "String"
					},
					{
						"name": "Estimated",
						"type": "String"
					},
					{
						"name": "Actual",
						"type": "String"
					},
					{
						"name": "Line Created",
						"type": "String"
					},
					{
						"name": "Date Pushed",
						"type": "String"
					},
					{
						"name": "Order date",
						"type": "String"
					},
					{
						"name": "WIP no",
						"type": "String"
					},
					{
						"name": "Option code",
						"type": "String"
					},
					{
						"name": "work desc",
						"type": "String"
					},
					{
						"name": "Progress code",
						"type": "String"
					},
					{
						"name": "A/c s status",
						"type": "String"
					},
					{
						"name": "Analysis code",
						"type": "String"
					},
					{
						"name": "Quarantine status",
						"type": "String"
					},
					{
						"name": "Log book",
						"type": "String"
					},
					{
						"name": "veh Inv date",
						"type": "String"
					},
					{
						"name": "Veh Delivery date",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AutolyticaBlobStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PeterVardyVehicleCSV')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AutolyticaBlobStorage",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "MKBI6.csv",
						"container": "peter-vardy"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": false,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "Magic",
						"type": "String"
					},
					{
						"name": "Fran",
						"type": "String"
					},
					{
						"name": "Model",
						"type": "String"
					},
					{
						"name": "Desc",
						"type": "String"
					},
					{
						"name": "Reg",
						"type": "String"
					},
					{
						"name": "DateReg",
						"type": "Date"
					},
					{
						"name": "DateDel",
						"type": "String"
					},
					{
						"name": "NU",
						"type": "String"
					},
					{
						"name": "Last Ser",
						"type": "String"
					},
					{
						"name": "Next Ser",
						"type": "String"
					},
					{
						"name": "last MOT",
						"type": "String"
					},
					{
						"name": "Next MOT",
						"type": "String"
					},
					{
						"name": "Date Last WK",
						"type": "String"
					},
					{
						"name": "CAP",
						"type": "String"
					},
					{
						"name": "VIN",
						"type": "String"
					},
					{
						"name": "DRVMAGIC",
						"type": "String"
					},
					{
						"name": "A/Sales m",
						"type": "String"
					},
					{
						"name": "SalesM",
						"type": "String"
					},
					{
						"name": "Record status",
						"type": "String"
					},
					{
						"name": "CAP code",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AutolyticaBlobStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PeterVardyVehicleStockCSV')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AutolyticaBlobStorage",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "VSSBC.csv",
						"container": "peter-vardy"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": false,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "ClientID",
						"type": "String"
					},
					{
						"name": "DealershipID",
						"type": "String"
					},
					{
						"name": "Type",
						"type": "String"
					},
					{
						"name": "RegistrationNo",
						"type": "String"
					},
					{
						"name": "StockNo",
						"type": "String"
					},
					{
						"name": "GroupDateInStock",
						"type": "String"
					},
					{
						"name": "DealershipDateInStock",
						"type": "String"
					},
					{
						"name": "Status",
						"type": "String"
					},
					{
						"name": "NewOrUsed",
						"type": "String"
					},
					{
						"name": "Chassis",
						"type": "String"
					},
					{
						"name": "FirstRegisteredDate",
						"type": "String"
					},
					{
						"name": "Make",
						"type": "String"
					},
					{
						"name": "Model",
						"type": "String"
					},
					{
						"name": "Derivative",
						"type": "String"
					},
					{
						"name": "Trim",
						"type": "String"
					},
					{
						"name": "EngineSize",
						"type": "String"
					},
					{
						"name": "Bodystyle",
						"type": "String"
					},
					{
						"name": "Mileage",
						"type": "String"
					},
					{
						"name": "FuelType",
						"type": "String"
					},
					{
						"name": "Transmission",
						"type": "String"
					},
					{
						"name": "GenericColour",
						"type": "String"
					},
					{
						"name": "SpecificColour",
						"type": "String"
					},
					{
						"name": "Doors",
						"type": "String"
					},
					{
						"name": "SIV",
						"type": "String"
					},
					{
						"name": "Vat",
						"type": "String"
					},
					{
						"name": "Source",
						"type": "String"
					},
					{
						"name": "ModelAnalysisCode",
						"type": "String"
					},
					{
						"name": "RetailPrice",
						"type": "String"
					},
					{
						"name": "Purchaser",
						"type": "String"
					},
					{
						"name": "SupplierName",
						"type": "String"
					},
					{
						"name": "PurchaseInvoiceDate",
						"type": "String"
					},
					{
						"name": "AvailableDate",
						"type": "String"
					},
					{
						"name": "ProgressCode",
						"type": "String"
					},
					{
						"name": "Recon",
						"type": "String"
					},
					{
						"name": "TransportCosts",
						"type": "String"
					},
					{
						"name": "AdjustedSIV",
						"type": "String"
					},
					{
						"name": "AvailableDate2",
						"type": "String"
					},
					{
						"name": "PurchaseInvoiceDate2",
						"type": "String"
					},
					{
						"name": "ReceivedDate",
						"type": "String"
					},
					{
						"name": "DateInGroup",
						"type": "String"
					},
					{
						"name": "PurchaseAccount",
						"type": "String"
					},
					{
						"name": "QuarantineStatus",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AutolyticaBlobStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PeterVardyWebStockFeedCSV')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AutolyticaBlobStorage",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "PVLWebFeed.csv",
						"container": "peter-vardy"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "Id",
						"type": "String"
					},
					{
						"name": "DealerCode",
						"type": "String"
					},
					{
						"name": "StockNumber",
						"type": "String"
					},
					{
						"name": "NewUsed",
						"type": "String"
					},
					{
						"name": "VehicleType",
						"type": "String"
					},
					{
						"name": "Demo",
						"type": "String"
					},
					{
						"name": "VatStatus",
						"type": "String"
					},
					{
						"name": "RegistrationNumber",
						"type": "String"
					},
					{
						"name": "ChassisNumber",
						"type": "String"
					},
					{
						"name": "EngineNumber",
						"type": "String"
					},
					{
						"name": "CapId",
						"type": "String"
					},
					{
						"name": "FullCapCode",
						"type": "String"
					},
					{
						"name": "CapModelYear",
						"type": "String"
					},
					{
						"name": "Make",
						"type": "String"
					},
					{
						"name": "Model",
						"type": "String"
					},
					{
						"name": "Derivative",
						"type": "String"
					},
					{
						"name": "EngineSize",
						"type": "String"
					},
					{
						"name": "Doors",
						"type": "String"
					},
					{
						"name": "BodyStyle",
						"type": "String"
					},
					{
						"name": "FuelType",
						"type": "String"
					},
					{
						"name": "TransmissionType",
						"type": "String"
					},
					{
						"name": "PaintColour",
						"type": "String"
					},
					{
						"name": "SpecificPaintColour",
						"type": "String"
					},
					{
						"name": "PaintType",
						"type": "String"
					},
					{
						"name": "TrimColour",
						"type": "String"
					},
					{
						"name": "TrimType",
						"type": "String"
					},
					{
						"name": "Odometer",
						"type": "String"
					},
					{
						"name": "OdometerType",
						"type": "String"
					},
					{
						"name": "RegistrationDate",
						"type": "String"
					},
					{
						"name": "PreviousOwners",
						"type": "String"
					},
					{
						"name": "ServiceHistory",
						"type": "String"
					},
					{
						"name": "Approved",
						"type": "String"
					},
					{
						"name": "WarrantyLevel",
						"type": "String"
					},
					{
						"name": "FullVehicleCheck",
						"type": "String"
					},
					{
						"name": "MultiPointInspection",
						"type": "String"
					},
					{
						"name": "BranchPurchaseDate",
						"type": "String"
					},
					{
						"name": "GroupPurchaseDate",
						"type": "String"
					},
					{
						"name": "StockStatus",
						"type": "String"
					},
					{
						"name": "VehicleStatus",
						"type": "String"
					},
					{
						"name": "AvailableDate",
						"type": "String"
					},
					{
						"name": "ReadyToGo",
						"type": "String"
					},
					{
						"name": "HoStock",
						"type": "String"
					},
					{
						"name": "OriginalPurchasePrice",
						"type": "String"
					},
					{
						"name": "StockValue",
						"type": "String"
					},
					{
						"name": "ReconDfa",
						"type": "String"
					},
					{
						"name": "DeliveryCost",
						"type": "String"
					},
					{
						"name": "VehicleSalePrice",
						"type": "String"
					},
					{
						"name": "DeliveryRetailSalePrice",
						"type": "String"
					},
					{
						"name": "ReducedPrice",
						"type": "String"
					},
					{
						"name": "IdaAmount",
						"type": "String"
					},
					{
						"name": "TrackerNumber",
						"type": "String"
					},
					{
						"name": "StockType",
						"type": "String"
					},
					{
						"name": "WebCategory",
						"type": "String"
					},
					{
						"name": "HouseCharge",
						"type": "String"
					},
					{
						"name": "Co2",
						"type": "String"
					},
					{
						"name": "StatusId",
						"type": "String"
					},
					{
						"name": "IsVisible",
						"type": "String"
					},
					{
						"name": "DateCreated",
						"type": "String"
					},
					{
						"name": "DateUpdated",
						"type": "String"
					},
					{
						"name": "LastUpdatedBy",
						"type": "String"
					},
					{
						"name": "SentToWeb",
						"type": "String"
					},
					{
						"name": "Seats",
						"type": "String"
					},
					{
						"name": "ManufactureDate",
						"type": "String"
					},
					{
						"name": "TaxBand",
						"type": "String"
					},
					{
						"name": "AutotraderBanner",
						"type": "String"
					},
					{
						"name": "Mpg",
						"type": "String"
					},
					{
						"name": "InsuranceGroup",
						"type": "String"
					},
					{
						"name": "PlusVat",
						"type": "String"
					},
					{
						"name": "Featured",
						"type": "String"
					},
					{
						"name": "POA",
						"type": "String"
					},
					{
						"name": "Verified",
						"type": "String"
					},
					{
						"name": "EnquiryCount",
						"type": "String"
					},
					{
						"name": "PriceLastUpdated",
						"type": "String"
					},
					{
						"name": "IsVirtual",
						"type": "String"
					},
					{
						"name": "Removed",
						"type": "String"
					},
					{
						"name": "PriceVerified",
						"type": "String"
					},
					{
						"name": "TradePrice",
						"type": "String"
					},
					{
						"name": "DateRemoved",
						"type": "String"
					},
					{
						"name": "ActualReg",
						"type": "String"
					},
					{
						"name": "RoadTaxSix",
						"type": "String"
					},
					{
						"name": "RoadTaxTwelve",
						"type": "String"
					},
					{
						"name": "CitNowVideo",
						"type": "String"
					},
					{
						"name": "VideoRemoved",
						"type": "String"
					},
					{
						"name": "CapManId",
						"type": "String"
					},
					{
						"name": "CapModId",
						"type": "String"
					},
					{
						"name": "ShortModel",
						"type": "String"
					},
					{
						"name": "FinanceOption",
						"type": "String"
					},
					{
						"name": "ComingSoon",
						"type": "String"
					},
					{
						"name": "Quarantine",
						"type": "String"
					},
					{
						"name": "FinanceDeposit",
						"type": "String"
					},
					{
						"name": "FinanceTerm",
						"type": "String"
					},
					{
						"name": "YouTubeVideo",
						"type": "String"
					},
					{
						"name": "NumberOfImages",
						"type": "String"
					},
					{
						"name": "ImageURLS",
						"type": "String"
					},
					{
						"name": "ToBeRemoved",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AutolyticaBlobStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PeterVardyWebStockFeedCSVOld')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AutolyticaBlobStorage",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "WebStockFeed.csv",
						"container": "peter-vardy"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "Prop_0",
						"type": "String"
					},
					{
						"name": "Images Not Found",
						"type": "String"
					},
					{
						"name": "Dealer Id",
						"type": "String"
					},
					{
						"name": "Feed_ID",
						"type": "String"
					},
					{
						"name": "Vehicle_ID",
						"type": "String"
					},
					{
						"name": "FullRegistration",
						"type": "String"
					},
					{
						"name": "Colour",
						"type": "String"
					},
					{
						"name": "Fueltype",
						"type": "String"
					},
					{
						"name": "Year",
						"type": "String"
					},
					{
						"name": "Mileage",
						"type": "String"
					},
					{
						"name": "BodyType",
						"type": "String"
					},
					{
						"name": "Doors",
						"type": "String"
					},
					{
						"name": "Make",
						"type": "String"
					},
					{
						"name": "Model",
						"type": "String"
					},
					{
						"name": "Variant",
						"type": "String"
					},
					{
						"name": "EngineSize",
						"type": "String"
					},
					{
						"name": "Price",
						"type": "String"
					},
					{
						"name": "Transmission",
						"type": "String"
					},
					{
						"name": "PictureRefs",
						"type": "String"
					},
					{
						"name": "ServiceHistory",
						"type": "String"
					},
					{
						"name": "PreviousOwners",
						"type": "String"
					},
					{
						"name": "Category",
						"type": "String"
					},
					{
						"name": "FourWheelDrive",
						"type": "String"
					},
					{
						"name": "Options",
						"type": "String"
					},
					{
						"name": "Comments",
						"type": "String"
					},
					{
						"name": "New",
						"type": "String"
					},
					{
						"name": "Used",
						"type": "String"
					},
					{
						"name": "Site",
						"type": "String"
					},
					{
						"name": "Origin",
						"type": "String"
					},
					{
						"name": "V5",
						"type": "String"
					},
					{
						"name": "Condition",
						"type": "String"
					},
					{
						"name": "ExDemo",
						"type": "String"
					},
					{
						"name": "FranchiseApproved",
						"type": "String"
					},
					{
						"name": "TradePrice",
						"type": "String"
					},
					{
						"name": "PriceSuffix",
						"type": "String"
					},
					{
						"name": "ServiceHistoryText",
						"type": "String"
					},
					{
						"name": "Capid",
						"type": "String"
					},
					{
						"name": "Attention_Grabber",
						"type": "String"
					},
					{
						"name": "Glass_Id",
						"type": "String"
					},
					{
						"name": "Video_URL",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AutolyticaBlobStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PeterVardyWorkshopSalesCSV')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AutolyticaBlobStorage",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "SOBI1.csv",
						"container": "peter-vardy"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "S/Type",
						"type": "String"
					},
					{
						"name": "Invoice No",
						"type": "String"
					},
					{
						"name": "WIP No",
						"type": "String"
					},
					{
						"name": "RTS code",
						"type": "String"
					},
					{
						"name": "Sold",
						"type": "String"
					},
					{
						"name": "Taken",
						"type": "String"
					},
					{
						"name": "Eff",
						"type": "String"
					},
					{
						"name": "Sale Value",
						"type": "String"
					},
					{
						"name": "Rec Rate",
						"type": "String"
					},
					{
						"name": "Mech",
						"type": "String"
					},
					{
						"name": "LA",
						"type": "String"
					},
					{
						"name": "LT",
						"type": "String"
					},
					{
						"name": "co",
						"type": "String"
					},
					{
						"name": "Operator name",
						"type": "String"
					},
					{
						"name": "Franchise code",
						"type": "String"
					},
					{
						"name": "Chassis number",
						"type": "String"
					},
					{
						"name": "Registration number.",
						"type": "String"
					},
					{
						"name": "Date editted",
						"type": "String"
					},
					{
						"name": "Tmagic",
						"type": "String"
					},
					{
						"name": "Vmagic",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AutolyticaBlobStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/RTCTest')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AutolyticaBlobStorage",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"container": "rtc"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"quoteChar": "\""
				},
				"schema": [
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AutolyticaBlobStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/RTCVHCHeader')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "RTCVHC",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "HttpServerLocation"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "GroupName",
						"type": "String"
					},
					{
						"name": "SummaryDate",
						"type": "String"
					},
					{
						"name": "InspectionID",
						"type": "String"
					},
					{
						"name": "DealerCode",
						"type": "String"
					},
					{
						"name": "DealerName",
						"type": "String"
					},
					{
						"name": "Technician",
						"type": "String"
					},
					{
						"name": "ServiceAdvisor",
						"type": "String"
					},
					{
						"name": "CustomerName",
						"type": "String"
					},
					{
						"name": "VehicleRegistration",
						"type": "String"
					},
					{
						"name": "VehicleDescription",
						"type": "String"
					},
					{
						"name": "VehicleModel",
						"type": "String"
					},
					{
						"name": "VehicleRegistrationDate",
						"type": "String"
					},
					{
						"name": "WipNumber",
						"type": "String"
					},
					{
						"name": "InspectionType",
						"type": "String"
					},
					{
						"name": "InspectionMarque",
						"type": "String"
					},
					{
						"name": "VisitType",
						"type": "String"
					},
					{
						"name": "CustomerMileage",
						"type": "String"
					},
					{
						"name": "InspectionCreated",
						"type": "String"
					},
					{
						"name": "TechnicianStartedInspection",
						"type": "String"
					},
					{
						"name": "TechnicianFinishedInspection",
						"type": "String"
					},
					{
						"name": "PartsIdentificationCompleted",
						"type": "String"
					},
					{
						"name": "LabourIdentificationCompleted",
						"type": "String"
					},
					{
						"name": "InspectionFormPrinted",
						"type": "String"
					},
					{
						"name": "InspectionClosed",
						"type": "String"
					},
					{
						"name": "Year",
						"type": "String"
					},
					{
						"name": "Month",
						"type": "String"
					},
					{
						"name": "InspectionCarriedOut",
						"type": "String"
					},
					{
						"name": "TotalItemsIdentified",
						"type": "String"
					},
					{
						"name": "TotalValueIdentified",
						"type": "String"
					},
					{
						"name": "TotalItemsSold",
						"type": "String"
					},
					{
						"name": "TotalValueSold",
						"type": "String"
					},
					{
						"name": "TotalItemsLost",
						"type": "String"
					},
					{
						"name": "TotalValueLost",
						"type": "String"
					},
					{
						"name": "TotalItemsDeferred",
						"type": "String"
					},
					{
						"name": "TotalValueDeferred",
						"type": "String"
					},
					{
						"name": "RedTotalItemsIdentified",
						"type": "String"
					},
					{
						"name": "RedTotalValueIdentified",
						"type": "String"
					},
					{
						"name": "RedTotalItemsSold",
						"type": "String"
					},
					{
						"name": "RedTotalValueSold",
						"type": "String"
					},
					{
						"name": "RedTotalItemsLost",
						"type": "String"
					},
					{
						"name": "RedTotalValueLost",
						"type": "String"
					},
					{
						"name": "RedTotalItemsDeferred",
						"type": "String"
					},
					{
						"name": "RedTotalValueDeferred",
						"type": "String"
					},
					{
						"name": "AmberTotalItemsIdentified",
						"type": "String"
					},
					{
						"name": "AmberTotalValueIdentified",
						"type": "String"
					},
					{
						"name": "AmberTotalItemsSold",
						"type": "String"
					},
					{
						"name": "AmberTotalValueSold",
						"type": "String"
					},
					{
						"name": "AmberTotalItemsLost",
						"type": "String"
					},
					{
						"name": "AmberTotalValueLost",
						"type": "String"
					},
					{
						"name": "AmberTotalItemsDeferred",
						"type": "String"
					},
					{
						"name": "AmberTotalValueDeferred",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/RTCVHC')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/RTC_EXT_BI_Inspection_ISLabour')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "RTCDatabase",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "GroupID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Id",
						"type": "int",
						"precision": 10
					},
					{
						"name": "ItemId",
						"type": "int",
						"precision": 10
					},
					{
						"name": "LabourId",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Details",
						"type": "ntext"
					},
					{
						"name": "Allowed",
						"type": "decimal",
						"precision": 9,
						"scale": 2
					},
					{
						"name": "Price",
						"type": "decimal",
						"precision": 9,
						"scale": 2
					},
					{
						"name": "RepairCode",
						"type": "nvarchar"
					},
					{
						"name": "Discount",
						"type": "decimal",
						"precision": 9,
						"scale": 2
					},
					{
						"name": "NetPrice",
						"type": "decimal",
						"precision": 9,
						"scale": 2
					},
					{
						"name": "Rate",
						"type": "decimal",
						"precision": 9,
						"scale": 2
					},
					{
						"name": "LabourRate",
						"type": "nvarchar"
					},
					{
						"name": "BookingLineNo",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Updated",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "BI_Inspection_vISLabour"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/RTCDatabase')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/RTC_EXT_BI_Inspection_ISParts')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "RTCDatabase",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "GroupID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Id",
						"type": "int",
						"precision": 10
					},
					{
						"name": "ItemId",
						"type": "int",
						"precision": 10
					},
					{
						"name": "PartsId",
						"type": "int",
						"precision": 10
					},
					{
						"name": "PartNo",
						"type": "nvarchar"
					},
					{
						"name": "Details",
						"type": "nvarchar"
					},
					{
						"name": "Qty",
						"type": "decimal",
						"precision": 9,
						"scale": 2
					},
					{
						"name": "Price",
						"type": "decimal",
						"precision": 9,
						"scale": 2
					},
					{
						"name": "Discount",
						"type": "decimal",
						"precision": 9,
						"scale": 2
					},
					{
						"name": "NetPrice",
						"type": "decimal",
						"precision": 9,
						"scale": 2
					},
					{
						"name": "LabourId",
						"type": "int",
						"precision": 10
					},
					{
						"name": "BinLocn",
						"type": "nvarchar"
					},
					{
						"name": "InStock",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Reserved",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Excluded",
						"type": "bit"
					},
					{
						"name": "Cost",
						"type": "decimal",
						"precision": 9,
						"scale": 2
					},
					{
						"name": "LinkedPartsId",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Alternative",
						"type": "bit"
					},
					{
						"name": "Franchise",
						"type": "nvarchar"
					},
					{
						"name": "BookingLineNo",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Updated",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "BI_Inspection_vISParts"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/RTCDatabase')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/RTC_EXT_BI_Inspection_ISTyrePrices')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "RTCDatabase",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "GroupID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Id",
						"type": "int",
						"precision": 10
					},
					{
						"name": "ItemId",
						"type": "int",
						"precision": 10
					},
					{
						"name": "PricePointId",
						"type": "int",
						"precision": 10
					},
					{
						"name": "PartNo",
						"type": "varchar"
					},
					{
						"name": "Desc",
						"type": "varchar"
					},
					{
						"name": "Price",
						"type": "decimal",
						"precision": 5,
						"scale": 2
					},
					{
						"name": "FuelEffRating",
						"type": "char"
					},
					{
						"name": "WetGripRating",
						"type": "char"
					},
					{
						"name": "NoiseRating",
						"type": "int",
						"precision": 10
					},
					{
						"name": "NoiseClass",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Stock",
						"type": "int",
						"precision": 10
					},
					{
						"name": "ThirdParty",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Selected",
						"type": "bit"
					},
					{
						"name": "Unavail",
						"type": "bit"
					},
					{
						"name": "LoadIndex",
						"type": "int",
						"precision": 10
					},
					{
						"name": "SpeedRating",
						"type": "nvarchar"
					},
					{
						"name": "OrderID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "LineID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "SiteID",
						"type": "nvarchar"
					},
					{
						"name": "CostPrice",
						"type": "decimal",
						"precision": 5,
						"scale": 2
					},
					{
						"name": "Notes",
						"type": "ntext"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "BI_Inspection_vISTyrePrices"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/RTCDatabase')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/RTC_EXT_BI_Inspection_VHCOutcome')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "RTCDatabase",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "GroupID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "id",
						"type": "int",
						"precision": 10
					},
					{
						"name": "inuse",
						"type": "char"
					},
					{
						"name": "dealer",
						"type": "nvarchar"
					},
					{
						"name": "description",
						"type": "nvarchar"
					},
					{
						"name": "hctype",
						"type": "char"
					},
					{
						"name": "outcometype",
						"type": "char"
					},
					{
						"name": "contactcode",
						"type": "nvarchar"
					},
					{
						"name": "Updated",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "BI_Inspection_vhcOutcome"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/RTCDatabase')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/RTC_EXT_BI_Inspection_VHCType')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "RTCDatabase",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "GroupID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "id",
						"type": "int",
						"precision": 10
					},
					{
						"name": "inuse",
						"type": "char"
					},
					{
						"name": "dealer",
						"type": "nvarchar"
					},
					{
						"name": "description",
						"type": "nvarchar"
					},
					{
						"name": "Updated",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "BI_Inspection_vhcType"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/RTCDatabase')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/RTC_EXT_BI_Inspection_vISCheckTypes')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "RTCDatabase",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "GroupID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Dealer",
						"type": "nvarchar"
					},
					{
						"name": "TypeId",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Name",
						"type": "nvarchar"
					},
					{
						"name": "Type",
						"type": "char"
					},
					{
						"name": "InUse",
						"type": "bit"
					},
					{
						"name": "Marque",
						"type": "nvarchar"
					},
					{
						"name": "CheckSheetType",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Updated",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "BI_Inspection_vISCheckTypes"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/RTCDatabase')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/RTC_EXT_BI_vGroup')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "RTCDatabase",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "GroupID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "GroupName",
						"type": "nvarchar"
					},
					{
						"name": "Enabled",
						"type": "bit"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "BI_Group_vGroup"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/RTCDatabase')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/RTC_Ext_BI_BookingStatus')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "RTCDatabase",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "GroupID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Dealer",
						"type": "nvarchar"
					},
					{
						"name": "Code",
						"type": "nvarchar"
					},
					{
						"name": "Description",
						"type": "nvarchar"
					},
					{
						"name": "BaseCode",
						"type": "nvarchar"
					},
					{
						"name": "Updated",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "BI_Booking_vBookingStatus"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/RTCDatabase')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/RTC_Ext_BI_Booking_vUpsellDeclinedReasons')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "RTCDatabase",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "GroupID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "ReasonId",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Reason",
						"type": "nvarchar"
					},
					{
						"name": "Active",
						"type": "bit"
					},
					{
						"name": "EMail",
						"type": "bit"
					},
					{
						"name": "AddToBooking",
						"type": "bit"
					},
					{
						"name": "Updated",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "BI_Booking_vUpsellDeclinedReasons"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/RTCDatabase')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/RTC_Ext_BI_Booking_vUpsellLog')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "RTCDatabase",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "GroupID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Dealer",
						"type": "nvarchar"
					},
					{
						"name": "Recorded",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "UpsellId",
						"type": "int",
						"precision": 10
					},
					{
						"name": "DeclinedId",
						"type": "int",
						"precision": 10
					},
					{
						"name": "FreeTextDeclinedId",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Agent",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Price",
						"type": "decimal",
						"precision": 8,
						"scale": 2
					},
					{
						"name": "Declined",
						"type": "bit"
					},
					{
						"name": "LogSeqNo",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Campaign",
						"type": "bit"
					},
					{
						"name": "Updated",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "BI_Booking_vUpsellLog"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/RTCDatabase')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/RTC_Ext_BI_Booking_vUpsells')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "RTCDatabase",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "GroupID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Dealer",
						"type": "nvarchar"
					},
					{
						"name": "Recorded",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "UpsellId",
						"type": "int",
						"precision": 10
					},
					{
						"name": "DeclinedId",
						"type": "int",
						"precision": 10
					},
					{
						"name": "FreeTextDeclinedId",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Agent",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Price",
						"type": "decimal",
						"precision": 8,
						"scale": 2
					},
					{
						"name": "Declined",
						"type": "bit"
					},
					{
						"name": "LogSeqNo",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Campaign",
						"type": "bit"
					},
					{
						"name": "Updated",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "BI_Booking_vUpsells"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/RTCDatabase')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/RTC_Ext_BI_Contact_vContactTypes')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "RTCDatabase",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "GroupID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "ContCode",
						"type": "nvarchar"
					},
					{
						"name": "Description",
						"type": "nvarchar"
					},
					{
						"name": "Type",
						"type": "nvarchar"
					},
					{
						"name": "Analysis",
						"type": "nvarchar"
					},
					{
						"name": "AnalysisGroup",
						"type": "varchar"
					},
					{
						"name": "Updated",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "BI_Contact_vContactTypes"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/RTCDatabase')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/RTC_Ext_BI_Contact_vContacts')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "RTCDatabase",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "GroupID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "SeqNo",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Dealer",
						"type": "nvarchar"
					},
					{
						"name": "ContCode",
						"type": "nvarchar"
					},
					{
						"name": "Notes1",
						"type": "nvarchar"
					},
					{
						"name": "Notes2",
						"type": "nvarchar"
					},
					{
						"name": "Notes3",
						"type": "nvarchar"
					},
					{
						"name": "ContDate",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "FollDate",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "Complete",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "CompleteCode",
						"type": "nvarchar"
					},
					{
						"name": "FollCode",
						"type": "nvarchar"
					},
					{
						"name": "Booking",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Value",
						"type": "decimal",
						"precision": 6,
						"scale": 2
					},
					{
						"name": "OpNum",
						"type": "int",
						"precision": 10
					},
					{
						"name": "RegNo",
						"type": "nvarchar"
					},
					{
						"name": "Model",
						"type": "nvarchar"
					},
					{
						"name": "VehDesc",
						"type": "nvarchar"
					},
					{
						"name": "RegDate",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "Franchise",
						"type": "varchar"
					},
					{
						"name": "HeaderId",
						"type": "int",
						"precision": 10
					},
					{
						"name": "ItemId",
						"type": "int",
						"precision": 10
					},
					{
						"name": "GroupedRAG",
						"type": "int",
						"precision": 10
					},
					{
						"name": "OpNumCreated",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Updated",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "BI_Contact_vContacts"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/RTCDatabase')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/RTC_Ext_BI_Contact_vContactsParms')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "RTCDatabase",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "GroupID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Dealer",
						"type": "nvarchar"
					},
					{
						"name": "ContCode",
						"type": "nvarchar"
					},
					{
						"name": "Description",
						"type": "nvarchar"
					},
					{
						"name": "FollCode",
						"type": "nvarchar"
					},
					{
						"name": "FollDays",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Type",
						"type": "char"
					},
					{
						"name": "ReportType",
						"type": "char"
					},
					{
						"name": "Updated",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "BI_Contact_vContactParms"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/RTCDatabase')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/RTC_Ext_BI_Group_vAgents')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "RTCDatabase",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "GroupID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "OpNum",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Name",
						"type": "nvarchar"
					},
					{
						"name": "Grp",
						"type": "nvarchar"
					},
					{
						"name": "Updated",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "BI_Group_vAgents"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/RTCDatabase')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/RTC_Ext_BI_Group_vApplication')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "RTCDatabase",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "GroupID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "ApplicationId",
						"type": "int",
						"precision": 10
					},
					{
						"name": "ApplicationName",
						"type": "nvarchar"
					},
					{
						"name": "Updated",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "BI_Group_vApplication"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/RTCDatabase')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/RTC_Ext_BI_Group_vDealers')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "RTCDatabase",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "GroupID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Dealer",
						"type": "nvarchar"
					},
					{
						"name": "Name",
						"type": "nvarchar"
					},
					{
						"name": "Marque",
						"type": "nvarchar"
					},
					{
						"name": "DMS",
						"type": "nvarchar"
					},
					{
						"name": "Updated",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "BI_Group_vDealers"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/RTCDatabase')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/RTC_Ext_BI_Group_vDealersRegions')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "RTCDatabase",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "GroupID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Id",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Description",
						"type": "nvarchar"
					},
					{
						"name": "Updated",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "BI_Group_vDealersRegions"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/RTCDatabase')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/RTC_Ext_BI_Group_vEmailLog')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "RTCDatabase",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "GroupID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "EmailLogID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Dealer",
						"type": "nvarchar"
					},
					{
						"name": "AgentID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "RegNo",
						"type": "nvarchar"
					},
					{
						"name": "Created",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "ContSeqNo",
						"type": "int",
						"precision": 10
					},
					{
						"name": "ErrorLogID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Sent",
						"type": "bit"
					},
					{
						"name": "RemoteEmailID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "ServiceID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "EmailChangedID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Updated",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "BI_Group_vEmailLog"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/RTCDatabase')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/RTC_Ext_BI_Group_vEmailLogEventNotifications')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "RTCDatabase",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "GroupID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "ID",
						"type": "bigint",
						"precision": 19
					},
					{
						"name": "EmailID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "EventType",
						"type": "varchar"
					},
					{
						"name": "SmtpID",
						"type": "varchar"
					},
					{
						"name": "Response",
						"type": "varchar"
					},
					{
						"name": "DeliveryAttempt",
						"type": "smallint",
						"precision": 5
					},
					{
						"name": "BounceType",
						"type": "varchar"
					},
					{
						"name": "BounceStatus",
						"type": "varchar"
					},
					{
						"name": "IP",
						"type": "varchar"
					},
					{
						"name": "UserAgent",
						"type": "varchar"
					},
					{
						"name": "TimeStamp",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "Created",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "Dealer",
						"type": "nvarchar"
					},
					{
						"name": "EmailLogID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Updated",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "BI_Group_vEmailLogEventNotifications"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/RTCDatabase')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/RTC_Ext_BI_Group_vEmployee')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "RTCDatabase",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "GroupID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Dealer",
						"type": "nvarchar"
					},
					{
						"name": "EmpNo",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Name",
						"type": "nvarchar"
					},
					{
						"name": "EmpType",
						"type": "char"
					},
					{
						"name": "OpNum",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Updated",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "BI_Group_vEmployee"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/RTCDatabase')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/RTC_Ext_BI_Group_vExtStatus')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "RTCDatabase",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "GroupID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "ExtStatusID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Description",
						"type": "varchar"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "BI_Group_vExtStatus"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/RTCDatabase')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/RTC_Ext_BI_Group_vISSections')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "RTCDatabase",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "GroupID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Dealer",
						"type": "nvarchar"
					},
					{
						"name": "TypeId",
						"type": "int",
						"precision": 10
					},
					{
						"name": "SectionId",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Name",
						"type": "nvarchar"
					},
					{
						"name": "LongName",
						"type": "nvarchar"
					},
					{
						"name": "InUse",
						"type": "bit"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "BI_Group_vISSections"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/RTCDatabase')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/RTC_Ext_BI_Group_vISSubSections')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "RTCDatabase",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "GroupID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Dealer",
						"type": "nvarchar"
					},
					{
						"name": "TypeId",
						"type": "int",
						"precision": 10
					},
					{
						"name": "SectionId",
						"type": "int",
						"precision": 10
					},
					{
						"name": "SubSectionId",
						"type": "int",
						"precision": 10
					},
					{
						"name": "DisplaySeq",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Name",
						"type": "nvarchar"
					},
					{
						"name": "LongName",
						"type": "nvarchar"
					},
					{
						"name": "CategoryId",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Special",
						"type": "nvarchar"
					},
					{
						"name": "InUse",
						"type": "bit"
					},
					{
						"name": "Mandatory",
						"type": "bit"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "BI_Group_vISSubSections"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/RTCDatabase')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/RTC_Ext_BI_Group_vLogFile')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "RTCDatabase",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "GroupID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Seq",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Dealer",
						"type": "nvarchar"
					},
					{
						"name": "Booking",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Created",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "DateIn",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "ServCode",
						"type": "nvarchar"
					},
					{
						"name": "Model",
						"type": "varchar"
					},
					{
						"name": "Tran1",
						"type": "varchar"
					},
					{
						"name": "Tran2",
						"type": "varchar"
					},
					{
						"name": "Tran3",
						"type": "varchar"
					},
					{
						"name": "TranComm",
						"type": "varchar"
					},
					{
						"name": "OpNum",
						"type": "int",
						"precision": 10
					},
					{
						"name": "RegNo",
						"type": "nvarchar"
					},
					{
						"name": "RegDate",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "Account",
						"type": "varchar"
					},
					{
						"name": "ContCode",
						"type": "nvarchar"
					},
					{
						"name": "PayType",
						"type": "varchar"
					},
					{
						"name": "OverRide",
						"type": "varchar"
					},
					{
						"name": "SACA",
						"type": "varchar"
					},
					{
						"name": "SACU",
						"type": "varchar"
					},
					{
						"name": "SourceOfBusiness",
						"type": "nvarchar"
					},
					{
						"name": "LastServ",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "NextServ",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "MotDate",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "Campaign",
						"type": "nvarchar"
					},
					{
						"name": "CampaignPrice",
						"type": "decimal",
						"precision": 8,
						"scale": 2
					},
					{
						"name": "TotalValue",
						"type": "decimal",
						"precision": 8,
						"scale": 2
					},
					{
						"name": "ContSeqNo",
						"type": "int",
						"precision": 10
					},
					{
						"name": "ApplicationId",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Updated",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "BI_Group_vLogFile"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/RTCDatabase')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/RTC_Ext_BI_Group_vSMSLog')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "RTCDatabase",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "GroupID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "SMSLogID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "LinkSMSID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "DealerID",
						"type": "nvarchar"
					},
					{
						"name": "AgentID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "BookingID",
						"type": "varchar"
					},
					{
						"name": "SMSID",
						"type": "varchar"
					},
					{
						"name": "SendDate",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "Created",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "ContSeqNo",
						"type": "int",
						"precision": 10
					},
					{
						"name": "ErrorLogID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "TypeID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Updated",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "BI_Group_vSMSLog"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/RTCDatabase')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/RTC_Ext_BI_Inspection_vISHeaders')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "RTCDatabase",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "GroupID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Id",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Dealer",
						"type": "nvarchar"
					},
					{
						"name": "TypeId",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Booking",
						"type": "int",
						"precision": 10
					},
					{
						"name": "RegNo",
						"type": "nvarchar"
					},
					{
						"name": "VehDesc",
						"type": "nvarchar"
					},
					{
						"name": "Mileage",
						"type": "int",
						"precision": 10
					},
					{
						"name": "NextServ",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "NextMot",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "Created",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "Tech",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Advisor",
						"type": "int",
						"precision": 10
					},
					{
						"name": "hcType",
						"type": "int",
						"precision": 10
					},
					{
						"name": "InputStarted",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "InputCompleted",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "PartsIdentified",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "LabourIdentified",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "FollowUpCompleted",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "InspectionClosed",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "InspectionPrinted",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "PartsAssistance",
						"type": "bit"
					},
					{
						"name": "InvoiceValue",
						"type": "decimal",
						"precision": 7,
						"scale": 2
					},
					{
						"name": "InUse",
						"type": "int",
						"precision": 10
					},
					{
						"name": "PartsRequired",
						"type": "bit"
					},
					{
						"name": "Model",
						"type": "nvarchar"
					},
					{
						"name": "RegDate",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "JobNo",
						"type": "int",
						"precision": 10
					},
					{
						"name": "NotInspectedReason",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Franchise",
						"type": "nvarchar"
					},
					{
						"name": "DMSRef",
						"type": "int",
						"precision": 10
					},
					{
						"name": "VehNo",
						"type": "int",
						"precision": 10
					},
					{
						"name": "QualityControllerId",
						"type": "int",
						"precision": 10
					},
					{
						"name": "NewTyre",
						"type": "bit"
					},
					{
						"name": "TyresIdentified",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "ExtStatus",
						"type": "int",
						"precision": 10
					},
					{
						"name": "ExtAccessed",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "ExtResponded",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "EventId",
						"type": "nvarchar"
					},
					{
						"name": "UniqueBookingID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "OriginalClosedDate",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "PreAgreedWorkValue",
						"type": "decimal",
						"precision": 7,
						"scale": 2
					},
					{
						"name": "Updated",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "BI_Inspection_vISHeaders"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/RTCDatabase')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/RTC_Ext_BI_Inspection_vISItems')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "RTCDatabase",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "GroupID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Id",
						"type": "int",
						"precision": 10
					},
					{
						"name": "ItemId",
						"type": "int",
						"precision": 10
					},
					{
						"name": "SectionId",
						"type": "int",
						"precision": 10
					},
					{
						"name": "SubSectionId",
						"type": "int",
						"precision": 10
					},
					{
						"name": "OutcomeId",
						"type": "int",
						"precision": 10
					},
					{
						"name": "FollNum",
						"type": "int",
						"precision": 10
					},
					{
						"name": "FollDate",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "FollType",
						"type": "int",
						"precision": 10
					},
					{
						"name": "RAG",
						"type": "int",
						"precision": 10
					},
					{
						"name": "InnerId",
						"type": "int",
						"precision": 10
					},
					{
						"name": "MiddleId",
						"type": "int",
						"precision": 10
					},
					{
						"name": "OuterId",
						"type": "int",
						"precision": 10
					},
					{
						"name": "hcType",
						"type": "int",
						"precision": 10
					},
					{
						"name": "hcOutcome",
						"type": "int",
						"precision": 10
					},
					{
						"name": "NSInnerId",
						"type": "int",
						"precision": 10
					},
					{
						"name": "NSOuterId",
						"type": "int",
						"precision": 10
					},
					{
						"name": "OSInnerId",
						"type": "int",
						"precision": 10
					},
					{
						"name": "OSOuterId",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Details",
						"type": "varchar"
					},
					{
						"name": "Price",
						"type": "decimal",
						"precision": 7,
						"scale": 2
					},
					{
						"name": "PartsAssistance",
						"type": "bit"
					},
					{
						"name": "NoLabour",
						"type": "bit"
					},
					{
						"name": "NoParts",
						"type": "bit"
					},
					{
						"name": "NoPrice",
						"type": "bit"
					},
					{
						"name": "FixedPrice",
						"type": "bit"
					},
					{
						"name": "PartsPicked",
						"type": "bit"
					},
					{
						"name": "Completed",
						"type": "int",
						"precision": 10
					},
					{
						"name": "AuthorisedBy",
						"type": "varchar"
					},
					{
						"name": "AuthAdvisor",
						"type": "int",
						"precision": 10
					},
					{
						"name": "AuthDate",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "VideoStatus",
						"type": "int",
						"precision": 10
					},
					{
						"name": "SendVideo",
						"type": "bit"
					},
					{
						"name": "ExtOutcome",
						"type": "int",
						"precision": 10
					},
					{
						"name": "TechRAG",
						"type": "int",
						"precision": 10
					},
					{
						"name": "BookedContSeqNo",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Updated",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "BI_Inspection_vISItems"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/RTCDatabase')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/RTC_Ext_BI_Inspection_vMediafile')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "RTCDatabase",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "GroupID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Dealer",
						"type": "nvarchar"
					},
					{
						"name": "InspectionID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "InspectionItemID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "FileType",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Complete",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Status",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Updated",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "BI_Inspection_vMediafile"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/RTCDatabase')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/RTC_Ext_BI_vRepairCodes')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "RTCDatabase",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "GroupID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Dealer",
						"type": "nvarchar"
					},
					{
						"name": "RepairCode",
						"type": "nvarchar"
					},
					{
						"name": "Text1",
						"type": "nvarchar"
					},
					{
						"name": "Text2",
						"type": "nvarchar"
					},
					{
						"name": "Text3",
						"type": "nvarchar"
					},
					{
						"name": "Text4",
						"type": "nvarchar"
					},
					{
						"name": "Text5",
						"type": "nvarchar"
					},
					{
						"name": "Text6",
						"type": "nvarchar"
					},
					{
						"name": "Allowed",
						"type": "decimal",
						"precision": 7,
						"scale": 2
					},
					{
						"name": "LabType",
						"type": "char"
					},
					{
						"name": "Price",
						"type": "decimal",
						"precision": 7,
						"scale": 2
					},
					{
						"name": "Service",
						"type": "char"
					},
					{
						"name": "isUpsell",
						"type": "bit"
					},
					{
						"name": "OnlineGroup",
						"type": "nvarchar"
					},
					{
						"name": "OnlineDescription",
						"type": "nvarchar"
					},
					{
						"name": "LinkedUpsellCode",
						"type": "varchar"
					},
					{
						"name": "AWS",
						"type": "bit"
					},
					{
						"name": "CSIContCode",
						"type": "varchar"
					},
					{
						"name": "VehicleVisualsPartId",
						"type": "nvarchar"
					},
					{
						"name": "Updated",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "BI_Booking_vRepairCodes"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/RTCDatabase')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/RTC_Import_Check')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "autolytica",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "GroupID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "DealershipID",
						"type": "varchar"
					},
					{
						"name": "ID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "ItemID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "PartsOrLabourID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "KeyDate",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "UpdatedDate",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "Type",
						"type": "int",
						"precision": 10
					},
					{
						"name": "ValueToCheck",
						"type": "decimal",
						"precision": 18,
						"scale": 2
					},
					{
						"name": "hcOutcomeDescription",
						"type": "varchar"
					},
					{
						"name": "hcTypeDescription",
						"type": "varchar"
					},
					{
						"name": "CheckTypeDescription",
						"type": "varchar"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "RTC_Import_Check"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/autolytica')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SQLAutotraderAdvert')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "autolytica",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "PerformanceScore",
						"type": "int",
						"precision": 10
					},
					{
						"name": "PerformanceRating",
						"type": "varchar"
					},
					{
						"name": "YesterdayAdvertViews",
						"type": "int",
						"precision": 10
					},
					{
						"name": "YesterdaySearchViews",
						"type": "int",
						"precision": 10
					},
					{
						"name": "LastWeekAdvertViews",
						"type": "int",
						"precision": 10
					},
					{
						"name": "LastWeekSearchViews",
						"type": "int",
						"precision": 10
					},
					{
						"name": "AdvertURL",
						"type": "varchar"
					},
					{
						"name": "Source",
						"type": "varchar"
					},
					{
						"name": "Date",
						"type": "datetime2",
						"scale": 7
					},
					{
						"name": "RegNo",
						"type": "varchar"
					},
					{
						"name": "StockNo",
						"type": "int",
						"precision": 10
					},
					{
						"name": "UniqueID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "CurrentRecord",
						"type": "int",
						"precision": 10
					},
					{
						"name": "RecordID",
						"type": "varchar"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "Autotrader Advert"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/autolytica')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SQLAutotraderAdvertExtended')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "autolytica",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "PerformanceScore",
						"type": "int",
						"precision": 10
					},
					{
						"name": "PerformanceRating",
						"type": "varchar"
					},
					{
						"name": "YesterdayAdvertViews",
						"type": "int",
						"precision": 10
					},
					{
						"name": "YesterdaySearchViews",
						"type": "int",
						"precision": 10
					},
					{
						"name": "LastWeekAdvertViews",
						"type": "int",
						"precision": 10
					},
					{
						"name": "LastWeekSearchViews",
						"type": "int",
						"precision": 10
					},
					{
						"name": "AdvertURL",
						"type": "varchar"
					},
					{
						"name": "Source",
						"type": "varchar"
					},
					{
						"name": "Date",
						"type": "datetime2",
						"scale": 7
					},
					{
						"name": "RegNo",
						"type": "varchar"
					},
					{
						"name": "StockNo",
						"type": "int",
						"precision": 10
					},
					{
						"name": "UniqueID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "CurrentRecord",
						"type": "int",
						"precision": 10
					},
					{
						"name": "RecordID",
						"type": "varchar"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "Autotrader Advert Extended"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/autolytica')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SQLAutotraderAdvertTest')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "autolytica",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "PerformanceScore",
						"type": "int",
						"precision": 10
					},
					{
						"name": "PerformanceRating",
						"type": "varchar"
					},
					{
						"name": "YesterdayAdvertViews",
						"type": "int",
						"precision": 10
					},
					{
						"name": "YesterdaySearchViews",
						"type": "int",
						"precision": 10
					},
					{
						"name": "LastWeekAdvertViews",
						"type": "int",
						"precision": 10
					},
					{
						"name": "LastWeekSearchViews",
						"type": "int",
						"precision": 10
					},
					{
						"name": "AdvertURL",
						"type": "varchar"
					},
					{
						"name": "Source",
						"type": "varchar"
					},
					{
						"name": "Date",
						"type": "datetime2",
						"scale": 7
					},
					{
						"name": "RegNo",
						"type": "varchar"
					},
					{
						"name": "StockNo",
						"type": "varchar"
					},
					{
						"name": "UniqueID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "CurrentRecord",
						"type": "int",
						"precision": 10
					},
					{
						"name": "RecordID",
						"type": "varchar"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "Autotrader Advert Test"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/autolytica')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SQLAutotraderCompetitors')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "autolytica",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "AdvertText",
						"type": "varchar"
					},
					{
						"name": "AdvertURL",
						"type": "varchar"
					},
					{
						"name": "AttentionGrabber",
						"type": "varchar"
					},
					{
						"name": "Bodystyle",
						"type": "varchar"
					},
					{
						"name": "Colour",
						"type": "varchar"
					},
					{
						"name": "CompetitorReg",
						"type": "varchar"
					},
					{
						"name": "Date",
						"type": "datetime2",
						"scale": 7
					},
					{
						"name": "DaysinStock",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Derivative",
						"type": "varchar"
					},
					{
						"name": "Fuel",
						"type": "varchar"
					},
					{
						"name": "Id",
						"type": "bigint",
						"precision": 19
					},
					{
						"name": "MainImage",
						"type": "varchar"
					},
					{
						"name": "Make",
						"type": "varchar"
					},
					{
						"name": "Mileage",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Model",
						"type": "varchar"
					},
					{
						"name": "Owners",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Plate",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Price",
						"type": "decimal",
						"precision": 18,
						"scale": 2
					},
					{
						"name": "PriceIndicator",
						"type": "varchar"
					},
					{
						"name": "PricePosition",
						"type": "decimal",
						"precision": 18,
						"scale": 2
					},
					{
						"name": "Reg_No",
						"type": "varchar"
					},
					{
						"name": "SellerName",
						"type": "varchar"
					},
					{
						"name": "SellerSegment",
						"type": "varchar"
					},
					{
						"name": "SellerTown",
						"type": "varchar"
					},
					{
						"name": "StockNumber",
						"type": "int",
						"precision": 10
					},
					{
						"name": "TaxRate",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Transmission",
						"type": "varchar"
					},
					{
						"name": "Year",
						"type": "int",
						"precision": 10
					},
					{
						"name": "UniqueID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "CurrentRecord",
						"type": "int",
						"precision": 10
					},
					{
						"name": "RecordID",
						"type": "varchar"
					},
					{
						"name": "PriceIndicatorV2",
						"type": "varchar"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "Autotrader Competitors"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/autolytica')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SQLAutotraderCompetitorsExtended')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "autolytica",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "AdvertText",
						"type": "varchar"
					},
					{
						"name": "AdvertURL",
						"type": "varchar"
					},
					{
						"name": "AttentionGrabber",
						"type": "varchar"
					},
					{
						"name": "Bodystyle",
						"type": "varchar"
					},
					{
						"name": "Colour",
						"type": "varchar"
					},
					{
						"name": "CompetitorReg",
						"type": "varchar"
					},
					{
						"name": "Date",
						"type": "datetime2",
						"scale": 7
					},
					{
						"name": "DaysinStock",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Derivative",
						"type": "varchar"
					},
					{
						"name": "Fuel",
						"type": "varchar"
					},
					{
						"name": "Id",
						"type": "bigint",
						"precision": 19
					},
					{
						"name": "MainImage",
						"type": "varchar"
					},
					{
						"name": "Make",
						"type": "varchar"
					},
					{
						"name": "Mileage",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Model",
						"type": "varchar"
					},
					{
						"name": "Owners",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Plate",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Price",
						"type": "decimal",
						"precision": 18,
						"scale": 2
					},
					{
						"name": "PriceIndicator",
						"type": "varchar"
					},
					{
						"name": "PricePosition",
						"type": "decimal",
						"precision": 18,
						"scale": 2
					},
					{
						"name": "Reg_No",
						"type": "varchar"
					},
					{
						"name": "SellerName",
						"type": "varchar"
					},
					{
						"name": "SellerSegment",
						"type": "varchar"
					},
					{
						"name": "SellerTown",
						"type": "varchar"
					},
					{
						"name": "StockNumber",
						"type": "int",
						"precision": 10
					},
					{
						"name": "TaxRate",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Transmission",
						"type": "varchar"
					},
					{
						"name": "Year",
						"type": "int",
						"precision": 10
					},
					{
						"name": "UniqueID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "CurrentRecord",
						"type": "int",
						"precision": 10
					},
					{
						"name": "RecordID",
						"type": "varchar"
					},
					{
						"name": "PriceIndicatorV2",
						"type": "varchar"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "Autotrader Competitors Extended"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/autolytica')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SQLAutotraderCompetitorsTest')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "autolytica",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "AdvertText",
						"type": "varchar"
					},
					{
						"name": "AdvertURL",
						"type": "varchar"
					},
					{
						"name": "AttentionGrabber",
						"type": "varchar"
					},
					{
						"name": "Bodystyle",
						"type": "varchar"
					},
					{
						"name": "Colour",
						"type": "varchar"
					},
					{
						"name": "CompetitorReg",
						"type": "varchar"
					},
					{
						"name": "Date",
						"type": "datetime2",
						"scale": 7
					},
					{
						"name": "DaysinStock",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Derivative",
						"type": "varchar"
					},
					{
						"name": "Fuel",
						"type": "varchar"
					},
					{
						"name": "Id",
						"type": "bigint",
						"precision": 19
					},
					{
						"name": "MainImage",
						"type": "varchar"
					},
					{
						"name": "Make",
						"type": "varchar"
					},
					{
						"name": "Mileage",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Model",
						"type": "varchar"
					},
					{
						"name": "Owners",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Plate",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Price",
						"type": "decimal",
						"precision": 18,
						"scale": 2
					},
					{
						"name": "PriceIndicator",
						"type": "varchar"
					},
					{
						"name": "PricePosition",
						"type": "decimal",
						"precision": 18,
						"scale": 2
					},
					{
						"name": "Reg_No",
						"type": "varchar"
					},
					{
						"name": "SellerName",
						"type": "varchar"
					},
					{
						"name": "SellerSegment",
						"type": "varchar"
					},
					{
						"name": "SellerTown",
						"type": "varchar"
					},
					{
						"name": "StockNumber",
						"type": "int",
						"precision": 10
					},
					{
						"name": "TaxRate",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Transmission",
						"type": "varchar"
					},
					{
						"name": "Year",
						"type": "int",
						"precision": 10
					},
					{
						"name": "UniqueID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "CurrentRecord",
						"type": "int",
						"precision": 10
					},
					{
						"name": "RecordID",
						"type": "varchar"
					},
					{
						"name": "PriceIndicatorV2",
						"type": "varchar"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "Autotrader Competitors Test"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/autolytica')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SQLAutotraderLocalRetailerRatings')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "autolytica",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "Date",
						"type": "datetime2",
						"scale": 7
					},
					{
						"name": "DealerID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "DealerName",
						"type": "varchar"
					},
					{
						"name": "ID",
						"type": "bigint",
						"precision": 19
					},
					{
						"name": "LocalRating",
						"type": "int",
						"precision": 10
					},
					{
						"name": "LocalDaysToSell",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Reg_No",
						"type": "varchar"
					},
					{
						"name": "StockNumber",
						"type": "int",
						"precision": 10
					},
					{
						"name": "UniqueID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "CurrentRecord",
						"type": "int",
						"precision": 10
					},
					{
						"name": "RecordID",
						"type": "varchar"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "Autotrader Local Retailer Ratings"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/autolytica')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SQLAutotraderLocalRetailerRatingsExtended')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "autolytica",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "Date",
						"type": "datetime2",
						"scale": 7
					},
					{
						"name": "DealerID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "DealerName",
						"type": "varchar"
					},
					{
						"name": "ID",
						"type": "bigint",
						"precision": 19
					},
					{
						"name": "LocalRating",
						"type": "int",
						"precision": 10
					},
					{
						"name": "LocalDaysToSell",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Reg_No",
						"type": "varchar"
					},
					{
						"name": "StockNumber",
						"type": "int",
						"precision": 10
					},
					{
						"name": "UniqueID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "CurrentRecord",
						"type": "int",
						"precision": 10
					},
					{
						"name": "RecordID",
						"type": "varchar"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "Autotrader Local Retailer Ratings Extended"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/autolytica')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SQLAutotraderLocalRetailerRatingsTest')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "autolytica",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "Date",
						"type": "datetime2",
						"scale": 7
					},
					{
						"name": "DealerID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "DealerName",
						"type": "varchar"
					},
					{
						"name": "ID",
						"type": "bigint",
						"precision": 19
					},
					{
						"name": "LocalRating",
						"type": "int",
						"precision": 10
					},
					{
						"name": "LocalDaysToSell",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Reg_No",
						"type": "varchar"
					},
					{
						"name": "StockNumber",
						"type": "varchar"
					},
					{
						"name": "UniqueID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "CurrentRecord",
						"type": "int",
						"precision": 10
					},
					{
						"name": "RecordID",
						"type": "varchar"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "Autotrader Local Retailer Ratings Test"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/autolytica')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SQLAutotraderMarketSupply')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "autolytica",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "BuyerDemand",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Date",
						"type": "datetime2",
						"scale": 7
					},
					{
						"name": "ID",
						"type": "bigint",
						"precision": 19
					},
					{
						"name": "LiveMarketCondition",
						"type": "int",
						"precision": 10
					},
					{
						"name": "MarketSupply",
						"type": "int",
						"precision": 10
					},
					{
						"name": "RegNo",
						"type": "varchar"
					},
					{
						"name": "UniqueID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "CurrentRecord",
						"type": "int",
						"precision": 10
					},
					{
						"name": "RecordID",
						"type": "varchar"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "Autotrader Market Supply"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/autolytica')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SQLAutotraderMarketSupplyExtended')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "autolytica",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "BuyerDemand",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Date",
						"type": "datetime2",
						"scale": 7
					},
					{
						"name": "ID",
						"type": "bigint",
						"precision": 19
					},
					{
						"name": "LiveMarketCondition",
						"type": "int",
						"precision": 10
					},
					{
						"name": "MarketSupply",
						"type": "int",
						"precision": 10
					},
					{
						"name": "RegNo",
						"type": "varchar"
					},
					{
						"name": "UniqueID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "CurrentRecord",
						"type": "int",
						"precision": 10
					},
					{
						"name": "RecordID",
						"type": "varchar"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "Autotrader Market Supply Extended"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/autolytica')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SQLAutotraderMarketSupplyTest')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "autolytica",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "BuyerDemand",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Date",
						"type": "datetime2",
						"scale": 7
					},
					{
						"name": "ID",
						"type": "bigint",
						"precision": 19
					},
					{
						"name": "LiveMarketCondition",
						"type": "int",
						"precision": 10
					},
					{
						"name": "MarketSupply",
						"type": "int",
						"precision": 10
					},
					{
						"name": "RegNo",
						"type": "varchar"
					},
					{
						"name": "UniqueID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "CurrentRecord",
						"type": "int",
						"precision": 10
					},
					{
						"name": "RecordID",
						"type": "varchar"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "Autotrader Market Supply Test"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/autolytica')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SQLAutotraderValuations')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "autolytica",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "AdjustedPartExchange",
						"type": "decimal",
						"precision": 18,
						"scale": 2
					},
					{
						"name": "AdjustedRetail",
						"type": "decimal",
						"precision": 18,
						"scale": 2
					},
					{
						"name": "AdjustedTrade",
						"type": "decimal",
						"precision": 18,
						"scale": 2
					},
					{
						"name": "Date",
						"type": "datetime2",
						"scale": 7
					},
					{
						"name": "ID",
						"type": "bigint",
						"precision": 19
					},
					{
						"name": "Part_Exchange",
						"type": "decimal",
						"precision": 18,
						"scale": 2
					},
					{
						"name": "Price_Indicator",
						"type": "varchar"
					},
					{
						"name": "RegNo",
						"type": "varchar"
					},
					{
						"name": "Retail",
						"type": "decimal",
						"precision": 18,
						"scale": 2
					},
					{
						"name": "StockNumber",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Trade",
						"type": "decimal",
						"precision": 18,
						"scale": 2
					},
					{
						"name": "Valuation_Type",
						"type": "varchar"
					},
					{
						"name": "UniqueID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "CurrentRecord",
						"type": "int",
						"precision": 10
					},
					{
						"name": "RecordID",
						"type": "varchar"
					},
					{
						"name": "PriceIndicatorV2",
						"type": "varchar"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "Autotrader Valuations"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/autolytica')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SQLAutotraderValuationsExtended')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "autolytica",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "AdjustedPartExchange",
						"type": "decimal",
						"precision": 18,
						"scale": 2
					},
					{
						"name": "AdjustedRetail",
						"type": "decimal",
						"precision": 18,
						"scale": 2
					},
					{
						"name": "AdjustedTrade",
						"type": "decimal",
						"precision": 18,
						"scale": 2
					},
					{
						"name": "Date",
						"type": "datetime2",
						"scale": 7
					},
					{
						"name": "ID",
						"type": "bigint",
						"precision": 19
					},
					{
						"name": "Part_Exchange",
						"type": "decimal",
						"precision": 18,
						"scale": 2
					},
					{
						"name": "Price_Indicator",
						"type": "varchar"
					},
					{
						"name": "RegNo",
						"type": "varchar"
					},
					{
						"name": "Retail",
						"type": "decimal",
						"precision": 18,
						"scale": 2
					},
					{
						"name": "StockNumber",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Trade",
						"type": "decimal",
						"precision": 18,
						"scale": 2
					},
					{
						"name": "Valuation_Type",
						"type": "varchar"
					},
					{
						"name": "UniqueID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "CurrentRecord",
						"type": "int",
						"precision": 10
					},
					{
						"name": "RecordID",
						"type": "varchar"
					},
					{
						"name": "PriceIndicatorV2",
						"type": "varchar"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "Autotrader Valuations Extended"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/autolytica')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SQLAutotraderValuationsTest')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "autolytica",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "AdjustedPartExchange",
						"type": "decimal",
						"precision": 18,
						"scale": 2
					},
					{
						"name": "AdjustedRetail",
						"type": "decimal",
						"precision": 18,
						"scale": 2
					},
					{
						"name": "AdjustedTrade",
						"type": "decimal",
						"precision": 18,
						"scale": 2
					},
					{
						"name": "Date",
						"type": "datetime2",
						"scale": 7
					},
					{
						"name": "ID",
						"type": "bigint",
						"precision": 19
					},
					{
						"name": "Part_Exchange",
						"type": "decimal",
						"precision": 18,
						"scale": 2
					},
					{
						"name": "Price_Indicator",
						"type": "varchar"
					},
					{
						"name": "RegNo",
						"type": "varchar"
					},
					{
						"name": "Retail",
						"type": "decimal",
						"precision": 18,
						"scale": 2
					},
					{
						"name": "StockNumber",
						"type": "varchar"
					},
					{
						"name": "Trade",
						"type": "decimal",
						"precision": 18,
						"scale": 2
					},
					{
						"name": "Valuation_Type",
						"type": "varchar"
					},
					{
						"name": "UniqueID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "CurrentRecord",
						"type": "int",
						"precision": 10
					},
					{
						"name": "RecordID",
						"type": "varchar"
					},
					{
						"name": "PriceIndicatorV2",
						"type": "varchar"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "Autotrader Valuations Test"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/autolytica')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SQLClocking')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "autolytica",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "ClientID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "ClockingSeqNo",
						"type": "int",
						"precision": 10
					},
					{
						"name": "DealerName",
						"type": "nvarchar"
					},
					{
						"name": "EmployeeName",
						"type": "nvarchar"
					},
					{
						"name": "EmployeeType",
						"type": "nvarchar"
					},
					{
						"name": "BookingNumber",
						"type": "int",
						"precision": 10
					},
					{
						"name": "RegistrationNumber",
						"type": "nvarchar"
					},
					{
						"name": "Action",
						"type": "nvarchar"
					},
					{
						"name": "DateTimeOn",
						"type": "datetime2",
						"scale": 7
					},
					{
						"name": "DateTimeOff",
						"type": "datetime2",
						"scale": 7
					},
					{
						"name": "AdjElapsed",
						"type": "nvarchar"
					},
					{
						"name": "Allowed",
						"type": "nvarchar"
					},
					{
						"name": "WorkType",
						"type": "nvarchar"
					},
					{
						"name": "SaleType",
						"type": "nvarchar"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "Clocking"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/autolytica')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SQLCloseITRaw_SalesLeads')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "autolytica",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "Dealer_ID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Deal_ID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "DealerName",
						"type": "varchar"
					},
					{
						"name": "GroupName",
						"type": "varchar"
					},
					{
						"name": "Customer_SalesPerson",
						"type": "varchar"
					},
					{
						"name": "Customer_ID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Customer_ProspectURN",
						"type": "varchar"
					},
					{
						"name": "Customer_Type",
						"type": "varchar"
					},
					{
						"name": "Customer_PostCode",
						"type": "varchar"
					},
					{
						"name": "Customer_LeadProviderName",
						"type": "varchar"
					},
					{
						"name": "Customer_DateCreated",
						"type": "datetime2",
						"scale": 7
					},
					{
						"name": "Customer_ChangeDate",
						"type": "datetime2",
						"scale": 7
					},
					{
						"name": "Customer_Status",
						"type": "varchar"
					},
					{
						"name": "Customer_DateStatusChanged",
						"type": "datetime2",
						"scale": 7
					},
					{
						"name": "Customer_QuickLostReason",
						"type": "varchar"
					},
					{
						"name": "Customer_FirstContact",
						"type": "varchar"
					},
					{
						"name": "Customer_DateSold",
						"type": "nvarchar"
					},
					{
						"name": "Customer_DateLost",
						"type": "nvarchar"
					},
					{
						"name": "Deal_Type",
						"type": "nvarchar"
					},
					{
						"name": "Deal_Gap",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Deal_Paint",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Deal_Warranty",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Deal_ClosedDate",
						"type": "datetime2",
						"scale": 7
					},
					{
						"name": "Deal_BasicPrice",
						"type": "decimal",
						"precision": 18,
						"scale": 2
					},
					{
						"name": "Deal_DeliveryCharge",
						"type": "decimal",
						"precision": 18,
						"scale": 2
					},
					{
						"name": "Deal_FirstRegFee",
						"type": "decimal",
						"precision": 18,
						"scale": 2
					},
					{
						"name": "Deal_RoadTax",
						"type": "decimal",
						"precision": 18,
						"scale": 2
					},
					{
						"name": "Desired_Make",
						"type": "varchar"
					},
					{
						"name": "Desired_Model",
						"type": "varchar"
					},
					{
						"name": "Deal_Make",
						"type": "varchar"
					},
					{
						"name": "Deal_Model",
						"type": "varchar"
					},
					{
						"name": "Deal_ModelVariant",
						"type": "varchar"
					},
					{
						"name": "Deal_FuelType",
						"type": "varchar"
					},
					{
						"name": "Deal_GearType",
						"type": "varchar"
					},
					{
						"name": "Deal_OrderMethod",
						"type": "varchar"
					},
					{
						"name": "Deal_Colour",
						"type": "varchar"
					},
					{
						"name": "Deal_Interior",
						"type": "varchar"
					},
					{
						"name": "Deal_Mileage",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Deal_DateConfirmed",
						"type": "datetime2",
						"scale": 7
					},
					{
						"name": "Deal_ModelYear",
						"type": "varchar"
					},
					{
						"name": "Deal_Registration",
						"type": "varchar"
					},
					{
						"name": "Deal_DateOfRegistration",
						"type": "datetime2",
						"scale": 7
					},
					{
						"name": "Deal_DemoDriven",
						"type": "varchar"
					},
					{
						"name": "Deal_ServicePayment",
						"type": "varchar"
					},
					{
						"name": "Deal_ExpectedDeliveryMonth",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Deal_ExpectedDeliveryYear",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Deal_ExpectedDeliveryTimeOfMonth",
						"type": "varchar"
					},
					{
						"name": "Deal_DepositPaymentMethod",
						"type": "varchar"
					},
					{
						"name": "Deal_FinanceMethod",
						"type": "varchar"
					},
					{
						"name": "Deal_MonthlyBudget",
						"type": "decimal",
						"precision": 18,
						"scale": 2
					},
					{
						"name": "Deal_Deposit",
						"type": "decimal",
						"precision": 18,
						"scale": 2
					},
					{
						"name": "Deal_NewFinancedBy",
						"type": "varchar"
					},
					{
						"name": "PartEx_ID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "PartEx_Registration",
						"type": "varchar"
					},
					{
						"name": "PartEx_Make",
						"type": "varchar"
					},
					{
						"name": "PartEx_Model",
						"type": "varchar"
					},
					{
						"name": "PartEx_Variant",
						"type": "varchar"
					},
					{
						"name": "PartEx_Colour",
						"type": "varchar"
					},
					{
						"name": "PartEx_DateOfRegistration",
						"type": "datetime2",
						"scale": 7
					},
					{
						"name": "PartEx_Mileage",
						"type": "int",
						"precision": 10
					},
					{
						"name": "PartEx_VatQualifying",
						"type": "int",
						"precision": 10
					},
					{
						"name": "PartEx_NumberOfOwners",
						"type": "int",
						"precision": 10
					},
					{
						"name": "PartEx_ServiceHistory",
						"type": "int",
						"precision": 10
					},
					{
						"name": "PartEx_SIVAmount",
						"type": "decimal",
						"precision": 18,
						"scale": 2
					},
					{
						"name": "InitialContact_Created",
						"type": "nvarchar"
					},
					{
						"name": "InitialContact_Type",
						"type": "varchar"
					},
					{
						"name": "Deal_CancelledDate",
						"type": "datetime2",
						"scale": 7
					},
					{
						"name": "Deal_HandOverDate",
						"type": "datetime2",
						"scale": 7
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "CloseITRaw_SalesLeads"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/autolytica')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SQLDMSAftersalesHours')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "autolytica",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "ClientID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "SaleType",
						"type": "varchar"
					},
					{
						"name": "InvoiceNumber",
						"type": "varchar"
					},
					{
						"name": "WIPNumber",
						"type": "varchar"
					},
					{
						"name": "RTSCode",
						"type": "varchar"
					},
					{
						"name": "SoldHours",
						"type": "decimal",
						"precision": 15,
						"scale": 2
					},
					{
						"name": "TakenHours",
						"type": "decimal",
						"precision": 15,
						"scale": 2
					},
					{
						"name": "Efficiency",
						"type": "decimal",
						"precision": 15,
						"scale": 2
					},
					{
						"name": "SaleValue",
						"type": "decimal",
						"precision": 15,
						"scale": 2
					},
					{
						"name": "RecoveryRate",
						"type": "decimal",
						"precision": 15,
						"scale": 2
					},
					{
						"name": "Technician",
						"type": "varchar"
					},
					{
						"name": "LA",
						"type": "varchar"
					},
					{
						"name": "LT",
						"type": "varchar"
					},
					{
						"name": "Dealer",
						"type": "varchar"
					},
					{
						"name": "OperatorName",
						"type": "varchar"
					},
					{
						"name": "FranchiseCode",
						"type": "varchar"
					},
					{
						"name": "ChassisNumber",
						"type": "varchar"
					},
					{
						"name": "RegistrationNumber",
						"type": "varchar"
					},
					{
						"name": "DateEdited",
						"type": "date"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "DMSAftersalesHours"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/autolytica')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SQLDMSAftersalesWIP')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "autolytica",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "UniqueID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "ClientID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Department",
						"type": "nvarchar"
					},
					{
						"name": "WIP",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Date Due",
						"type": "datetime2",
						"scale": 7
					},
					{
						"name": "Customer",
						"type": "nvarchar"
					},
					{
						"name": "Registration Number",
						"type": "nvarchar"
					},
					{
						"name": "Operator",
						"type": "nvarchar"
					},
					{
						"name": "Overdue",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Parts Value",
						"type": "decimal",
						"precision": 18,
						"scale": 2
					},
					{
						"name": "Parts Lines",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Labour Value",
						"type": "decimal",
						"precision": 18,
						"scale": 2
					},
					{
						"name": "Labour Lines",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Total Value",
						"type": "int",
						"precision": 10
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "DMSAftersalesWIP"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/autolytica')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SQLDMSCustomer')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "autolytica",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "ClientID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "CustomerNumber",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Title",
						"type": "varchar"
					},
					{
						"name": "Forename",
						"type": "varchar"
					},
					{
						"name": "Surname",
						"type": "varchar"
					},
					{
						"name": "Address1",
						"type": "varchar"
					},
					{
						"name": "Address2",
						"type": "varchar"
					},
					{
						"name": "Address3",
						"type": "varchar"
					},
					{
						"name": "Address4",
						"type": "varchar"
					},
					{
						"name": "Postcode",
						"type": "varchar"
					},
					{
						"name": "HomePhone",
						"type": "varchar"
					},
					{
						"name": "MobilePhone",
						"type": "varchar"
					},
					{
						"name": "EmailAddress",
						"type": "varchar"
					},
					{
						"name": "HomeTPS",
						"type": "varchar"
					},
					{
						"name": "MobileTPS",
						"type": "varchar"
					},
					{
						"name": "EmailTPS",
						"type": "varchar"
					},
					{
						"name": "ConsentSalesSMS",
						"type": "varchar"
					},
					{
						"name": "ConsentSalesPhone",
						"type": "varchar"
					},
					{
						"name": "ConsentSalesEmail",
						"type": "varchar"
					},
					{
						"name": "ConsentSalesPost",
						"type": "varchar"
					},
					{
						"name": "ConsentAfterSalesSMS",
						"type": "varchar"
					},
					{
						"name": "ConsentAfterSalesPhone",
						"type": "varchar"
					},
					{
						"name": "ConsentAfterSalesEmail",
						"type": "varchar"
					},
					{
						"name": "ConsentAfterSalesPost",
						"type": "varchar"
					},
					{
						"name": "ConsentBMWSMS",
						"type": "varchar"
					},
					{
						"name": "ConsentBMWPhone",
						"type": "varchar"
					},
					{
						"name": "ConsentBMWEmail",
						"type": "varchar"
					},
					{
						"name": "ConsentBMWPost",
						"type": "varchar"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "DMSCustomer"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/autolytica')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SQLDMSEmployee')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "autolytica",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "ClientID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "ID",
						"type": "varchar"
					},
					{
						"name": "Name",
						"type": "varchar"
					},
					{
						"name": "Dealership",
						"type": "varchar"
					},
					{
						"name": "EmployeeType",
						"type": "varchar"
					},
					{
						"name": "Check",
						"type": "varchar"
					},
					{
						"name": "RefID",
						"type": "int",
						"precision": 10
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "DMSEmployee"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/autolytica')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SQLDMSPartsSales')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "autolytica",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "ClientID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "DepartmentID",
						"type": "varchar"
					},
					{
						"name": "SaleType",
						"type": "varchar"
					},
					{
						"name": "SaleTypeDescription",
						"type": "varchar"
					},
					{
						"name": "Franchise",
						"type": "varchar"
					},
					{
						"name": "PartNumber",
						"type": "varchar"
					},
					{
						"name": "RetailValue",
						"type": "float",
						"precision": 15
					},
					{
						"name": "SaleValue",
						"type": "float",
						"precision": 15
					},
					{
						"name": "CostValue",
						"type": "float",
						"precision": 15
					},
					{
						"name": "GrossProfit",
						"type": "float",
						"precision": 15
					},
					{
						"name": "GrossProfitPercentage",
						"type": "float",
						"precision": 15
					},
					{
						"name": "WIPNo",
						"type": "varchar"
					},
					{
						"name": "AnalysisCode",
						"type": "varchar"
					},
					{
						"name": "OrderQuantity",
						"type": "float",
						"precision": 15
					},
					{
						"name": "SellingPrice",
						"type": "float",
						"precision": 15
					},
					{
						"name": "SalesDate",
						"type": "date"
					},
					{
						"name": "ProductGroup",
						"type": "varchar"
					},
					{
						"name": "AftersalesDepartment",
						"type": "varchar"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "DMSPartsSales"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/autolytica')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SQLDMSPartsStock')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "autolytica",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "Department",
						"type": "nvarchar"
					},
					{
						"name": "Franchise",
						"type": "nvarchar"
					},
					{
						"name": "Part Number",
						"type": "nvarchar"
					},
					{
						"name": "Description",
						"type": "nvarchar"
					},
					{
						"name": "Quantity",
						"type": "decimal",
						"precision": 18,
						"scale": 4
					},
					{
						"name": "Average Cost",
						"type": "decimal",
						"precision": 18,
						"scale": 2
					},
					{
						"name": "3_6_Months",
						"type": "decimal",
						"precision": 18,
						"scale": 2
					},
					{
						"name": "6_9_Months",
						"type": "decimal",
						"precision": 18,
						"scale": 2
					},
					{
						"name": "9_12_Months",
						"type": "decimal",
						"precision": 18,
						"scale": 2
					},
					{
						"name": "12_18_Months",
						"type": "decimal",
						"precision": 18,
						"scale": 2
					},
					{
						"name": "18_24_Months",
						"type": "decimal",
						"precision": 18,
						"scale": 2
					},
					{
						"name": "24_Months",
						"type": "decimal",
						"precision": 18,
						"scale": 2
					},
					{
						"name": "Date last sold",
						"type": "varchar"
					},
					{
						"name": "Date last purchased",
						"type": "varchar"
					},
					{
						"name": "Date last moved",
						"type": "datetime2",
						"scale": 7
					},
					{
						"name": "ClientID",
						"type": "int",
						"precision": 10
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "DMSPartsStock_merge"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/autolytica')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SQLDMSVehicle')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "autolytica",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "ClientID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "VehicleID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Make",
						"type": "varchar"
					},
					{
						"name": "Model",
						"type": "varchar"
					},
					{
						"name": "Derivative",
						"type": "varchar"
					},
					{
						"name": "RegistrationNumber",
						"type": "varchar"
					},
					{
						"name": "DateofRegistration",
						"type": "date"
					},
					{
						"name": "DeliveryDate",
						"type": "date"
					},
					{
						"name": "NewOrUsed",
						"type": "varchar"
					},
					{
						"name": "LastServiceDate",
						"type": "date"
					},
					{
						"name": "NextServiceDate",
						"type": "date"
					},
					{
						"name": "LastMOTDate",
						"type": "date"
					},
					{
						"name": "NextMOTDate",
						"type": "date"
					},
					{
						"name": "LastWorkshopDate",
						"type": "date"
					},
					{
						"name": "CapCode",
						"type": "varchar"
					},
					{
						"name": "ChassisNumber",
						"type": "varchar"
					},
					{
						"name": "DriverCustomerID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "AftersalesCustomerID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "SalesCustomerID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "RecordStatus",
						"type": "varchar"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "DMSVehicle"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/autolytica')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SQLDMSVehicleSales')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "autolytica",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "ClientID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Dealer",
						"type": "nvarchar"
					},
					{
						"name": "CustId",
						"type": "varchar"
					},
					{
						"name": "Title",
						"type": "nvarchar"
					},
					{
						"name": "Forename",
						"type": "nvarchar"
					},
					{
						"name": "Surname",
						"type": "nvarchar"
					},
					{
						"name": "Email",
						"type": "nvarchar"
					},
					{
						"name": "HomePhone",
						"type": "nvarchar"
					},
					{
						"name": "Mobile",
						"type": "nvarchar"
					},
					{
						"name": "Add1",
						"type": "nvarchar"
					},
					{
						"name": "Add2",
						"type": "nvarchar"
					},
					{
						"name": "Add3",
						"type": "nvarchar"
					},
					{
						"name": "Add4",
						"type": "nvarchar"
					},
					{
						"name": "Postcode",
						"type": "nvarchar"
					},
					{
						"name": "NewOrUsed",
						"type": "nvarchar"
					},
					{
						"name": "Type",
						"type": "nvarchar"
					},
					{
						"name": "VehMagic",
						"type": "nvarchar"
					},
					{
						"name": "StockNo",
						"type": "nvarchar"
					},
					{
						"name": "Chassis",
						"type": "nvarchar"
					},
					{
						"name": "RegistrationNo",
						"type": "nvarchar"
					},
					{
						"name": "RegistrationDate",
						"type": "date"
					},
					{
						"name": "DateInStock",
						"type": "date"
					},
					{
						"name": "CapVin",
						"type": "nvarchar"
					},
					{
						"name": "CapCode",
						"type": "nvarchar"
					},
					{
						"name": "Make",
						"type": "nvarchar"
					},
					{
						"name": "Model",
						"type": "nvarchar"
					},
					{
						"name": "Derivative",
						"type": "nvarchar"
					},
					{
						"name": "EngineSize",
						"type": "nvarchar"
					},
					{
						"name": "Bodystyle",
						"type": "nvarchar"
					},
					{
						"name": "Mileage",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Fuel",
						"type": "nvarchar"
					},
					{
						"name": "Transmission",
						"type": "nvarchar"
					},
					{
						"name": "GenericColour",
						"type": "nvarchar"
					},
					{
						"name": "SpecificColour",
						"type": "nvarchar"
					},
					{
						"name": "Doors",
						"type": "nvarchar"
					},
					{
						"name": "Siv",
						"type": "float",
						"precision": 15
					},
					{
						"name": "SaleDate",
						"type": "date"
					},
					{
						"name": "InvNumber",
						"type": "int",
						"precision": 10
					},
					{
						"name": "SalesExec",
						"type": "nvarchar"
					},
					{
						"name": "FullInvValue",
						"type": "float",
						"precision": 15
					},
					{
						"name": "Paint",
						"type": "float",
						"precision": 15
					},
					{
						"name": "Warr",
						"type": "float",
						"precision": 15
					},
					{
						"name": "Gap",
						"type": "float",
						"precision": 15
					},
					{
						"name": "Acc",
						"type": "float",
						"precision": 15
					},
					{
						"name": "Recon",
						"type": "float",
						"precision": 15
					},
					{
						"name": "FinanceCommission",
						"type": "float",
						"precision": 15
					},
					{
						"name": "Profit",
						"type": "float",
						"precision": 15
					},
					{
						"name": "SaleType",
						"type": "nvarchar"
					},
					{
						"name": "Px1",
						"type": "nvarchar"
					},
					{
						"name": "Px2",
						"type": "nvarchar"
					},
					{
						"name": "Px3",
						"type": "nvarchar"
					},
					{
						"name": "Source",
						"type": "nvarchar"
					},
					{
						"name": "ModelAnalysisCode",
						"type": "nvarchar"
					},
					{
						"name": "Purchaser",
						"type": "nvarchar"
					},
					{
						"name": "SupplierName",
						"type": "nvarchar"
					},
					{
						"name": "PurchaseInvoiceDate",
						"type": "date"
					},
					{
						"name": "AvailableDate",
						"type": "date"
					},
					{
						"name": "AccessoryProfit",
						"type": "float",
						"precision": 15
					},
					{
						"name": "PaintProfit",
						"type": "float",
						"precision": 15
					},
					{
						"name": "WarrProfit",
						"type": "float",
						"precision": 15
					},
					{
						"name": "GapProfit",
						"type": "float",
						"precision": 15
					},
					{
						"name": "OtherProfit",
						"type": "float",
						"precision": 15
					},
					{
						"name": "VolumeBonus",
						"type": "float",
						"precision": 15
					},
					{
						"name": "Bonus",
						"type": "float",
						"precision": 15
					},
					{
						"name": "RflProfit",
						"type": "float",
						"precision": 15
					},
					{
						"name": "MetalProfit",
						"type": "float",
						"precision": 15
					},
					{
						"name": "VehicleInvoiceValue",
						"type": "float",
						"precision": 15
					},
					{
						"name": "DeliveryDate",
						"type": "date"
					},
					{
						"name": "GroupPurchaseDate",
						"type": "date"
					},
					{
						"name": "ReceivedDate",
						"type": "date"
					},
					{
						"name": "DateInGroup",
						"type": "date"
					},
					{
						"name": "PurchaseAccount",
						"type": "nvarchar"
					},
					{
						"name": "FuelTypeID",
						"type": "nvarchar"
					},
					{
						"name": "SalesAccountID",
						"type": "varchar"
					},
					{
						"name": "SalesAccountName",
						"type": "varchar"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "DMSVehicleSales"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/autolytica')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SQLDMSVehicleSales_Merge')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "autolytica",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "ClientID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Dealer ID",
						"type": "nvarchar"
					},
					{
						"name": "Customer ID",
						"type": "varchar"
					},
					{
						"name": "New Or Used",
						"type": "nvarchar"
					},
					{
						"name": "Vehicle Type",
						"type": "nvarchar"
					},
					{
						"name": "DMS Vehicle ID",
						"type": "nvarchar"
					},
					{
						"name": "Stock Number",
						"type": "nvarchar"
					},
					{
						"name": "Registration Number",
						"type": "nvarchar"
					},
					{
						"name": "Registration Date",
						"type": "date"
					},
					{
						"name": "Dealership Date In Stock",
						"type": "date"
					},
					{
						"name": "Mileage",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Stock Value",
						"type": "decimal",
						"precision": 18,
						"scale": 2
					},
					{
						"name": "Sale Date",
						"type": "date"
					},
					{
						"name": "Invoice Number",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Sales Executive ID",
						"type": "nvarchar"
					},
					{
						"name": "Full Invoice Value",
						"type": "decimal",
						"precision": 18,
						"scale": 2
					},
					{
						"name": "Paint Value",
						"type": "decimal",
						"precision": 18,
						"scale": 2
					},
					{
						"name": "Warranty Value",
						"type": "decimal",
						"precision": 18,
						"scale": 2
					},
					{
						"name": "Gap Value",
						"type": "decimal",
						"precision": 18,
						"scale": 2
					},
					{
						"name": "Wheel Protection Value",
						"type": "decimal",
						"precision": 18,
						"scale": 2
					},
					{
						"name": "Add on Product 1",
						"type": "decimal",
						"precision": 18,
						"scale": 2
					},
					{
						"name": "Add on Product 2",
						"type": "decimal",
						"precision": 18,
						"scale": 2
					},
					{
						"name": "Add on Product 3",
						"type": "decimal",
						"precision": 18,
						"scale": 2
					},
					{
						"name": "Add on Product 4",
						"type": "decimal",
						"precision": 18,
						"scale": 2
					},
					{
						"name": "Volume Bonus",
						"type": "decimal",
						"precision": 18,
						"scale": 2
					},
					{
						"name": "Other Bonus",
						"type": "decimal",
						"precision": 18,
						"scale": 2
					},
					{
						"name": "RFL Profit",
						"type": "decimal",
						"precision": 18,
						"scale": 2
					},
					{
						"name": "Metal Profit",
						"type": "decimal",
						"precision": 18,
						"scale": 2
					},
					{
						"name": "Metal Invoice Value",
						"type": "decimal",
						"precision": 18,
						"scale": 2
					},
					{
						"name": "Delivery Date",
						"type": "date"
					},
					{
						"name": "Group Purchase Date",
						"type": "date"
					},
					{
						"name": "Received Date",
						"type": "date"
					},
					{
						"name": "Purchase Account",
						"type": "varchar"
					},
					{
						"name": "Sales Account ID",
						"type": "varchar"
					},
					{
						"name": "Sales Account Name",
						"type": "varchar"
					},
					{
						"name": "FileName",
						"type": "varchar"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "DMSVehicleSales_Merge"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/autolytica')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SQLDMSVehicleSales_Older')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "autolytica",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "ClientID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Dealer",
						"type": "nvarchar"
					},
					{
						"name": "CustId",
						"type": "varchar"
					},
					{
						"name": "Title",
						"type": "nvarchar"
					},
					{
						"name": "Forename",
						"type": "nvarchar"
					},
					{
						"name": "Surname",
						"type": "nvarchar"
					},
					{
						"name": "Email",
						"type": "nvarchar"
					},
					{
						"name": "HomePhone",
						"type": "nvarchar"
					},
					{
						"name": "Mobile",
						"type": "nvarchar"
					},
					{
						"name": "Add1",
						"type": "nvarchar"
					},
					{
						"name": "Add2",
						"type": "nvarchar"
					},
					{
						"name": "Add3",
						"type": "nvarchar"
					},
					{
						"name": "Add4",
						"type": "nvarchar"
					},
					{
						"name": "Postcode",
						"type": "nvarchar"
					},
					{
						"name": "NewOrUsed",
						"type": "nvarchar"
					},
					{
						"name": "Type",
						"type": "nvarchar"
					},
					{
						"name": "VehMagic",
						"type": "nvarchar"
					},
					{
						"name": "StockNo",
						"type": "nvarchar"
					},
					{
						"name": "Chassis",
						"type": "nvarchar"
					},
					{
						"name": "RegistrationNo",
						"type": "nvarchar"
					},
					{
						"name": "RegistrationDate",
						"type": "date"
					},
					{
						"name": "DateInStock",
						"type": "date"
					},
					{
						"name": "CapVin",
						"type": "nvarchar"
					},
					{
						"name": "CapCode",
						"type": "nvarchar"
					},
					{
						"name": "Make",
						"type": "nvarchar"
					},
					{
						"name": "Model",
						"type": "nvarchar"
					},
					{
						"name": "Derivative",
						"type": "nvarchar"
					},
					{
						"name": "EngineSize",
						"type": "nvarchar"
					},
					{
						"name": "Bodystyle",
						"type": "nvarchar"
					},
					{
						"name": "Mileage",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Fuel",
						"type": "nvarchar"
					},
					{
						"name": "Transmission",
						"type": "nvarchar"
					},
					{
						"name": "GenericColour",
						"type": "nvarchar"
					},
					{
						"name": "SpecificColour",
						"type": "nvarchar"
					},
					{
						"name": "Doors",
						"type": "nvarchar"
					},
					{
						"name": "Siv",
						"type": "float",
						"precision": 15
					},
					{
						"name": "SaleDate",
						"type": "date"
					},
					{
						"name": "InvNumber",
						"type": "int",
						"precision": 10
					},
					{
						"name": "SalesExec",
						"type": "nvarchar"
					},
					{
						"name": "FullInvValue",
						"type": "float",
						"precision": 15
					},
					{
						"name": "Paint",
						"type": "float",
						"precision": 15
					},
					{
						"name": "Warr",
						"type": "float",
						"precision": 15
					},
					{
						"name": "Gap",
						"type": "float",
						"precision": 15
					},
					{
						"name": "Acc",
						"type": "float",
						"precision": 15
					},
					{
						"name": "Recon",
						"type": "float",
						"precision": 15
					},
					{
						"name": "FinanceCommission",
						"type": "float",
						"precision": 15
					},
					{
						"name": "Profit",
						"type": "float",
						"precision": 15
					},
					{
						"name": "SaleType",
						"type": "nvarchar"
					},
					{
						"name": "Px1",
						"type": "nvarchar"
					},
					{
						"name": "Px2",
						"type": "nvarchar"
					},
					{
						"name": "Px3",
						"type": "nvarchar"
					},
					{
						"name": "Source",
						"type": "nvarchar"
					},
					{
						"name": "ModelAnalysisCode",
						"type": "nvarchar"
					},
					{
						"name": "Purchaser",
						"type": "nvarchar"
					},
					{
						"name": "SupplierName",
						"type": "nvarchar"
					},
					{
						"name": "PurchaseInvoiceDate",
						"type": "date"
					},
					{
						"name": "AvailableDate",
						"type": "date"
					},
					{
						"name": "AccessoryProfit",
						"type": "float",
						"precision": 15
					},
					{
						"name": "PaintProfit",
						"type": "float",
						"precision": 15
					},
					{
						"name": "WarrProfit",
						"type": "float",
						"precision": 15
					},
					{
						"name": "GapProfit",
						"type": "float",
						"precision": 15
					},
					{
						"name": "OtherProfit",
						"type": "float",
						"precision": 15
					},
					{
						"name": "VolumeBonus",
						"type": "float",
						"precision": 15
					},
					{
						"name": "Bonus",
						"type": "float",
						"precision": 15
					},
					{
						"name": "RflProfit",
						"type": "float",
						"precision": 15
					},
					{
						"name": "MetalProfit",
						"type": "float",
						"precision": 15
					},
					{
						"name": "VehicleInvoiceValue",
						"type": "float",
						"precision": 15
					},
					{
						"name": "DeliveryDate",
						"type": "date"
					},
					{
						"name": "SalesAccountID",
						"type": "varchar"
					},
					{
						"name": "SalesAccountName",
						"type": "varchar"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "DMSVehicleSales_Older"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/autolytica')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SQLDMSWorkshopSales')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "autolytica",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "ClientID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "SalesType",
						"type": "varchar"
					},
					{
						"name": "InvoiceNo",
						"type": "varchar"
					},
					{
						"name": "WIPNo",
						"type": "varchar"
					},
					{
						"name": "RTSCode",
						"type": "varchar"
					},
					{
						"name": "HoursSold",
						"type": "float",
						"precision": 15
					},
					{
						"name": "HoursTaken",
						"type": "float",
						"precision": 15
					},
					{
						"name": "Efficiency",
						"type": "float",
						"precision": 15
					},
					{
						"name": "SaleValue",
						"type": "float",
						"precision": 15
					},
					{
						"name": "RecoveryRate",
						"type": "float",
						"precision": 15
					},
					{
						"name": "Technician",
						"type": "varchar"
					},
					{
						"name": "LA",
						"type": "varchar"
					},
					{
						"name": "LT",
						"type": "varchar"
					},
					{
						"name": "DealershipID",
						"type": "varchar"
					},
					{
						"name": "OperatorName",
						"type": "varchar"
					},
					{
						"name": "FranchiseCode",
						"type": "varchar"
					},
					{
						"name": "ChassisNumber",
						"type": "varchar"
					},
					{
						"name": "RegistrationNumber",
						"type": "varchar"
					},
					{
						"name": "DateEdited",
						"type": "date"
					},
					{
						"name": "Tmagic",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Vmagic",
						"type": "int",
						"precision": 10
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "DMSWorkshopSales"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/autolytica')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SQLEMAXRaw_EnquiryActivity')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "autolytica",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "ClientID",
						"type": "int"
					},
					{
						"name": "DealerID",
						"type": "varchar"
					},
					{
						"name": "DealerCode",
						"type": "varchar"
					},
					{
						"name": "DealerName",
						"type": "varchar"
					},
					{
						"name": "SalesPerson",
						"type": "varchar"
					},
					{
						"name": "SalespersonID",
						"type": "varchar"
					},
					{
						"name": "EnquiryID",
						"type": "varchar"
					},
					{
						"name": "CustomerID",
						"type": "varchar"
					},
					{
						"name": "CustomerType",
						"type": "varchar"
					},
					{
						"name": "SourceOfEnquiry",
						"type": "varchar"
					},
					{
						"name": "MethodOfContact",
						"type": "varchar"
					},
					{
						"name": "EnquiryVehicleType",
						"type": "varchar"
					},
					{
						"name": "EnquiryVehicleMake",
						"type": "varchar"
					},
					{
						"name": "EnquiryVehicleRange",
						"type": "varchar"
					},
					{
						"name": "EnquiryVehicleModel",
						"type": "varchar"
					},
					{
						"name": "EnquiryVehicleDerivative",
						"type": "varchar"
					},
					{
						"name": "EnquiryVehicleReg",
						"type": "varchar"
					},
					{
						"name": "EnquiryVehicleVin",
						"type": "varchar"
					},
					{
						"name": "PXVehicle",
						"type": "varchar"
					},
					{
						"name": "PXReg",
						"type": "varchar"
					},
					{
						"name": "PXVin",
						"type": "varchar"
					},
					{
						"name": "PXMake",
						"type": "varchar"
					},
					{
						"name": "PXRange",
						"type": "varchar"
					},
					{
						"name": "PXModel",
						"type": "varchar"
					},
					{
						"name": "PXDerivative",
						"type": "varchar"
					},
					{
						"name": "PXSIValue",
						"type": "decimal",
						"precision": 18,
						"scale": 2
					},
					{
						"name": "PXDisposalMethod",
						"type": "varchar"
					},
					{
						"name": "OfferCreatedDate",
						"type": "datetime2",
						"scale": 7
					},
					{
						"name": "OfferVehicleType",
						"type": "varchar"
					},
					{
						"name": "OfferVehicleMake",
						"type": "varchar"
					},
					{
						"name": "OfferVehicleRange",
						"type": "varchar"
					},
					{
						"name": "OfferVehicleModel",
						"type": "varchar"
					},
					{
						"name": "OfferVehicleDerivative",
						"type": "varchar"
					},
					{
						"name": "OfferVehicleReg",
						"type": "varchar"
					},
					{
						"name": "OfferVehicleVin",
						"type": "varchar"
					},
					{
						"name": "VehicleBasePrice",
						"type": "decimal",
						"precision": 18,
						"scale": 2
					},
					{
						"name": "AddonsPrice",
						"type": "decimal",
						"precision": 18,
						"scale": 2
					},
					{
						"name": "Discounts",
						"type": "decimal",
						"precision": 18,
						"scale": 2
					},
					{
						"name": "DeliveryFee",
						"type": "decimal",
						"precision": 18,
						"scale": 2
					},
					{
						"name": "RegFee",
						"type": "decimal",
						"precision": 18,
						"scale": 2
					},
					{
						"name": "RFLFee",
						"type": "decimal",
						"precision": 18,
						"scale": 2
					},
					{
						"name": "TotalOTRprice",
						"type": "decimal",
						"precision": 18,
						"scale": 2
					},
					{
						"name": "PXVehicleOffer",
						"type": "decimal",
						"precision": 18,
						"scale": 2
					},
					{
						"name": "PXOverAllowance",
						"type": "decimal",
						"precision": 18,
						"scale": 2
					},
					{
						"name": "OrderNo",
						"type": "varchar"
					},
					{
						"name": "Financed",
						"type": "varchar"
					},
					{
						"name": "FinanceHouse",
						"type": "varchar"
					},
					{
						"name": "Rate",
						"type": "decimal",
						"precision": 18,
						"scale": 2
					},
					{
						"name": "APR",
						"type": "decimal",
						"precision": 18,
						"scale": 2
					},
					{
						"name": "FinanceTerms",
						"type": "decimal",
						"precision": 18,
						"scale": 2
					},
					{
						"name": "FinanceType",
						"type": "varchar"
					},
					{
						"name": "CashDeposit",
						"type": "decimal",
						"precision": 18,
						"scale": 2
					},
					{
						"name": "DealerFDA",
						"type": "decimal",
						"precision": 18,
						"scale": 2
					},
					{
						"name": "ProviderFDA",
						"type": "decimal",
						"precision": 18,
						"scale": 2
					},
					{
						"name": "Cashback",
						"type": "decimal",
						"precision": 18,
						"scale": 2
					},
					{
						"name": "FinanceValue",
						"type": "decimal",
						"precision": 18,
						"scale": 2
					},
					{
						"name": "MonthlyPayments",
						"type": "decimal",
						"precision": 18,
						"scale": 2
					},
					{
						"name": "EnquiryStatusCode",
						"type": "varchar"
					},
					{
						"name": "EnquiryStatus",
						"type": "varchar"
					},
					{
						"name": "EnquiryDate",
						"type": "datetime2",
						"scale": 7
					},
					{
						"name": "TestDriveDate",
						"type": "datetime2",
						"scale": 7
					},
					{
						"name": "OrderDate",
						"type": "datetime2",
						"scale": 7
					},
					{
						"name": "EstimatedHandoverDate",
						"type": "datetime2",
						"scale": 7
					},
					{
						"name": "DeliveryDate",
						"type": "datetime2",
						"scale": 7
					},
					{
						"name": "LostSaleDate",
						"type": "datetime2",
						"scale": 7
					},
					{
						"name": "LostSaleReason",
						"type": "varchar"
					},
					{
						"name": "LostSaleRequestedDate",
						"type": "datetime2",
						"scale": 7
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "EMAXRaw_EnquiryActivity_Merge"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/autolytica')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SQLEnquiryMAX_Enquiries')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "autolytica",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "EnquiryID",
						"type": "varchar"
					},
					{
						"name": "CustomerID",
						"type": "varchar"
					},
					{
						"name": "LeadID",
						"type": "varchar"
					},
					{
						"name": "StatusCode",
						"type": "varchar"
					},
					{
						"name": "StatusDescription",
						"type": "varchar"
					},
					{
						"name": "NewOrUsed",
						"type": "varchar"
					},
					{
						"name": "SourceOfEnquiry",
						"type": "varchar"
					},
					{
						"name": "MethodOfContact",
						"type": "varchar"
					},
					{
						"name": "SoldNewOrUsed",
						"type": "varchar"
					},
					{
						"name": "DeliveryDate",
						"type": "datetime2",
						"scale": 7
					},
					{
						"name": "OrderDate",
						"type": "datetime2",
						"scale": 7
					},
					{
						"name": "Make",
						"type": "varchar"
					},
					{
						"name": "Range",
						"type": "varchar"
					},
					{
						"name": "Model",
						"type": "varchar"
					},
					{
						"name": "Derivative",
						"type": "varchar"
					},
					{
						"name": "RegistrationNumber",
						"type": "varchar"
					},
					{
						"name": "FuelType",
						"type": "varchar"
					},
					{
						"name": "Mileage",
						"type": "int",
						"precision": 10
					},
					{
						"name": "StockNumber",
						"type": "varchar"
					},
					{
						"name": "LostSaleRequestedDate",
						"type": "datetime2",
						"scale": 7
					},
					{
						"name": "LostSaleAcceptedDate",
						"type": "datetime2",
						"scale": 7
					},
					{
						"name": "LostSaleReason",
						"type": "varchar"
					},
					{
						"name": "uniqueid",
						"type": "int",
						"precision": 10
					},
					{
						"name": "ClientID",
						"type": "int",
						"precision": 10
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "EnquiryMAX_Enquiries"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/autolytica')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SQLEnquiryMax')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "autolytica",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "ClientID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "DealershipID",
						"type": "varchar"
					},
					{
						"name": "SalesType",
						"type": "varchar"
					},
					{
						"name": "EnquiryNo",
						"type": "int",
						"precision": 10
					},
					{
						"name": "CustomerTitle",
						"type": "varchar"
					},
					{
						"name": "CustomerForename",
						"type": "varchar"
					},
					{
						"name": "CustomerSurname",
						"type": "varchar"
					},
					{
						"name": "CompanyName",
						"type": "varchar"
					},
					{
						"name": "Email",
						"type": "varchar"
					},
					{
						"name": "HomePhone",
						"type": "varchar"
					},
					{
						"name": "MobilePhone",
						"type": "varchar"
					},
					{
						"name": "WorkPhone",
						"type": "varchar"
					},
					{
						"name": "Postcode",
						"type": "varchar"
					},
					{
						"name": "EnquiryCreatedDate",
						"type": "date"
					},
					{
						"name": "EnquiryType",
						"type": "varchar"
					},
					{
						"name": "SalesExecutive",
						"type": "varchar"
					},
					{
						"name": "BusinessManager",
						"type": "varchar"
					},
					{
						"name": "NewOrUsed",
						"type": "varchar"
					},
					{
						"name": "VehicleType",
						"type": "varchar"
					},
					{
						"name": "Make",
						"type": "varchar"
					},
					{
						"name": "Range",
						"type": "varchar"
					},
					{
						"name": "Model",
						"type": "varchar"
					},
					{
						"name": "Derivative",
						"type": "varchar"
					},
					{
						"name": "RegistrationNo",
						"type": "varchar"
					},
					{
						"name": "RegistrationDate",
						"type": "date"
					},
					{
						"name": "StockNo",
						"type": "varchar"
					},
					{
						"name": "GroupDateInStock",
						"type": "date"
					},
					{
						"name": "BranchDateInStock",
						"type": "date"
					},
					{
						"name": "FirstOrderDate",
						"type": "date"
					},
					{
						"name": "EnquiryStatus",
						"type": "varchar"
					},
					{
						"name": "InvoicedDate",
						"type": "date"
					},
					{
						"name": "ExpectedDeliveryDate",
						"type": "date"
					},
					{
						"name": "DeliveryDate",
						"type": "date"
					},
					{
						"name": "DeliveryCategory",
						"type": "varchar"
					},
					{
						"name": "MetalOnly",
						"type": "float",
						"precision": 15
					},
					{
						"name": "OTRPriceExcIns",
						"type": "float",
						"precision": 15
					},
					{
						"name": "TotalGoodsAndServicesIncIns",
						"type": "float",
						"precision": 15
					},
					{
						"name": "Financed",
						"type": "varchar"
					},
					{
						"name": "FinanceProvider",
						"type": "varchar"
					},
					{
						"name": "FinanceType",
						"type": "varchar"
					},
					{
						"name": "FinanceScheme",
						"type": "varchar"
					},
					{
						"name": "LoanTerm",
						"type": "int",
						"precision": 10
					},
					{
						"name": "APR",
						"type": "float",
						"precision": 15
					},
					{
						"name": "FlatRate",
						"type": "varchar"
					},
					{
						"name": "FinanceBalance",
						"type": "float",
						"precision": 15
					},
					{
						"name": "VolumeBonus",
						"type": "float",
						"precision": 15
					},
					{
						"name": "Commission",
						"type": "float",
						"precision": 15
					},
					{
						"name": "DocFee",
						"type": "float",
						"precision": 15
					},
					{
						"name": "FinanceSubsidy",
						"type": "float",
						"precision": 15
					},
					{
						"name": "TotalFinanceMargin",
						"type": "float",
						"precision": 15
					},
					{
						"name": "GAP",
						"type": "float",
						"precision": 15
					},
					{
						"name": "GapProduct",
						"type": "varchar"
					},
					{
						"name": "Warranty",
						"type": "float",
						"precision": 15
					},
					{
						"name": "WarrantyProduct",
						"type": "varchar"
					},
					{
						"name": "Extras",
						"type": "float",
						"precision": 15
					},
					{
						"name": "ExtrasProduct",
						"type": "varchar"
					},
					{
						"name": "Paint",
						"type": "float",
						"precision": 15
					},
					{
						"name": "PaintProduct",
						"type": "varchar"
					},
					{
						"name": "TotalInsMargin",
						"type": "float",
						"precision": 15
					},
					{
						"name": "TotalFandIMargin",
						"type": "float",
						"precision": 15
					},
					{
						"name": "VolumeBonusCentral",
						"type": "float",
						"precision": 15
					},
					{
						"name": "DOCFeeCentral",
						"type": "float",
						"precision": 15
					},
					{
						"name": "TotalCentralIncome",
						"type": "float",
						"precision": 15
					},
					{
						"name": "DaysInStock",
						"type": "int",
						"precision": 10
					},
					{
						"name": "LastAdvertisedPrice",
						"type": "float",
						"precision": 15
					},
					{
						"name": "ModelAnalysisCode",
						"type": "varchar"
					},
					{
						"name": "SIV",
						"type": "float",
						"precision": 15
					},
					{
						"name": "StockNo2",
						"type": "varchar"
					},
					{
						"name": "ChassisNo",
						"type": "varchar"
					},
					{
						"name": "EngineSize",
						"type": "varchar"
					},
					{
						"name": "BodyStyle",
						"type": "varchar"
					},
					{
						"name": "Mileage",
						"type": "int",
						"precision": 10
					},
					{
						"name": "FuelType",
						"type": "varchar"
					},
					{
						"name": "Transmission",
						"type": "varchar"
					},
					{
						"name": "Colour",
						"type": "varchar"
					},
					{
						"name": "TrimType",
						"type": "varchar"
					},
					{
						"name": "NumberOfDoors",
						"type": "int",
						"precision": 10
					},
					{
						"name": "GrossProfit",
						"type": "float",
						"precision": 15
					},
					{
						"name": "ReconditioningCost",
						"type": "float",
						"precision": 15
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "EnquiryMAXSales"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/autolytica')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SQLRTCRaw_BookingvUpsellDeclinedReasons')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "autolytica",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "GroupID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "ReasonID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Reason",
						"type": "varchar"
					},
					{
						"name": "Active",
						"type": "bit"
					},
					{
						"name": "Email",
						"type": "bit"
					},
					{
						"name": "AddToBooking",
						"type": "bit"
					},
					{
						"name": "Updated",
						"type": "datetime2",
						"scale": 7
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "RTCRaw_BookingvUpsellDeclinedReasons"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/autolytica')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SQLRTCRaw_BookingvUpsellLog_Merge')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "autolytica",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "GroupID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Dealer",
						"type": "nvarchar"
					},
					{
						"name": "Recorded",
						"type": "datetime2",
						"scale": 7
					},
					{
						"name": "UpsellId",
						"type": "int",
						"precision": 10
					},
					{
						"name": "DeclinedId",
						"type": "int",
						"precision": 10
					},
					{
						"name": "FreeTextDeclinedId",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Agent",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Price",
						"type": "decimal",
						"precision": 8,
						"scale": 2
					},
					{
						"name": "Declined",
						"type": "bit"
					},
					{
						"name": "LogSeqNo",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Campaign",
						"type": "bit"
					},
					{
						"name": "Updated",
						"type": "datetime2",
						"scale": 7
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "RTCRaw_BookingvUpsellLog_Merge"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/autolytica')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SQLRTCRaw_BookingvUpsells_Merge')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "autolytica",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "GroupID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Dealer",
						"type": "nvarchar"
					},
					{
						"name": "Recorded",
						"type": "datetime2",
						"scale": 7
					},
					{
						"name": "UpsellId",
						"type": "int",
						"precision": 10
					},
					{
						"name": "DeclinedId",
						"type": "int",
						"precision": 10
					},
					{
						"name": "FreeTextDeclinedId",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Agent",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Price",
						"type": "decimal",
						"precision": 8,
						"scale": 2
					},
					{
						"name": "Declined",
						"type": "bit"
					},
					{
						"name": "LogSeqNo",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Campaign",
						"type": "bit"
					},
					{
						"name": "Updated",
						"type": "datetime2",
						"scale": 7
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "RTCRaw_BookingvUpsells_Merge"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/autolytica')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SQLRTCRaw_ContactvContactParms')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "autolytica",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "GroupID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Dealer",
						"type": "nvarchar"
					},
					{
						"name": "ContCode",
						"type": "nvarchar"
					},
					{
						"name": "Description",
						"type": "nvarchar"
					},
					{
						"name": "FollCode",
						"type": "nvarchar"
					},
					{
						"name": "FollDays",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Type",
						"type": "char"
					},
					{
						"name": "ReportType",
						"type": "char"
					},
					{
						"name": "Updated",
						"type": "datetime2",
						"scale": 7
					},
					{
						"name": "UniqueID",
						"type": "int",
						"precision": 10
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "RTCRaw_ContactvContactParms"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/autolytica')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SQLRTCRaw_ContactvContactTypes')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "autolytica",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "GroupID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "ContCode",
						"type": "nvarchar"
					},
					{
						"name": "Description",
						"type": "nvarchar"
					},
					{
						"name": "Type",
						"type": "nvarchar"
					},
					{
						"name": "Analysis",
						"type": "nvarchar"
					},
					{
						"name": "AnalysisGroup",
						"type": "varchar"
					},
					{
						"name": "Updated",
						"type": "datetime2",
						"scale": 7
					},
					{
						"name": "UniqueID",
						"type": "int",
						"precision": 10
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "RTCRaw_ContactvContactTypes"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/autolytica')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SQLRTCRaw_ContactvContacts_Merge')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "autolytica",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "GroupID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "SeqNo",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Dealer",
						"type": "nvarchar"
					},
					{
						"name": "ContCode",
						"type": "nvarchar"
					},
					{
						"name": "Notes1",
						"type": "nvarchar"
					},
					{
						"name": "Notes2",
						"type": "nvarchar"
					},
					{
						"name": "Notes3",
						"type": "nvarchar"
					},
					{
						"name": "ContDate",
						"type": "datetime2",
						"scale": 7
					},
					{
						"name": "FollDate",
						"type": "datetime2",
						"scale": 7
					},
					{
						"name": "Complete",
						"type": "datetime2",
						"scale": 7
					},
					{
						"name": "CompleteCode",
						"type": "nvarchar"
					},
					{
						"name": "FollCode",
						"type": "nvarchar"
					},
					{
						"name": "Booking",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Value",
						"type": "decimal",
						"precision": 6,
						"scale": 2
					},
					{
						"name": "OpNum",
						"type": "int",
						"precision": 10
					},
					{
						"name": "RegNo",
						"type": "nvarchar"
					},
					{
						"name": "Model",
						"type": "nvarchar"
					},
					{
						"name": "VehDesc",
						"type": "nvarchar"
					},
					{
						"name": "RegDate",
						"type": "datetime2",
						"scale": 7
					},
					{
						"name": "Franchise",
						"type": "varchar"
					},
					{
						"name": "HeaderId",
						"type": "int",
						"precision": 10
					},
					{
						"name": "ItemId",
						"type": "int",
						"precision": 10
					},
					{
						"name": "GroupedRAG",
						"type": "int",
						"precision": 10
					},
					{
						"name": "OpNumCreated",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Updated",
						"type": "datetime2",
						"scale": 7
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "RTCRaw_ContactvContacts_Merge"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/autolytica')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SQLRTCRaw_Dealers')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "autolytica",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "GroupID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "DealerID",
						"type": "nvarchar"
					},
					{
						"name": "DealerName",
						"type": "nvarchar"
					},
					{
						"name": "Marque",
						"type": "nvarchar"
					},
					{
						"name": "DMS",
						"type": "nvarchar"
					},
					{
						"name": "Updated",
						"type": "datetime2",
						"scale": 7
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "RTCRaw_Dealers"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/autolytica')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SQLRTCRaw_Employees')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "autolytica",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "GroupID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "DealerID",
						"type": "nvarchar"
					},
					{
						"name": "EmployeeNumber",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Name",
						"type": "nvarchar"
					},
					{
						"name": "EmployeeType",
						"type": "nvarchar"
					},
					{
						"name": "OpNum",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Updated",
						"type": "datetime2",
						"scale": 7
					},
					{
						"name": "UniqueID",
						"type": "int",
						"precision": 10
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "RTCRaw_Employees"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/autolytica')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SQLRTCRaw_GroupExtStatus')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "autolytica",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "GroupID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "ExtStatusID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Description",
						"type": "nvarchar"
					},
					{
						"name": "UniqueID",
						"type": "int",
						"precision": 10
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "RTCRaw_GroupvExtStatus"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/autolytica')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SQLRTCRaw_GroupvAgents')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "autolytica",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "GroupID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Grp",
						"type": "varchar"
					},
					{
						"name": "Name",
						"type": "varchar"
					},
					{
						"name": "OpNum",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Updated",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "RTCRaw_GroupvAgents"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/autolytica')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SQLRTCRaw_GroupvApplication_Merge')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "autolytica",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "GroupID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "ApplicationId",
						"type": "int",
						"precision": 10
					},
					{
						"name": "ApplicationName",
						"type": "nvarchar"
					},
					{
						"name": "Updated",
						"type": "datetime2",
						"scale": 7
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "RTCRaw_GroupvApplication_Merge"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/autolytica')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SQLRTCRaw_GroupvDealerRegions')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "autolytica",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "GroupID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "id",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Description",
						"type": "nvarchar"
					},
					{
						"name": "Updated",
						"type": "datetime2",
						"scale": 7
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "RTCRaw_GroupvDealerRegions"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/autolytica')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SQLRTCRaw_GroupvEmailLog')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "autolytica",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "GroupID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "EmailLogID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Dealer",
						"type": "varchar"
					},
					{
						"name": "AgentID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "RegNo",
						"type": "varchar"
					},
					{
						"name": "Created",
						"type": "datetime2",
						"scale": 7
					},
					{
						"name": "ContSeqNo",
						"type": "int",
						"precision": 10
					},
					{
						"name": "ErrorLogID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Sent",
						"type": "int",
						"precision": 10
					},
					{
						"name": "RemoteEmailID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "ServiceID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "EmailChangedID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Updated",
						"type": "datetime2",
						"scale": 7
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "RTCRaw_GroupvEmailLog"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/autolytica')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SQLRTCRaw_GroupvEmailLogNotifications')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "autolytica",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "GroupID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "ID",
						"type": "bigint",
						"precision": 19
					},
					{
						"name": "EmailID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "EventType",
						"type": "varchar"
					},
					{
						"name": "SmtpID",
						"type": "varchar"
					},
					{
						"name": "Response",
						"type": "varchar"
					},
					{
						"name": "DeliveryAttempt",
						"type": "int",
						"precision": 10
					},
					{
						"name": "BounceType",
						"type": "varchar"
					},
					{
						"name": "BounceStatus",
						"type": "varchar"
					},
					{
						"name": "IP",
						"type": "varchar"
					},
					{
						"name": "UserAgent",
						"type": "varchar"
					},
					{
						"name": "TimeStamp",
						"type": "datetime2",
						"scale": 7
					},
					{
						"name": "Created",
						"type": "datetime2",
						"scale": 7
					},
					{
						"name": "Dealer",
						"type": "varchar"
					},
					{
						"name": "EmailLogID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Updated",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "RTCRaw_GroupvEmailLogEventNotifications"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/autolytica')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SQLRTCRaw_GroupvISSections')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "autolytica",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "GroupID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Dealer",
						"type": "nvarchar"
					},
					{
						"name": "TypeId",
						"type": "int",
						"precision": 10
					},
					{
						"name": "SectionId",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Name",
						"type": "nvarchar"
					},
					{
						"name": "LongName",
						"type": "nvarchar"
					},
					{
						"name": "InUse",
						"type": "nvarchar"
					},
					{
						"name": "UniqueID",
						"type": "int",
						"precision": 10
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "RTCRaw_GroupvISSections"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/autolytica')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SQLRTCRaw_GroupvISSubSections')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "autolytica",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "GroupID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Dealer",
						"type": "varchar"
					},
					{
						"name": "TypeId",
						"type": "int",
						"precision": 10
					},
					{
						"name": "SectionId",
						"type": "int",
						"precision": 10
					},
					{
						"name": "SubSectionId",
						"type": "int",
						"precision": 10
					},
					{
						"name": "DisplaySeq",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Name",
						"type": "varchar"
					},
					{
						"name": "LongName",
						"type": "varchar"
					},
					{
						"name": "CategoryId",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Special",
						"type": "varchar"
					},
					{
						"name": "InUse",
						"type": "varchar"
					},
					{
						"name": "Mandatory",
						"type": "varchar"
					},
					{
						"name": "UniqueID",
						"type": "int",
						"precision": 10
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "RTCRaw_GroupvISSubSections"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/autolytica')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SQLRTCRaw_GroupvLogFile')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "autolytica",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "GroupID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Seq",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Dealer",
						"type": "nvarchar"
					},
					{
						"name": "Booking",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Created",
						"type": "datetime2",
						"scale": 7
					},
					{
						"name": "DateIn",
						"type": "datetime2",
						"scale": 7
					},
					{
						"name": "ServCode",
						"type": "nvarchar"
					},
					{
						"name": "Model",
						"type": "varchar"
					},
					{
						"name": "Tran1",
						"type": "varchar"
					},
					{
						"name": "Tran2",
						"type": "varchar"
					},
					{
						"name": "Tran3",
						"type": "varchar"
					},
					{
						"name": "TranComm",
						"type": "varchar"
					},
					{
						"name": "OpNum",
						"type": "int",
						"precision": 10
					},
					{
						"name": "RegNo",
						"type": "nvarchar"
					},
					{
						"name": "RegDate",
						"type": "datetime2",
						"scale": 7
					},
					{
						"name": "Account",
						"type": "varchar"
					},
					{
						"name": "ContCode",
						"type": "nvarchar"
					},
					{
						"name": "PayType",
						"type": "varchar"
					},
					{
						"name": "OverRide",
						"type": "varchar"
					},
					{
						"name": "SACA",
						"type": "varchar"
					},
					{
						"name": "SACU",
						"type": "varchar"
					},
					{
						"name": "SourceOfBusiness",
						"type": "nvarchar"
					},
					{
						"name": "LastServ",
						"type": "datetime2",
						"scale": 7
					},
					{
						"name": "NextServ",
						"type": "datetime2",
						"scale": 7
					},
					{
						"name": "MotDate",
						"type": "datetime2",
						"scale": 7
					},
					{
						"name": "Campaign",
						"type": "nvarchar"
					},
					{
						"name": "CampaignPrice",
						"type": "decimal",
						"precision": 8,
						"scale": 2
					},
					{
						"name": "TotalValue",
						"type": "decimal",
						"precision": 8,
						"scale": 2
					},
					{
						"name": "ContSeqNo",
						"type": "int",
						"precision": 10
					},
					{
						"name": "ApplicationId",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Updated",
						"type": "datetime2",
						"scale": 7
					},
					{
						"name": "UniqueID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "InsertedDate",
						"type": "datetime2",
						"scale": 7
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "RTCRaw_GroupvLogFile"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/autolytica')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SQLRTCRaw_GroupvLogFile_Merge')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "autolytica",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "GroupID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Seq",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Dealer",
						"type": "nvarchar"
					},
					{
						"name": "Booking",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Created",
						"type": "datetime2",
						"scale": 7
					},
					{
						"name": "DateIn",
						"type": "datetime2",
						"scale": 7
					},
					{
						"name": "ServCode",
						"type": "nvarchar"
					},
					{
						"name": "Model",
						"type": "varchar"
					},
					{
						"name": "Tran1",
						"type": "varchar"
					},
					{
						"name": "Tran2",
						"type": "varchar"
					},
					{
						"name": "Tran3",
						"type": "varchar"
					},
					{
						"name": "TranComm",
						"type": "varchar"
					},
					{
						"name": "OpNum",
						"type": "int",
						"precision": 10
					},
					{
						"name": "RegNo",
						"type": "nvarchar"
					},
					{
						"name": "RegDate",
						"type": "datetime2",
						"scale": 7
					},
					{
						"name": "Account",
						"type": "varchar"
					},
					{
						"name": "ContCode",
						"type": "nvarchar"
					},
					{
						"name": "PayType",
						"type": "varchar"
					},
					{
						"name": "OverRide",
						"type": "varchar"
					},
					{
						"name": "SACA",
						"type": "varchar"
					},
					{
						"name": "SACU",
						"type": "varchar"
					},
					{
						"name": "SourceOfBusiness",
						"type": "nvarchar"
					},
					{
						"name": "LastServ",
						"type": "datetime2",
						"scale": 7
					},
					{
						"name": "NextServ",
						"type": "datetime2",
						"scale": 7
					},
					{
						"name": "MotDate",
						"type": "datetime2",
						"scale": 7
					},
					{
						"name": "Campaign",
						"type": "nvarchar"
					},
					{
						"name": "CampaignPrice",
						"type": "decimal",
						"precision": 8,
						"scale": 2
					},
					{
						"name": "TotalValue",
						"type": "decimal",
						"precision": 8,
						"scale": 2
					},
					{
						"name": "ContSeqNo",
						"type": "int",
						"precision": 10
					},
					{
						"name": "ApplicationId",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Updated",
						"type": "datetime2",
						"scale": 7
					},
					{
						"name": "UniqueID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "InsertedDate",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "RTCRaw_GroupvLogFile_Merge"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/autolytica')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SQLRTCRaw_GroupvSMSLog')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "autolytica",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "GroupID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "SMSLogID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "LinkSMSID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "DealerID",
						"type": "varchar"
					},
					{
						"name": "AgentID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "BookingID",
						"type": "varchar"
					},
					{
						"name": "SMSID",
						"type": "varchar"
					},
					{
						"name": "SendDate",
						"type": "datetime2",
						"scale": 7
					},
					{
						"name": "Created",
						"type": "datetime2",
						"scale": 7
					},
					{
						"name": "ContSeqNo",
						"type": "int",
						"precision": 10
					},
					{
						"name": "ErrorLogID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "TypeID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Updated",
						"type": "datetime2",
						"scale": 7
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "RTCRaw_GroupvSMSLog"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/autolytica')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SQLRTCRaw_GroupvUpsells')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "autolytica",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "GroupID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "UpsellId",
						"type": "int",
						"precision": 10
					},
					{
						"name": "UpsellName",
						"type": "nvarchar"
					},
					{
						"name": "Updated",
						"type": "datetime2",
						"scale": 7
					},
					{
						"name": "UniqueID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "InsertedDate",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "RTCRaw_BookingvUpsells"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/autolytica')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SQLRTCRaw_InspectionISCheckTypes')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "autolytica",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "GroupID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "DealerID",
						"type": "nvarchar"
					},
					{
						"name": "TypeId",
						"type": "nvarchar"
					},
					{
						"name": "Name",
						"type": "nvarchar"
					},
					{
						"name": "Type",
						"type": "nvarchar"
					},
					{
						"name": "InUse",
						"type": "nvarchar"
					},
					{
						"name": "Marque",
						"type": "nvarchar"
					},
					{
						"name": "CheckSheetType",
						"type": "nvarchar"
					},
					{
						"name": "Updated",
						"type": "datetime2",
						"scale": 7
					},
					{
						"name": "UniqueID",
						"type": "int",
						"precision": 10
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "RTCRaw_InspectionISCheckTypes"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/autolytica')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SQLRTCRaw_InspectionISLabour_Merge')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "autolytica",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "GroupID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Id",
						"type": "int",
						"precision": 10
					},
					{
						"name": "ItemId",
						"type": "int",
						"precision": 10
					},
					{
						"name": "LabourId",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Details",
						"type": "varchar"
					},
					{
						"name": "Allowed",
						"type": "decimal",
						"precision": 15,
						"scale": 2
					},
					{
						"name": "Price",
						"type": "varchar"
					},
					{
						"name": "RepairCode",
						"type": "varchar"
					},
					{
						"name": "Discount",
						"type": "decimal",
						"precision": 5,
						"scale": 2
					},
					{
						"name": "NetPrice",
						"type": "decimal",
						"precision": 15,
						"scale": 2
					},
					{
						"name": "Rate",
						"type": "decimal",
						"precision": 15,
						"scale": 2
					},
					{
						"name": "LabourRate",
						"type": "varchar"
					},
					{
						"name": "BookingLineNo",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Updated",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "UniqueID",
						"type": "int",
						"precision": 10
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "RTCRaw_InspectionvlSLabour_Merge"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/autolytica')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SQLRTCRaw_InspectionISParts_Merge')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "autolytica",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "GroupID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Id",
						"type": "int",
						"precision": 10
					},
					{
						"name": "ItemId",
						"type": "int",
						"precision": 10
					},
					{
						"name": "PartsId",
						"type": "int",
						"precision": 10
					},
					{
						"name": "PartNo",
						"type": "varchar"
					},
					{
						"name": "Details",
						"type": "varchar"
					},
					{
						"name": "Qty",
						"type": "decimal",
						"precision": 10,
						"scale": 2
					},
					{
						"name": "Price",
						"type": "decimal",
						"precision": 15,
						"scale": 2
					},
					{
						"name": "Discount",
						"type": "decimal",
						"precision": 5,
						"scale": 2
					},
					{
						"name": "NetPrice",
						"type": "decimal",
						"precision": 15,
						"scale": 2
					},
					{
						"name": "LabourId",
						"type": "int",
						"precision": 10
					},
					{
						"name": "BinLocn",
						"type": "varchar"
					},
					{
						"name": "InStock",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Reserved",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Excluded",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Cost",
						"type": "decimal",
						"precision": 15,
						"scale": 2
					},
					{
						"name": "LinkedPartsId",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Alternative",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Franchise",
						"type": "varchar"
					},
					{
						"name": "BookingLineNo",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Updated",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "UniqueID",
						"type": "int",
						"precision": 10
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "RTCRaw_InspectionvISParts_Merge"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/autolytica')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SQLRTCRaw_InspectionISTyrePrices')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "autolytica",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "GroupID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Id",
						"type": "int",
						"precision": 10
					},
					{
						"name": "ItemId",
						"type": "int",
						"precision": 10
					},
					{
						"name": "PricePointId",
						"type": "int",
						"precision": 10
					},
					{
						"name": "PartNo",
						"type": "varchar"
					},
					{
						"name": "Description",
						"type": "varchar"
					},
					{
						"name": "Price",
						"type": "decimal",
						"precision": 10,
						"scale": 6
					},
					{
						"name": "FuelEffRating",
						"type": "varchar"
					},
					{
						"name": "WetGripRating",
						"type": "varchar"
					},
					{
						"name": "NoiseRating",
						"type": "varchar"
					},
					{
						"name": "NoiseClass",
						"type": "varchar"
					},
					{
						"name": "Stock",
						"type": "decimal",
						"precision": 10,
						"scale": 2
					},
					{
						"name": "ThirdParty",
						"type": "varchar"
					},
					{
						"name": "Selected",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Unavail",
						"type": "int",
						"precision": 10
					},
					{
						"name": "LoadIndex",
						"type": "int",
						"precision": 10
					},
					{
						"name": "SpeedRating",
						"type": "varchar"
					},
					{
						"name": "OrderID",
						"type": "varchar"
					},
					{
						"name": "LineID",
						"type": "varchar"
					},
					{
						"name": "SiteID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "CostPrice",
						"type": "decimal",
						"precision": 10,
						"scale": 2
					},
					{
						"name": "Notes",
						"type": "varchar"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "RTCRaw_InspectionvISTyrePrices"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/autolytica')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SQLRTCRaw_InspectionVHCOutcome_Merge')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "autolytica",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "GroupID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "ID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "InUse",
						"type": "nvarchar"
					},
					{
						"name": "DealerID",
						"type": "nvarchar"
					},
					{
						"name": "Description",
						"type": "nvarchar"
					},
					{
						"name": "HCType",
						"type": "nvarchar"
					},
					{
						"name": "OutcomeType",
						"type": "nvarchar"
					},
					{
						"name": "ContactCode",
						"type": "nvarchar"
					},
					{
						"name": "Updated",
						"type": "datetime2",
						"scale": 7
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "RTCRaw_InspectionVHCOutcome_Merge"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/autolytica')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SQLRTCRaw_InspectionVHCType')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "autolytica",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "GroupID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "ID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "InUse",
						"type": "nvarchar"
					},
					{
						"name": "DealerID",
						"type": "nvarchar"
					},
					{
						"name": "Description",
						"type": "nvarchar"
					},
					{
						"name": "Updated",
						"type": "datetime2",
						"scale": 7
					},
					{
						"name": "UniqueID",
						"type": "int",
						"precision": 10
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "RTCRaw_InspectionVHCType"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/autolytica')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SQLRTCRaw_InspectionvISHeaders_Merge')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "autolytica",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "GroupID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Id",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Dealer",
						"type": "varchar"
					},
					{
						"name": "TypeId",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Booking",
						"type": "int",
						"precision": 10
					},
					{
						"name": "RegNo",
						"type": "varchar"
					},
					{
						"name": "VehDesc",
						"type": "varchar"
					},
					{
						"name": "Mileage",
						"type": "int",
						"precision": 10
					},
					{
						"name": "NextServ",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "NextMot",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "Created",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "Tech",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Advisor",
						"type": "int",
						"precision": 10
					},
					{
						"name": "hcType",
						"type": "int",
						"precision": 10
					},
					{
						"name": "InputStarted",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "InputCompleted",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "PartsIdentified",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "LabourIdentified",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "FollowUpCompleted",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "InspectionClosed",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "InspectionPrinted",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "PartsAssistance",
						"type": "int",
						"precision": 10
					},
					{
						"name": "InvoiceValue",
						"type": "decimal",
						"precision": 15,
						"scale": 2
					},
					{
						"name": "InUse",
						"type": "varchar"
					},
					{
						"name": "PartsRequired",
						"type": "varchar"
					},
					{
						"name": "Model",
						"type": "varchar"
					},
					{
						"name": "RegDate",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "JobNo",
						"type": "varchar"
					},
					{
						"name": "NotInspectedReason",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Franchise",
						"type": "varchar"
					},
					{
						"name": "DMSRef",
						"type": "int",
						"precision": 10
					},
					{
						"name": "VehNo",
						"type": "int",
						"precision": 10
					},
					{
						"name": "QualityControllerId",
						"type": "int",
						"precision": 10
					},
					{
						"name": "NewTyre",
						"type": "varchar"
					},
					{
						"name": "TyresIdentified",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "ExtStatus",
						"type": "int",
						"precision": 10
					},
					{
						"name": "ExtAccessed",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "ExtResponded",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "EventId",
						"type": "int",
						"precision": 10
					},
					{
						"name": "UniqueBookingID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "OriginalClosedDate",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "PreAgreedWorkValue",
						"type": "decimal",
						"precision": 15,
						"scale": 2
					},
					{
						"name": "Updated",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "UniqueID",
						"type": "int",
						"precision": 10
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "RTCRaw_InspectionvISHeaders_Merge"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/autolytica')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SQLRTCRaw_InspectionvISItems_Merge')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "autolytica",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "GroupID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Id",
						"type": "int",
						"precision": 10
					},
					{
						"name": "ItemId",
						"type": "int",
						"precision": 10
					},
					{
						"name": "SectionId",
						"type": "int",
						"precision": 10
					},
					{
						"name": "SubSectionId",
						"type": "int",
						"precision": 10
					},
					{
						"name": "OutcomeId",
						"type": "int",
						"precision": 10
					},
					{
						"name": "FollNum",
						"type": "int",
						"precision": 10
					},
					{
						"name": "FollDate",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "FollType",
						"type": "int",
						"precision": 10
					},
					{
						"name": "RAG",
						"type": "int",
						"precision": 10
					},
					{
						"name": "InnerId",
						"type": "int",
						"precision": 10
					},
					{
						"name": "MiddleId",
						"type": "int",
						"precision": 10
					},
					{
						"name": "OuterId",
						"type": "int",
						"precision": 10
					},
					{
						"name": "hcType",
						"type": "int",
						"precision": 10
					},
					{
						"name": "hcOutcome",
						"type": "int",
						"precision": 10
					},
					{
						"name": "NSInnerId",
						"type": "int",
						"precision": 10
					},
					{
						"name": "NSOuterId",
						"type": "int",
						"precision": 10
					},
					{
						"name": "OSInnerId",
						"type": "int",
						"precision": 10
					},
					{
						"name": "OSOuterId",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Details",
						"type": "varchar"
					},
					{
						"name": "Price",
						"type": "decimal",
						"precision": 15,
						"scale": 2
					},
					{
						"name": "PartsAssistance",
						"type": "bit"
					},
					{
						"name": "NoLabour",
						"type": "bit"
					},
					{
						"name": "NoParts",
						"type": "bit"
					},
					{
						"name": "NoPrice",
						"type": "bit"
					},
					{
						"name": "FixedPrice",
						"type": "bit"
					},
					{
						"name": "PartsPicked",
						"type": "bit"
					},
					{
						"name": "Completed",
						"type": "int",
						"precision": 10
					},
					{
						"name": "AuthorisedBy",
						"type": "varchar"
					},
					{
						"name": "AuthAdvisor",
						"type": "int",
						"precision": 10
					},
					{
						"name": "AuthDate",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "VideoStatus",
						"type": "int",
						"precision": 10
					},
					{
						"name": "SendVideo",
						"type": "bit"
					},
					{
						"name": "ExtOutcome",
						"type": "int",
						"precision": 10
					},
					{
						"name": "TechRAG",
						"type": "int",
						"precision": 10
					},
					{
						"name": "BookedContSeqNo",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Updated",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "RTCRaw_InspectionvISItems_Merge"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/autolytica')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SQLRTCRaw_InspectionvMediafile')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "autolytica",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "DealerGroupID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "InspectionID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "InspectionItemID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "FileType",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Dealer",
						"type": "varchar"
					},
					{
						"name": "DealerID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Complete",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Status",
						"type": "int",
						"precision": 10
					},
					{
						"name": "UniqueID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Updated",
						"type": "datetime2",
						"scale": 7
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "RTCRaw_InspectionvMediafile"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/autolytica')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SQLRTCRaw_LastUpdated')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "autolytica",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "TableName",
						"type": "varchar"
					},
					{
						"name": "LastUpdated",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "RTCRaw_LastUpdated"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/autolytica')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SQLRTCRaw_vBookingStatus')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "autolytica",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "GroupID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Dealer",
						"type": "nvarchar"
					},
					{
						"name": "Code",
						"type": "nvarchar"
					},
					{
						"name": "Description",
						"type": "nvarchar"
					},
					{
						"name": "BaseCode",
						"type": "nvarchar"
					},
					{
						"name": "Updated",
						"type": "datetime2",
						"scale": 7
					},
					{
						"name": "UniqueID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "InsertedDate",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "RTCRaw_BookingvBookingStatus"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/autolytica')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SQLRTCRaw_vGroup')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "autolytica",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "GroupID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "GroupName",
						"type": "varchar"
					},
					{
						"name": "Enabled",
						"type": "int",
						"precision": 10
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "RTCRaw_vGroup"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/autolytica')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SQLRTCRaw_vRepairCodes_Merge')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "autolytica",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "GroupID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Dealer",
						"type": "nvarchar"
					},
					{
						"name": "RepairCode",
						"type": "nvarchar"
					},
					{
						"name": "Text1",
						"type": "nvarchar"
					},
					{
						"name": "Text2",
						"type": "nvarchar"
					},
					{
						"name": "Text3",
						"type": "nvarchar"
					},
					{
						"name": "Text4",
						"type": "nvarchar"
					},
					{
						"name": "Text5",
						"type": "nvarchar"
					},
					{
						"name": "Text6",
						"type": "nvarchar"
					},
					{
						"name": "Allowed",
						"type": "decimal",
						"precision": 7,
						"scale": 2
					},
					{
						"name": "LabType",
						"type": "char"
					},
					{
						"name": "Price",
						"type": "decimal",
						"precision": 7,
						"scale": 2
					},
					{
						"name": "Service",
						"type": "char"
					},
					{
						"name": "isUpsell",
						"type": "bit"
					},
					{
						"name": "OnlineGroup",
						"type": "nvarchar"
					},
					{
						"name": "OnlineDescription",
						"type": "nvarchar"
					},
					{
						"name": "LinkedUpsellCode",
						"type": "varchar"
					},
					{
						"name": "AWS",
						"type": "bit"
					},
					{
						"name": "CSIContCode",
						"type": "varchar"
					},
					{
						"name": "VehicleVisualsPartId",
						"type": "nvarchar"
					},
					{
						"name": "Updated",
						"type": "datetime2",
						"scale": 7
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "RTCRaw_BookingvRepairCodes_Merge"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/autolytica')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SQLRTCVHCHeaders')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "autolytica",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "InspectionID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "RegionName",
						"type": "nvarchar"
					},
					{
						"name": "DealerCode",
						"type": "nvarchar"
					},
					{
						"name": "DealerName",
						"type": "nvarchar"
					},
					{
						"name": "ServiceAdvisor",
						"type": "nvarchar"
					},
					{
						"name": "Technician",
						"type": "nvarchar"
					},
					{
						"name": "CustomerName",
						"type": "nvarchar"
					},
					{
						"name": "VehicleRegistration",
						"type": "nvarchar"
					},
					{
						"name": "VehicleDescription",
						"type": "nvarchar"
					},
					{
						"name": "Franchise",
						"type": "nvarchar"
					},
					{
						"name": "VehicleModel",
						"type": "nvarchar"
					},
					{
						"name": "VehicleRegistrationDate",
						"type": "datetime2",
						"scale": 7
					},
					{
						"name": "WipNumber",
						"type": "int",
						"precision": 10
					},
					{
						"name": "InspectionType",
						"type": "nvarchar"
					},
					{
						"name": "InspectionMarque",
						"type": "nvarchar"
					},
					{
						"name": "VisitType",
						"type": "nvarchar"
					},
					{
						"name": "CustomerMileage",
						"type": "nvarchar"
					},
					{
						"name": "InspectionCreated",
						"type": "datetime2",
						"scale": 7
					},
					{
						"name": "TechnicianStartedInspection",
						"type": "datetime2",
						"scale": 7
					},
					{
						"name": "TechnicianFinishedInspection",
						"type": "datetime2",
						"scale": 7
					},
					{
						"name": "PartsIdentificationCompleted",
						"type": "datetime2",
						"scale": 7
					},
					{
						"name": "LabourIdentificationCompleted",
						"type": "datetime2",
						"scale": 7
					},
					{
						"name": "InspectionFormPrinted",
						"type": "datetime2",
						"scale": 7
					},
					{
						"name": "InspectionClosed",
						"type": "datetime2",
						"scale": 7
					},
					{
						"name": "Year",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Month",
						"type": "nvarchar"
					},
					{
						"name": "InspectionCarriedOut",
						"type": "nvarchar"
					},
					{
						"name": "TotalItemsIdentified",
						"type": "decimal",
						"precision": 18,
						"scale": 10
					},
					{
						"name": "TotalValueIdentified",
						"type": "float",
						"precision": 15
					},
					{
						"name": "TotalItemsSold",
						"type": "float",
						"precision": 15
					},
					{
						"name": "TotalValueSold",
						"type": "float",
						"precision": 15
					},
					{
						"name": "TotalItemsLost",
						"type": "float",
						"precision": 15
					},
					{
						"name": "TotalValueLost",
						"type": "float",
						"precision": 15
					},
					{
						"name": "TotalItemsDeferred",
						"type": "float",
						"precision": 15
					},
					{
						"name": "TotalValueDeferred",
						"type": "float",
						"precision": 15
					},
					{
						"name": "RedTotalItemsIdentified",
						"type": "float",
						"precision": 15
					},
					{
						"name": "RedTotalValueIdentified",
						"type": "float",
						"precision": 15
					},
					{
						"name": "RedTotalItemsSold",
						"type": "float",
						"precision": 15
					},
					{
						"name": "RedTotalValueSold",
						"type": "float",
						"precision": 15
					},
					{
						"name": "RedTotalItemsLost",
						"type": "float",
						"precision": 15
					},
					{
						"name": "RedTotalValueLost",
						"type": "float",
						"precision": 15
					},
					{
						"name": "RedTotalItemsDeferred",
						"type": "float",
						"precision": 15
					},
					{
						"name": "RedTotalValueDeferred",
						"type": "float",
						"precision": 15
					},
					{
						"name": "AmberTotalItemsIdentified",
						"type": "float",
						"precision": 15
					},
					{
						"name": "AmberTotalValueIdentified",
						"type": "float",
						"precision": 15
					},
					{
						"name": "AmberTotalItemsSold",
						"type": "float",
						"precision": 15
					},
					{
						"name": "AmberTotalValueSold",
						"type": "float",
						"precision": 15
					},
					{
						"name": "AmberTotalItemsLost",
						"type": "float",
						"precision": 15
					},
					{
						"name": "AmberTotalValueLost",
						"type": "float",
						"precision": 15
					},
					{
						"name": "AmberTotalItemsDeferred",
						"type": "float",
						"precision": 15
					},
					{
						"name": "AmberTotalValueDeferred",
						"type": "float",
						"precision": 15
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "VHCHeaders"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/autolytica')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SQLUnleashedCustomers')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "autolytica",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "UniqueID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Client ID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Customer Code",
						"type": "varchar"
					},
					{
						"name": "Name",
						"type": "varchar"
					},
					{
						"name": "Country",
						"type": "varchar"
					},
					{
						"name": "Postcode",
						"type": "varchar"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "UnleashedCustomers"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/autolytica')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SQLUnleashedInvoiceItems')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "autolytica",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "UniqueID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Client ID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Line Number",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Invoice Number",
						"type": "varchar"
					},
					{
						"name": "Product Code",
						"type": "varchar"
					},
					{
						"name": "Order Quantity",
						"type": "decimal",
						"precision": 18,
						"scale": 4
					},
					{
						"name": "Invoice Quantity",
						"type": "decimal",
						"precision": 18,
						"scale": 4
					},
					{
						"name": "Unit Price",
						"type": "decimal",
						"precision": 18,
						"scale": 4
					},
					{
						"name": "Discount Rate",
						"type": "decimal",
						"precision": 18,
						"scale": 4
					},
					{
						"name": "Line Total",
						"type": "decimal",
						"precision": 18,
						"scale": 4
					},
					{
						"name": "Tax Rate",
						"type": "decimal",
						"precision": 18,
						"scale": 4
					},
					{
						"name": "Line Tax",
						"type": "decimal",
						"precision": 18,
						"scale": 4
					},
					{
						"name": "BCUnitPrice",
						"type": "decimal",
						"precision": 18,
						"scale": 4
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "UnleashedInvoiceItems"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/autolytica')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SQLUnleashedInvoices')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "autolytica",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "UniqueID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Client ID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Invoice Number",
						"type": "varchar"
					},
					{
						"name": "Order Number",
						"type": "varchar"
					},
					{
						"name": "Invoice Date",
						"type": "varchar"
					},
					{
						"name": "Customer Code",
						"type": "varchar"
					},
					{
						"name": "Currency ID",
						"type": "int",
						"precision": 10
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "UnleashedInvoices_Merge"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/autolytica')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SQLUnleashedProductGroups')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "autolytica",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "UniqueID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Client ID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Group Name",
						"type": "varchar"
					},
					{
						"name": "GUID",
						"type": "varchar"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "UnleashedProductGroups"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/autolytica')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SQLUnleashedProducts')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "autolytica",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "UniqueID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Client ID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Product Code",
						"type": "varchar"
					},
					{
						"name": "Product Description",
						"type": "varchar"
					},
					{
						"name": "Product Group",
						"type": "varchar"
					},
					{
						"name": "Country Name",
						"type": "varchar"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "UnleashedProducts"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/autolytica')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SQLUnleashedSalesOrderLines')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "autolytica",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "UniqueID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Client ID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Line Number",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Product Code",
						"type": "varchar"
					},
					{
						"name": "Order Quantity",
						"type": "decimal",
						"precision": 18,
						"scale": 4
					},
					{
						"name": "Unit Price",
						"type": "decimal",
						"precision": 18,
						"scale": 4
					},
					{
						"name": "Discount Rate",
						"type": "decimal",
						"precision": 18,
						"scale": 4
					},
					{
						"name": "Line Total",
						"type": "decimal",
						"precision": 18,
						"scale": 4
					},
					{
						"name": "Average Cost",
						"type": "decimal",
						"precision": 18,
						"scale": 4
					},
					{
						"name": "Tax Rate",
						"type": "decimal",
						"precision": 18,
						"scale": 4
					},
					{
						"name": "Line Tax",
						"type": "decimal",
						"precision": 18,
						"scale": 4
					},
					{
						"name": "BC Unit Price",
						"type": "decimal",
						"precision": 18,
						"scale": 4
					},
					{
						"name": "GUID",
						"type": "decimal",
						"precision": 18,
						"scale": 4
					},
					{
						"name": "Order Number",
						"type": "varchar"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "UnleashedSalesOrderLines"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/autolytica')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SQLUnleashedSalesOrders')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "autolytica",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "UniqueID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Client ID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Order Number",
						"type": "varchar"
					},
					{
						"name": "Order Date",
						"type": "varchar"
					},
					{
						"name": "Required Date",
						"type": "varchar"
					},
					{
						"name": "Completed Date",
						"type": "varchar"
					},
					{
						"name": "Order Status",
						"type": "varchar"
					},
					{
						"name": "Customer Code",
						"type": "varchar"
					},
					{
						"name": "Currency ID",
						"type": "varchar"
					},
					{
						"name": "Sales Person Name",
						"type": "varchar"
					},
					{
						"name": "Sales Person GUID",
						"type": "varchar"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "UnleashedSalesOrders_merge"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/autolytica')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SQLUnleashedStock')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "autolytica",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "UniqueID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Client ID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Product Code",
						"type": "varchar"
					},
					{
						"name": "Product Description",
						"type": "varchar"
					},
					{
						"name": "Product Group Name",
						"type": "varchar"
					},
					{
						"name": "Days Since Last Sale",
						"type": "int",
						"precision": 10
					},
					{
						"name": "On Purchase",
						"type": "decimal",
						"precision": 18,
						"scale": 4
					},
					{
						"name": "Allocated Quantity",
						"type": "decimal",
						"precision": 18,
						"scale": 4
					},
					{
						"name": "Available Quantity",
						"type": "decimal",
						"precision": 18,
						"scale": 4
					},
					{
						"name": "Quantity on Hand",
						"type": "decimal",
						"precision": 18,
						"scale": 4
					},
					{
						"name": "Average Cost",
						"type": "decimal",
						"precision": 18,
						"scale": 4
					},
					{
						"name": "Total Cost",
						"type": "decimal",
						"precision": 18,
						"scale": 4
					},
					{
						"name": "GUID",
						"type": "varchar"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "UnleashedStock"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/autolytica')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SQLVehicleStock')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "autolytica",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "ClientID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "DealershipID",
						"type": "nvarchar"
					},
					{
						"name": "Type",
						"type": "nvarchar"
					},
					{
						"name": "RegistrationNo",
						"type": "nvarchar"
					},
					{
						"name": "StockNo",
						"type": "nvarchar"
					},
					{
						"name": "GroupDateInStock",
						"type": "date"
					},
					{
						"name": "DealershipDateInStock",
						"type": "date"
					},
					{
						"name": "Status",
						"type": "nvarchar"
					},
					{
						"name": "NewOrUsed",
						"type": "nvarchar"
					},
					{
						"name": "Chassis",
						"type": "nvarchar"
					},
					{
						"name": "FirstRegisteredDate",
						"type": "date"
					},
					{
						"name": "Make",
						"type": "nvarchar"
					},
					{
						"name": "Model",
						"type": "nvarchar"
					},
					{
						"name": "Derivative",
						"type": "nvarchar"
					},
					{
						"name": "Trim",
						"type": "nvarchar"
					},
					{
						"name": "EngineSize",
						"type": "nvarchar"
					},
					{
						"name": "Bodystyle",
						"type": "nvarchar"
					},
					{
						"name": "Mileage",
						"type": "int",
						"precision": 10
					},
					{
						"name": "FuelType",
						"type": "nvarchar"
					},
					{
						"name": "Transmission",
						"type": "nvarchar"
					},
					{
						"name": "GenericColour",
						"type": "nvarchar"
					},
					{
						"name": "SpecificColour",
						"type": "nvarchar"
					},
					{
						"name": "Doors",
						"type": "int",
						"precision": 10
					},
					{
						"name": "SIV",
						"type": "float",
						"precision": 15
					},
					{
						"name": "Vat",
						"type": "nvarchar"
					},
					{
						"name": "Source",
						"type": "nvarchar"
					},
					{
						"name": "ModelAnalysisCode",
						"type": "nvarchar"
					},
					{
						"name": "RetailPrice",
						"type": "float",
						"precision": 15
					},
					{
						"name": "Purchaser",
						"type": "nvarchar"
					},
					{
						"name": "SupplierName",
						"type": "nvarchar"
					},
					{
						"name": "PurchaseInvoiceDate",
						"type": "date"
					},
					{
						"name": "AvailableDate",
						"type": "date"
					},
					{
						"name": "ProgressCode",
						"type": "nvarchar"
					},
					{
						"name": "Recon",
						"type": "float",
						"precision": 15
					},
					{
						"name": "TransportCosts",
						"type": "float",
						"precision": 15
					},
					{
						"name": "AdjustedSIV",
						"type": "float",
						"precision": 15
					},
					{
						"name": "ReceivedDate",
						"type": "date"
					},
					{
						"name": "DateInGroup",
						"type": "date"
					},
					{
						"name": "PurchaseAccount",
						"type": "varchar"
					},
					{
						"name": "QuarantineStatus",
						"type": "varchar"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "VehicleStock"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/autolytica')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SQLVehicleWorkshopPrep')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "autolytica",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "ClientID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "DealershipID",
						"type": "varchar"
					},
					{
						"name": "VehicleID",
						"type": "varchar"
					},
					{
						"name": "RegistrationNo",
						"type": "varchar"
					},
					{
						"name": "VehicleDescription",
						"type": "varchar"
					},
					{
						"name": "EstimatedCost",
						"type": "float",
						"precision": 15
					},
					{
						"name": "ActualCost",
						"type": "float",
						"precision": 15
					},
					{
						"name": "LineCreatedDate",
						"type": "date"
					},
					{
						"name": "PushedDate",
						"type": "date"
					},
					{
						"name": "OrderDate",
						"type": "date"
					},
					{
						"name": "WIPNo",
						"type": "varchar"
					},
					{
						"name": "OptionCode",
						"type": "varchar"
					},
					{
						"name": "WorkDescription",
						"type": "varchar"
					},
					{
						"name": "ProgressCode",
						"type": "varchar"
					},
					{
						"name": "AccountStatus",
						"type": "varchar"
					},
					{
						"name": "QuarantineStatus",
						"type": "varchar"
					},
					{
						"name": "LogBook",
						"type": "varchar"
					},
					{
						"name": "VehicleInvoiceDate",
						"type": "date"
					},
					{
						"name": "VehicleDeliveryDate",
						"type": "date"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "VehicleWorkshopPrep"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/autolytica')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SQLWebStockFeed')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "autolytica",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "ClientID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Dealership",
						"type": "nvarchar"
					},
					{
						"name": "FeedID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "VehicleID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "StockNumber",
						"type": "nchar"
					},
					{
						"name": "VehicleType",
						"type": "nchar"
					},
					{
						"name": "RegistrationNumber",
						"type": "varchar"
					},
					{
						"name": "ChassisNumber",
						"type": "nvarchar"
					},
					{
						"name": "EngineNumber",
						"type": "nvarchar"
					},
					{
						"name": "Colour",
						"type": "varchar"
					},
					{
						"name": "SpecificPaintColour",
						"type": "nvarchar"
					},
					{
						"name": "FuelType",
						"type": "varchar"
					},
					{
						"name": "TrimColour",
						"type": "nvarchar"
					},
					{
						"name": "TrimType",
						"type": "nvarchar"
					},
					{
						"name": "RegistrationDate",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "Year",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Mileage",
						"type": "int",
						"precision": 10
					},
					{
						"name": "MileageType",
						"type": "nvarchar"
					},
					{
						"name": "BodyStyle",
						"type": "varchar"
					},
					{
						"name": "Doors",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Make",
						"type": "varchar"
					},
					{
						"name": "Model",
						"type": "varchar"
					},
					{
						"name": "Derivative",
						"type": "varchar"
					},
					{
						"name": "Range",
						"type": "varchar"
					},
					{
						"name": "EngineSize",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Price",
						"type": "decimal",
						"precision": 15,
						"scale": 2
					},
					{
						"name": "Transmission",
						"type": "varchar"
					},
					{
						"name": "PictureRefs",
						"type": "varchar"
					},
					{
						"name": "ServiceHistory",
						"type": "varchar"
					},
					{
						"name": "PreviousOwners",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Approved",
						"type": "nvarchar"
					},
					{
						"name": "WarrantyLevel",
						"type": "nvarchar"
					},
					{
						"name": "FullVehicleCheck",
						"type": "nvarchar"
					},
					{
						"name": "MultiPointInspection",
						"type": "nvarchar"
					},
					{
						"name": "BranchPurchaseDate",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "GroupPurchaseDate",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "StockStatus",
						"type": "nvarchar"
					},
					{
						"name": "VehicleStatus",
						"type": "nvarchar"
					},
					{
						"name": "AvailableDate",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "ReadyToGo",
						"type": "nvarchar"
					},
					{
						"name": "HeadOfficeStock",
						"type": "nvarchar"
					},
					{
						"name": "PurchasePrice",
						"type": "decimal",
						"precision": 18,
						"scale": 2
					},
					{
						"name": "StockValue",
						"type": "decimal",
						"precision": 18,
						"scale": 2
					},
					{
						"name": "ReconditioningDFA",
						"type": "decimal",
						"precision": 18,
						"scale": 2
					},
					{
						"name": "DeliveryCost",
						"type": "decimal",
						"precision": 18,
						"scale": 2
					},
					{
						"name": "RetailPrice",
						"type": "decimal",
						"precision": 18,
						"scale": 2
					},
					{
						"name": "DeliveryRetailPrice",
						"type": "decimal",
						"precision": 18,
						"scale": 2
					},
					{
						"name": "ReducedPrice",
						"type": "decimal",
						"precision": 18,
						"scale": 2
					},
					{
						"name": "IDAAmount",
						"type": "decimal",
						"precision": 18,
						"scale": 2
					},
					{
						"name": "TrackerNumber",
						"type": "nvarchar"
					},
					{
						"name": "Category",
						"type": "varchar"
					},
					{
						"name": "HouseCharge",
						"type": "varchar"
					},
					{
						"name": "CO2",
						"type": "varchar"
					},
					{
						"name": "Status",
						"type": "varchar"
					},
					{
						"name": "IsVisible",
						"type": "varchar"
					},
					{
						"name": "CreatedDate",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "UpdatedDate",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "LastUpdatedBy",
						"type": "varchar"
					},
					{
						"name": "SentToWeb",
						"type": "varchar"
					},
					{
						"name": "Seats",
						"type": "varchar"
					},
					{
						"name": "TaxBand",
						"type": "varchar"
					},
					{
						"name": "AutotraderBanner",
						"type": "varchar"
					},
					{
						"name": "MilesPerGallon",
						"type": "varchar"
					},
					{
						"name": "InsuranceGroup",
						"type": "varchar"
					},
					{
						"name": "Removed",
						"type": "varchar"
					},
					{
						"name": "DateRemoved",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "ActualRegistrationNumber",
						"type": "varchar"
					},
					{
						"name": "Quarantine",
						"type": "varchar"
					},
					{
						"name": "YouTubeVideo",
						"type": "varchar"
					},
					{
						"name": "NumberOfImages",
						"type": "int",
						"precision": 10
					},
					{
						"name": "NewOrUsed",
						"type": "varchar"
					},
					{
						"name": "Demo",
						"type": "nchar"
					},
					{
						"name": "VATStatus",
						"type": "nchar"
					},
					{
						"name": "TradePrice",
						"type": "decimal",
						"precision": 15,
						"scale": 2
					},
					{
						"name": "CapID",
						"type": "nvarchar"
					},
					{
						"name": "FullCapCode",
						"type": "nvarchar"
					},
					{
						"name": "VideoURL",
						"type": "varchar"
					},
					{
						"name": "InsertedDate",
						"type": "date"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "WebStockFeed"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/autolytica')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SQLWebStockFeed_Merge')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "autolytica",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "ClientID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Dealership",
						"type": "nvarchar"
					},
					{
						"name": "FeedID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "VehicleID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "StockNumber",
						"type": "nchar"
					},
					{
						"name": "VehicleType",
						"type": "nchar"
					},
					{
						"name": "RegistrationNumber",
						"type": "varchar"
					},
					{
						"name": "ChassisNumber",
						"type": "nvarchar"
					},
					{
						"name": "EngineNumber",
						"type": "nvarchar"
					},
					{
						"name": "Colour",
						"type": "varchar"
					},
					{
						"name": "SpecificPaintColour",
						"type": "nvarchar"
					},
					{
						"name": "FuelType",
						"type": "varchar"
					},
					{
						"name": "TrimColour",
						"type": "nvarchar"
					},
					{
						"name": "TrimType",
						"type": "nvarchar"
					},
					{
						"name": "RegistrationDate",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "Year",
						"type": "nchar"
					},
					{
						"name": "Mileage",
						"type": "int",
						"precision": 10
					},
					{
						"name": "MileageType",
						"type": "nvarchar"
					},
					{
						"name": "BodyStyle",
						"type": "varchar"
					},
					{
						"name": "Doors",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Make",
						"type": "varchar"
					},
					{
						"name": "Model",
						"type": "varchar"
					},
					{
						"name": "Derivative",
						"type": "varchar"
					},
					{
						"name": "Range",
						"type": "varchar"
					},
					{
						"name": "EngineSize",
						"type": "nchar"
					},
					{
						"name": "Price",
						"type": "decimal",
						"precision": 15,
						"scale": 2
					},
					{
						"name": "Transmission",
						"type": "varchar"
					},
					{
						"name": "PictureRefs",
						"type": "varchar"
					},
					{
						"name": "ServiceHistory",
						"type": "varchar"
					},
					{
						"name": "PreviousOwners",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Approved",
						"type": "nvarchar"
					},
					{
						"name": "WarrantyLevel",
						"type": "nvarchar"
					},
					{
						"name": "FullVehicleCheck",
						"type": "nvarchar"
					},
					{
						"name": "MultiPointInspection",
						"type": "nvarchar"
					},
					{
						"name": "BranchPurchaseDate",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "GroupPurchaseDate",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "StockStatus",
						"type": "nvarchar"
					},
					{
						"name": "VehicleStatus",
						"type": "nvarchar"
					},
					{
						"name": "AvailableDate",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "ReadyToGo",
						"type": "nvarchar"
					},
					{
						"name": "HeadOfficeStock",
						"type": "nvarchar"
					},
					{
						"name": "PurchasePrice",
						"type": "decimal",
						"precision": 18,
						"scale": 2
					},
					{
						"name": "StockValue",
						"type": "decimal",
						"precision": 18,
						"scale": 2
					},
					{
						"name": "ReconditioningDFA",
						"type": "decimal",
						"precision": 18,
						"scale": 2
					},
					{
						"name": "DeliveryCost",
						"type": "decimal",
						"precision": 18,
						"scale": 2
					},
					{
						"name": "RetailPrice",
						"type": "decimal",
						"precision": 18,
						"scale": 2
					},
					{
						"name": "DeliveryRetailPrice",
						"type": "decimal",
						"precision": 18,
						"scale": 2
					},
					{
						"name": "ReducedPrice",
						"type": "decimal",
						"precision": 18,
						"scale": 2
					},
					{
						"name": "IDAAmount",
						"type": "decimal",
						"precision": 18,
						"scale": 2
					},
					{
						"name": "TrackerNumber",
						"type": "nvarchar"
					},
					{
						"name": "Category",
						"type": "varchar"
					},
					{
						"name": "HouseCharge",
						"type": "varchar"
					},
					{
						"name": "CO2",
						"type": "varchar"
					},
					{
						"name": "Status",
						"type": "varchar"
					},
					{
						"name": "IsVisible",
						"type": "varchar"
					},
					{
						"name": "CreatedDate",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "UpdatedDate",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "LastUpdatedBy",
						"type": "varchar"
					},
					{
						"name": "SentToWeb",
						"type": "varchar"
					},
					{
						"name": "Seats",
						"type": "varchar"
					},
					{
						"name": "TaxBand",
						"type": "varchar"
					},
					{
						"name": "AutotraderBanner",
						"type": "varchar"
					},
					{
						"name": "MilesPerGallon",
						"type": "varchar"
					},
					{
						"name": "InsuranceGroup",
						"type": "varchar"
					},
					{
						"name": "Removed",
						"type": "varchar"
					},
					{
						"name": "DateRemoved",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "ActualRegistrationNumber",
						"type": "varchar"
					},
					{
						"name": "Quarantine",
						"type": "varchar"
					},
					{
						"name": "YouTubeVideo",
						"type": "varchar"
					},
					{
						"name": "NumberOfImages",
						"type": "int",
						"precision": 10
					},
					{
						"name": "NewOrUsed",
						"type": "varchar"
					},
					{
						"name": "Demo",
						"type": "nvarchar"
					},
					{
						"name": "VATStatus",
						"type": "nvarchar"
					},
					{
						"name": "TradePrice",
						"type": "decimal",
						"precision": 15,
						"scale": 2
					},
					{
						"name": "CapID",
						"type": "nvarchar"
					},
					{
						"name": "FullCapCode",
						"type": "nvarchar"
					},
					{
						"name": "VideoURL",
						"type": "varchar"
					},
					{
						"name": "InsertedDate",
						"type": "date"
					},
					{
						"name": "DateSentToWeb",
						"type": "date"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "WebStockFeed_Merge"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/autolytica')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/TableCounts')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "autolytica",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "TableID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "CountOfRows",
						"type": "int",
						"precision": 10
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "TableCounts"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/autolytica')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/UnleashedCustomersJSON')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AutolyticaBlobStorage",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Json",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "Customers-temp.json",
						"container": "unleashed"
					}
				},
				"schema": {
					"type": "object",
					"properties": {
						"Pagination": {
							"type": "object",
							"properties": {
								"NumberOfItems": {
									"type": "integer"
								},
								"PageSize": {
									"type": "integer"
								},
								"PageNumber": {
									"type": "integer"
								},
								"NumberOfPages": {
									"type": "integer"
								}
							}
						},
						"Items": {
							"type": "array",
							"items": {
								"type": "object",
								"properties": {
									"Addresses": {
										"type": "array",
										"items": {
											"type": "object",
											"properties": {
												"AddressType": {
													"type": "string"
												},
												"AddressName": {
													"type": "string"
												},
												"StreetAddress": {
													"type": "string"
												},
												"StreetAddress2": {
													"type": "string"
												},
												"Suburb": {
													"type": "string"
												},
												"City": {
													"type": "null"
												},
												"Region": {
													"type": "string"
												},
												"Country": {
													"type": "string"
												},
												"PostalCode": {
													"type": "null"
												},
												"IsDefault": {
													"type": "boolean"
												},
												"DeliveryInstruction": {
													"type": "null"
												}
											}
										}
									},
									"TaxCode": {
										"type": "string"
									},
									"TaxRate": {
										"type": "null"
									},
									"CustomerCode": {
										"type": "string"
									},
									"CustomerName": {
										"type": "string"
									},
									"GSTVATNumber": {
										"type": "null"
									},
									"BankName": {
										"type": "null"
									},
									"BankBranch": {
										"type": "null"
									},
									"BankAccount": {
										"type": "null"
									},
									"Website": {
										"type": "null"
									},
									"PhoneNumber": {
										"type": "null"
									},
									"FaxNumber": {
										"type": "null"
									},
									"MobileNumber": {
										"type": "null"
									},
									"DDINumber": {
										"type": "null"
									},
									"TollFreeNumber": {
										"type": "null"
									},
									"Email": {
										"type": "null"
									},
									"EmailCC": {
										"type": "null"
									},
									"Currency": {
										"type": "object",
										"properties": {
											"CurrencyCode": {
												"type": "string"
											},
											"Description": {
												"type": "string"
											},
											"Guid": {
												"type": "string"
											},
											"LastModifiedOn": {
												"type": "string"
											}
										}
									},
									"Notes": {
										"type": "null"
									},
									"Taxable": {
										"type": "boolean"
									},
									"XeroContactId": {
										"type": "string"
									},
									"SalesPerson": {
										"type": "null"
									},
									"DiscountRate": {
										"type": "number"
									},
									"PrintPackingSlipInsteadOfInvoice": {
										"type": "boolean"
									},
									"PrintInvoice": {
										"type": "boolean"
									},
									"StopCredit": {
										"type": "boolean"
									},
									"Obsolete": {
										"type": "boolean"
									},
									"XeroSalesAccount": {
										"type": "string"
									},
									"XeroCostOfGoodsAccount": {
										"type": "null"
									},
									"SellPriceTier": {
										"type": "string"
									},
									"SellPriceTierReference": {
										"type": "null"
									},
									"CustomerType": {
										"type": "string"
									},
									"PaymentTerm": {
										"type": "string"
									},
									"ContactFirstName": {
										"type": "string"
									},
									"ContactLastName": {
										"type": "string"
									},
									"SourceId": {
										"type": "null"
									},
									"CreatedBy": {
										"type": "string"
									},
									"CreatedOn": {
										"type": "string"
									},
									"LastModifiedBy": {
										"type": "string"
									},
									"Guid": {
										"type": "string"
									},
									"LastModifiedOn": {
										"type": "string"
									}
								}
							}
						}
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AutolyticaBlobStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/UnleashedInvoices')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AutolyticaBlobStorage",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Json",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "Invoices-1.json",
						"container": "unleashed"
					}
				},
				"schema": {
					"type": "object",
					"properties": {
						"Pagination": {
							"type": "object",
							"properties": {
								"NumberOfItems": {
									"type": "integer"
								},
								"PageSize": {
									"type": "integer"
								},
								"PageNumber": {
									"type": "integer"
								},
								"NumberOfPages": {
									"type": "integer"
								}
							}
						},
						"Items": {
							"type": "array",
							"items": {
								"type": "object",
								"properties": {
									"InvoiceNumber": {
										"type": "string"
									},
									"OrderNumber": {
										"type": "string"
									},
									"QuoteNumber": {
										"type": "null"
									},
									"InvoiceDate": {
										"type": "string"
									},
									"DueDate": {
										"type": "string"
									},
									"InvoiceStatus": {
										"type": "string"
									},
									"Customer": {
										"type": "object",
										"properties": {
											"CustomerCode": {
												"type": "string"
											},
											"CustomerName": {
												"type": "string"
											},
											"CurrencyId": {
												"type": "integer"
											},
											"Guid": {
												"type": "string"
											},
											"LastModifiedOn": {
												"type": "string"
											}
										}
									},
									"Comments": {
										"type": "null"
									},
									"PostalAddress": {
										"type": "object",
										"properties": {
											"AddressType": {
												"type": "null"
											},
											"AddressName": {
												"type": "string"
											},
											"StreetAddress": {
												"type": "string"
											},
											"StreetAddress2": {
												"type": "null"
											},
											"Suburb": {
												"type": "null"
											},
											"City": {
												"type": "string"
											},
											"Region": {
												"type": "string"
											},
											"Country": {
												"type": "string"
											},
											"PostalCode": {
												"type": "string"
											},
											"IsDefault": {
												"type": "boolean"
											},
											"DeliveryInstruction": {
												"type": "null"
											}
										}
									},
									"DeliveryAddress": {
										"type": "object",
										"properties": {
											"AddressType": {
												"type": "null"
											},
											"AddressName": {
												"type": "string"
											},
											"StreetAddress": {
												"type": "string"
											},
											"StreetAddress2": {
												"type": "null"
											},
											"Suburb": {
												"type": "null"
											},
											"City": {
												"type": "string"
											},
											"Region": {
												"type": "string"
											},
											"Country": {
												"type": "string"
											},
											"PostalCode": {
												"type": "string"
											},
											"IsDefault": {
												"type": "boolean"
											},
											"DeliveryInstruction": {
												"type": "null"
											}
										}
									},
									"DeliveryInstruction": {
										"type": "null"
									},
									"SubTotal": {
										"type": "number"
									},
									"TaxTotal": {
										"type": "number"
									},
									"Total": {
										"type": "number"
									},
									"BCSubTotal": {
										"type": "number"
									},
									"BCTaxTotal": {
										"type": "number"
									},
									"BCTotal": {
										"type": "number"
									},
									"CreatedBy": {
										"type": "string"
									},
									"PaymentTerm": {
										"type": "null"
									},
									"InvoiceLines": {
										"type": "array",
										"items": {
											"type": "object",
											"properties": {
												"LineNumber": {
													"type": "integer"
												},
												"LineType": {
													"type": "null"
												},
												"Product": {
													"type": "object",
													"properties": {
														"Guid": {
															"type": "string"
														},
														"ProductCode": {
															"type": "string"
														},
														"ProductDescription": {
															"type": "string"
														}
													}
												},
												"OrderQuantity": {
													"type": "number"
												},
												"InvoiceQuantity": {
													"type": "number"
												},
												"UnitPrice": {
													"type": "number"
												},
												"DiscountRate": {
													"type": "number"
												},
												"LineTotal": {
													"type": "number"
												},
												"Comments": {
													"type": "string"
												},
												"TaxRate": {
													"type": "number"
												},
												"LineTax": {
													"type": "number"
												},
												"BCUnitPrice": {
													"type": "number"
												},
												"SerialNumbers": {
													"type": "null"
												},
												"BatchNumbers": {
													"type": "null"
												},
												"Guid": {
													"type": "string"
												},
												"LastModifiedOn": {
													"type": "string"
												}
											}
										}
									},
									"Guid": {
										"type": "string"
									},
									"LastModifiedOn": {
										"type": "string"
									}
								}
							}
						}
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AutolyticaBlobStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/UnleashedInvoicesJSON')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AutolyticaBlobStorage",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Json",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "Invoices-1.json",
						"container": "unleashed"
					}
				},
				"schema": {
					"type": "object",
					"properties": {
						"Pagination": {
							"type": "object",
							"properties": {
								"NumberOfItems": {
									"type": "integer"
								},
								"PageSize": {
									"type": "integer"
								},
								"PageNumber": {
									"type": "integer"
								},
								"NumberOfPages": {
									"type": "integer"
								}
							}
						},
						"Items": {
							"type": "array",
							"items": {
								"type": "object",
								"properties": {
									"InvoiceNumber": {
										"type": "string"
									},
									"OrderNumber": {
										"type": "string"
									},
									"QuoteNumber": {
										"type": "null"
									},
									"InvoiceDate": {
										"type": "string"
									},
									"DueDate": {
										"type": "string"
									},
									"InvoiceStatus": {
										"type": "string"
									},
									"Customer": {
										"type": "object",
										"properties": {
											"CustomerCode": {
												"type": "string"
											},
											"CustomerName": {
												"type": "string"
											},
											"CurrencyId": {
												"type": "integer"
											},
											"Guid": {
												"type": "string"
											},
											"LastModifiedOn": {
												"type": "string"
											}
										}
									},
									"Comments": {
										"type": "null"
									},
									"PostalAddress": {
										"type": "object",
										"properties": {
											"AddressType": {
												"type": "null"
											},
											"AddressName": {
												"type": "string"
											},
											"StreetAddress": {
												"type": "string"
											},
											"StreetAddress2": {
												"type": "null"
											},
											"Suburb": {
												"type": "null"
											},
											"City": {
												"type": "string"
											},
											"Region": {
												"type": "string"
											},
											"Country": {
												"type": "string"
											},
											"PostalCode": {
												"type": "string"
											},
											"IsDefault": {
												"type": "boolean"
											},
											"DeliveryInstruction": {
												"type": "null"
											}
										}
									},
									"DeliveryAddress": {
										"type": "object",
										"properties": {
											"AddressType": {
												"type": "null"
											},
											"AddressName": {
												"type": "string"
											},
											"StreetAddress": {
												"type": "string"
											},
											"StreetAddress2": {
												"type": "null"
											},
											"Suburb": {
												"type": "null"
											},
											"City": {
												"type": "string"
											},
											"Region": {
												"type": "string"
											},
											"Country": {
												"type": "string"
											},
											"PostalCode": {
												"type": "string"
											},
											"IsDefault": {
												"type": "boolean"
											},
											"DeliveryInstruction": {
												"type": "null"
											}
										}
									},
									"DeliveryInstruction": {
										"type": "null"
									},
									"SubTotal": {
										"type": "number"
									},
									"TaxTotal": {
										"type": "number"
									},
									"Total": {
										"type": "number"
									},
									"BCSubTotal": {
										"type": "number"
									},
									"BCTaxTotal": {
										"type": "number"
									},
									"BCTotal": {
										"type": "number"
									},
									"CreatedBy": {
										"type": "string"
									},
									"PaymentTerm": {
										"type": "null"
									},
									"InvoiceLines": {
										"type": "array",
										"items": {
											"type": "object",
											"properties": {
												"LineNumber": {
													"type": "integer"
												},
												"LineType": {
													"type": "null"
												},
												"Product": {
													"type": "object",
													"properties": {
														"Guid": {
															"type": "string"
														},
														"ProductCode": {
															"type": "string"
														},
														"ProductDescription": {
															"type": "string"
														}
													}
												},
												"OrderQuantity": {
													"type": "number"
												},
												"InvoiceQuantity": {
													"type": "number"
												},
												"UnitPrice": {
													"type": "number"
												},
												"DiscountRate": {
													"type": "number"
												},
												"LineTotal": {
													"type": "number"
												},
												"Comments": {
													"type": "string"
												},
												"TaxRate": {
													"type": "number"
												},
												"LineTax": {
													"type": "number"
												},
												"BCUnitPrice": {
													"type": "number"
												},
												"SerialNumbers": {
													"type": "null"
												},
												"BatchNumbers": {
													"type": "null"
												},
												"Guid": {
													"type": "string"
												},
												"LastModifiedOn": {
													"type": "string"
												}
											}
										}
									},
									"Guid": {
										"type": "string"
									},
									"LastModifiedOn": {
										"type": "string"
									}
								}
							}
						}
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AutolyticaBlobStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/UnleashedProductGroupsJSON')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AutolyticaBlobStorage",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Json",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "ProductGroups.json",
						"container": "unleashed"
					}
				},
				"schema": {
					"type": "object",
					"properties": {
						"Items": {
							"type": "array",
							"items": {
								"type": "object",
								"properties": {
									"GroupName": {
										"type": "string"
									},
									"Guid": {
										"type": "string"
									},
									"LastModifiedOn": {
										"type": "string"
									}
								}
							}
						}
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AutolyticaBlobStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/UnleashedProductsJSON')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AutolyticaBlobStorage",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Json",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "Products temp.json",
						"container": "unleashed"
					}
				},
				"schema": {
					"type": "object",
					"properties": {
						"Pagination": {
							"type": "object",
							"properties": {
								"NumberOfItems": {
									"type": "integer"
								},
								"PageSize": {
									"type": "integer"
								},
								"PageNumber": {
									"type": "integer"
								},
								"NumberOfPages": {
									"type": "integer"
								}
							}
						},
						"Items": {
							"type": "array",
							"items": {
								"type": "object",
								"properties": {
									"ProductCode": {
										"type": "string"
									},
									"ProductDescription": {
										"type": "string"
									},
									"Barcode": {
										"type": "null"
									},
									"PackSize": {
										"type": "null"
									},
									"Width": {
										"type": "null"
									},
									"Height": {
										"type": "null"
									},
									"Depth": {
										"type": "null"
									},
									"Weight": {
										"type": "number"
									},
									"MinStockAlertLevel": {
										"type": "null"
									},
									"MaxStockAlertLevel": {
										"type": "null"
									},
									"ReOrderPoint": {
										"type": "null"
									},
									"UnitOfMeasure": {
										"type": "null"
									},
									"NeverDiminishing": {
										"type": "boolean"
									},
									"LastCost": {
										"type": "number"
									},
									"DefaultPurchasePrice": {
										"type": "null"
									},
									"DefaultSellPrice": {
										"type": "null"
									},
									"CustomerSellPrice": {
										"type": "null"
									},
									"AverageLandPrice": {
										"type": "number"
									},
									"Obsolete": {
										"type": "boolean"
									},
									"Notes": {
										"type": "null"
									},
									"Images": {
										"type": "null"
									},
									"ImageUrl": {
										"type": "null"
									},
									"SellPriceTier1": {
										"type": "object",
										"properties": {
											"Name": {
												"type": "string"
											},
											"Value": {
												"type": "string"
											}
										}
									},
									"SellPriceTier2": {
										"type": "object",
										"properties": {
											"Name": {
												"type": "string"
											},
											"Value": {
												"type": "null"
											}
										}
									},
									"SellPriceTier3": {
										"type": "object",
										"properties": {
											"Name": {
												"type": "string"
											},
											"Value": {
												"type": "null"
											}
										}
									},
									"SellPriceTier4": {
										"type": "object",
										"properties": {
											"Name": {
												"type": "string"
											},
											"Value": {
												"type": "null"
											}
										}
									},
									"SellPriceTier5": {
										"type": "object",
										"properties": {
											"Name": {
												"type": "string"
											},
											"Value": {
												"type": "null"
											}
										}
									},
									"SellPriceTier6": {
										"type": "object",
										"properties": {
											"Name": {
												"type": "string"
											},
											"Value": {
												"type": "null"
											}
										}
									},
									"SellPriceTier7": {
										"type": "object",
										"properties": {
											"Name": {
												"type": "string"
											},
											"Value": {
												"type": "null"
											}
										}
									},
									"SellPriceTier8": {
										"type": "object",
										"properties": {
											"Name": {
												"type": "string"
											},
											"Value": {
												"type": "null"
											}
										}
									},
									"SellPriceTier9": {
										"type": "object",
										"properties": {
											"Name": {
												"type": "string"
											},
											"Value": {
												"type": "null"
											}
										}
									},
									"SellPriceTier10": {
										"type": "object",
										"properties": {
											"Name": {
												"type": "string"
											},
											"Value": {
												"type": "null"
											}
										}
									},
									"XeroTaxCode": {
										"type": "null"
									},
									"XeroTaxRate": {
										"type": "null"
									},
									"TaxablePurchase": {
										"type": "boolean"
									},
									"TaxableSales": {
										"type": "boolean"
									},
									"XeroSalesTaxCode": {
										"type": "null"
									},
									"XeroSalesTaxRate": {
										"type": "null"
									},
									"IsComponent": {
										"type": "boolean"
									},
									"IsAssembledProduct": {
										"type": "boolean"
									},
									"ProductGroup": {
										"type": "object",
										"properties": {
											"GroupName": {
												"type": "string"
											},
											"Guid": {
												"type": "string"
											},
											"LastModifiedOn": {
												"type": "string"
											}
										}
									},
									"XeroSalesAccount": {
										"type": "null"
									},
									"XeroCostOfGoodsAccount": {
										"type": "null"
									},
									"PurchaseAccount": {
										"type": "null"
									},
									"BinLocation": {
										"type": "null"
									},
									"Supplier": {
										"type": "null"
									},
									"AttributeSet": {
										"type": "null"
									},
									"SourceId": {
										"type": "null"
									},
									"SourceVariantParentId": {
										"type": "null"
									},
									"IsSerialized": {
										"type": "boolean"
									},
									"IsBatchTracked": {
										"type": "boolean"
									},
									"IsSellable": {
										"type": "boolean"
									},
									"MinimumSellPrice": {
										"type": "null"
									},
									"MinimumSaleQuantity": {
										"type": "null"
									},
									"MinimumOrderQuantity": {
										"type": "null"
									},
									"CreatedBy": {
										"type": "string"
									},
									"CreatedOn": {
										"type": "string"
									},
									"LastModifiedBy": {
										"type": "string"
									},
									"CommerceCode": {
										"type": "null"
									},
									"CustomsDescription": {
										"type": "null"
									},
									"SupplementaryClassificationAbbreviation": {
										"type": "null"
									},
									"ICCCountryCode": {
										"type": "null"
									},
									"ICCCountryName": {
										"type": "null"
									},
									"Guid": {
										"type": "string"
									},
									"LastModifiedOn": {
										"type": "string"
									}
								}
							}
						}
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AutolyticaBlobStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/UnleashedSalesOrdersJSON')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AutolyticaBlobStorage",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Json",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "SalesOrders-2.json",
						"container": "unleashed"
					}
				},
				"schema": {
					"type": "object",
					"properties": {
						"Pagination": {
							"type": "object",
							"properties": {
								"NumberOfItems": {
									"type": "integer"
								},
								"PageSize": {
									"type": "integer"
								},
								"PageNumber": {
									"type": "integer"
								},
								"NumberOfPages": {
									"type": "integer"
								}
							}
						},
						"Items": {
							"type": "array",
							"items": {
								"type": "object",
								"properties": {
									"SalesOrderLines": {
										"type": "array",
										"items": {
											"type": "object",
											"properties": {
												"LineNumber": {
													"type": "integer"
												},
												"LineType": {
													"type": "null"
												},
												"Product": {
													"type": "object",
													"properties": {
														"Guid": {
															"type": "string"
														},
														"ProductCode": {
															"type": "string"
														},
														"ProductDescription": {
															"type": "string"
														}
													}
												},
												"DueDate": {
													"type": "string"
												},
												"OrderQuantity": {
													"type": "number"
												},
												"UnitPrice": {
													"type": "number"
												},
												"DiscountRate": {
													"type": "number"
												},
												"LineTotal": {
													"type": "number"
												},
												"Volume": {
													"type": "null"
												},
												"Weight": {
													"type": "number"
												},
												"Comments": {
													"type": "string"
												},
												"AverageLandedPriceAtTimeOfSale": {
													"type": "number"
												},
												"TaxRate": {
													"type": "number"
												},
												"LineTax": {
													"type": "number"
												},
												"XeroTaxCode": {
													"type": "string"
												},
												"BCUnitPrice": {
													"type": "number"
												},
												"BCLineTotal": {
													"type": "number"
												},
												"BCLineTax": {
													"type": "number"
												},
												"LineTaxCode": {
													"type": "null"
												},
												"XeroSalesAccount": {
													"type": "string"
												},
												"SerialNumbers": {
													"type": "null"
												},
												"BatchNumbers": {
													"type": "null"
												},
												"Guid": {
													"type": "string"
												},
												"LastModifiedOn": {
													"type": "string"
												}
											}
										}
									},
									"OrderNumber": {
										"type": "string"
									},
									"OrderDate": {
										"type": "string"
									},
									"RequiredDate": {
										"type": "string"
									},
									"CompletedDate": {
										"type": "string"
									},
									"OrderStatus": {
										"type": "string"
									},
									"Customer": {
										"type": "object",
										"properties": {
											"CustomerCode": {
												"type": "string"
											},
											"CustomerName": {
												"type": "string"
											},
											"CurrencyId": {
												"type": "integer"
											},
											"Guid": {
												"type": "string"
											},
											"LastModifiedOn": {
												"type": "string"
											}
										}
									},
									"CustomerRef": {
										"type": "string"
									},
									"Comments": {
										"type": "null"
									},
									"Warehouse": {
										"type": "object",
										"properties": {
											"WarehouseCode": {
												"type": "string"
											},
											"WarehouseName": {
												"type": "string"
											},
											"IsDefault": {
												"type": "boolean"
											},
											"StreetNo": {
												"type": "null"
											},
											"AddressLine1": {
												"type": "null"
											},
											"AddressLine2": {
												"type": "null"
											},
											"Suburb": {
												"type": "null"
											},
											"City": {
												"type": "null"
											},
											"Region": {
												"type": "null"
											},
											"Country": {
												"type": "null"
											},
											"PostCode": {
												"type": "null"
											},
											"PhoneNumber": {
												"type": "null"
											},
											"FaxNumber": {
												"type": "null"
											},
											"MobileNumber": {
												"type": "null"
											},
											"DDINumber": {
												"type": "null"
											},
											"ContactName": {
												"type": "string"
											},
											"Obsolete": {
												"type": "boolean"
											},
											"Guid": {
												"type": "string"
											},
											"LastModifiedOn": {
												"type": "string"
											}
										}
									},
									"ReceivedDate": {
										"type": "null"
									},
									"DeliveryInstruction": {
										"type": "null"
									},
									"DeliveryName": {
										"type": "null"
									},
									"DeliveryStreetAddress": {
										"type": "null"
									},
									"DeliveryStreetAddress2": {
										"type": "null"
									},
									"DeliverySuburb": {
										"type": "null"
									},
									"DeliveryCity": {
										"type": "null"
									},
									"DeliveryRegion": {
										"type": "null"
									},
									"DeliveryCountry": {
										"type": "null"
									},
									"DeliveryPostCode": {
										"type": "null"
									},
									"Currency": {
										"type": "object",
										"properties": {
											"CurrencyCode": {
												"type": "string"
											},
											"Description": {
												"type": "string"
											},
											"Guid": {
												"type": "string"
											},
											"LastModifiedOn": {
												"type": "string"
											}
										}
									},
									"ExchangeRate": {
										"type": "number"
									},
									"DiscountRate": {
										"type": "number"
									},
									"Tax": {
										"type": "object",
										"properties": {
											"TaxCode": {
												"type": "string"
											},
											"Description": {
												"type": "null"
											},
											"TaxRate": {
												"type": "number"
											},
											"CanApplyToExpenses": {
												"type": "boolean"
											},
											"CanApplyToRevenue": {
												"type": "boolean"
											},
											"Obsolete": {
												"type": "boolean"
											},
											"Guid": {
												"type": "string"
											},
											"LastModifiedOn": {
												"type": "null"
											}
										}
									},
									"TaxRate": {
										"type": "number"
									},
									"XeroTaxCode": {
										"type": "string"
									},
									"SubTotal": {
										"type": "number"
									},
									"TaxTotal": {
										"type": "number"
									},
									"Total": {
										"type": "number"
									},
									"TotalVolume": {
										"type": "number"
									},
									"TotalWeight": {
										"type": "number"
									},
									"BCSubTotal": {
										"type": "number"
									},
									"BCTaxTotal": {
										"type": "number"
									},
									"BCTotal": {
										"type": "number"
									},
									"PaymentDueDate": {
										"type": "string"
									},
									"AllocateProduct": {
										"type": "boolean"
									},
									"SalesOrderGroup": {
										"type": "null"
									},
									"DeliveryMethod": {
										"type": "null"
									},
									"SalesPerson": {
										"type": "object",
										"properties": {
											"FullName": {
												"type": "string"
											},
											"Email": {
												"type": "string"
											},
											"Obsolete": {
												"type": "boolean"
											},
											"Guid": {
												"type": "string"
											},
											"LastModifiedOn": {
												"type": "string"
											}
										}
									},
									"SendAccountingJournalOnly": {
										"type": "boolean"
									},
									"SourceId": {
										"type": "null"
									},
									"CreatedBy": {
										"type": "string"
									},
									"CreatedOn": {
										"type": "string"
									},
									"LastModifiedBy": {
										"type": "string"
									},
									"Guid": {
										"type": "string"
									},
									"LastModifiedOn": {
										"type": "string"
									}
								}
							}
						}
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AutolyticaBlobStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/UnleashedStockOnHandJSON')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AutolyticaBlobStorage",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Json",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "StockOnHand-1.json",
						"container": "unleashed"
					}
				},
				"schema": {
					"type": "object",
					"properties": {
						"Pagination": {
							"type": "object",
							"properties": {
								"NumberOfItems": {
									"type": "integer"
								},
								"PageSize": {
									"type": "integer"
								},
								"PageNumber": {
									"type": "integer"
								},
								"NumberOfPages": {
									"type": "integer"
								}
							}
						},
						"Items": {
							"type": "array",
							"items": {
								"type": "object",
								"properties": {
									"ProductCode": {
										"type": "string"
									},
									"ProductDescription": {
										"type": "string"
									},
									"ProductGuid": {
										"type": "string"
									},
									"ProductSourceId": {
										"type": "null"
									},
									"ProductGroupName": {
										"type": "string"
									},
									"WarehouseId": {
										"type": "string"
									},
									"Warehouse": {
										"type": "string"
									},
									"WarehouseCode": {
										"type": "string"
									},
									"DaysSinceLastSale": {
										"type": "integer"
									},
									"OnPurchase": {
										"type": "number"
									},
									"AllocatedQty": {
										"type": "number"
									},
									"AvailableQty": {
										"type": "number"
									},
									"QtyOnHand": {
										"type": "number"
									},
									"AvgCost": {
										"type": "number"
									},
									"TotalCost": {
										"type": "number"
									},
									"Guid": {
										"type": "string"
									},
									"LastModifiedOn": {
										"type": "string"
									}
								}
							}
						}
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AutolyticaBlobStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/VHCHeaders')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "VHCHeadersCSV",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "HttpServerLocation"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"quoteChar": "\""
				},
				"schema": [
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/VHCHeadersCSV')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/VHCHeadersFromAzureBlob')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AutolyticaBlobStorage",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "VHCHeaders.csv",
						"container": "rtc"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"type": "String"
					},
					{
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AutolyticaBlobStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/VehicleStockCSV')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "Autolyticaftp",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "SftpLocation",
						"folderPath": "/Analytics Data Feeds"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "Client ID",
						"type": "String"
					},
					{
						"name": "Dealer ID",
						"type": "String"
					},
					{
						"name": "Vehicle Type",
						"type": "String"
					},
					{
						"name": "Registration Number",
						"type": "String"
					},
					{
						"name": "Stock Number",
						"type": "String"
					},
					{
						"name": "Group Date in Stock",
						"type": "String"
					},
					{
						"name": "Dealership Date In Stock",
						"type": "String"
					},
					{
						"name": "Status",
						"type": "String"
					},
					{
						"name": "New Or Used",
						"type": "String"
					},
					{
						"name": "Chassis",
						"type": "String"
					},
					{
						"name": "Registration Date",
						"type": "String"
					},
					{
						"name": "Make",
						"type": "String"
					},
					{
						"name": "Model",
						"type": "String"
					},
					{
						"name": "Derivative",
						"type": "String"
					},
					{
						"name": "Trim",
						"type": "String"
					},
					{
						"name": "Engine Size",
						"type": "String"
					},
					{
						"name": "Bodystyle",
						"type": "String"
					},
					{
						"name": "Odometer",
						"type": "String"
					},
					{
						"name": "Odometer Type",
						"type": "String"
					},
					{
						"name": "FuelType",
						"type": "String"
					},
					{
						"name": "Transmission",
						"type": "String"
					},
					{
						"name": "Generic Colour",
						"type": "String"
					},
					{
						"name": "Doors",
						"type": "String"
					},
					{
						"name": "Stock Value",
						"type": "String"
					},
					{
						"name": "Vat",
						"type": "String"
					},
					{
						"name": "Source",
						"type": "String"
					},
					{
						"name": "Vehicle Category Code",
						"type": "String"
					},
					{
						"name": "Retail Price",
						"type": "String"
					},
					{
						"name": "Purchaser ID",
						"type": "String"
					},
					{
						"name": "Supplier",
						"type": "String"
					},
					{
						"name": "Group Purchase Date",
						"type": "String"
					},
					{
						"name": "Available Date",
						"type": "String"
					},
					{
						"name": "Progress Code",
						"type": "String"
					},
					{
						"name": "Reconditioning",
						"type": "String"
					},
					{
						"name": "Transport Costs",
						"type": "String"
					},
					{
						"name": "Adjusted Stock Value",
						"type": "String"
					},
					{
						"name": "Received Date",
						"type": "String"
					},
					{
						"name": "Purchase Account",
						"type": "String"
					},
					{
						"name": "Quarantine Status",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/Autolyticaftp')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AutolyticaBlobProd')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Main production blob storage",
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"connectionString": "[parameters('AutolyticaBlobProd_connectionString')]",
					"accountKey": {
						"type": "AzureKeyVaultSecret",
						"store": {
							"referenceName": "AutolyticaKeyVault",
							"type": "LinkedServiceReference"
						},
						"secretName": "BlobStorage-autolyticaprod"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AutolyticaKeyVault')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AutolyticaBlobStorage')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"connectionString": "[parameters('AutolyticaBlobStorage_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AutolyticaKeyVault')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureKeyVault",
				"typeProperties": {
					"baseUrl": "[parameters('AutolyticaKeyVault_properties_typeProperties_baseUrl')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Autolyticaftp')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "Sftp",
				"typeProperties": {
					"host": "[parameters('Autolyticaftp_properties_typeProperties_host')]",
					"port": 22,
					"skipHostKeyValidation": true,
					"authenticationType": "Basic",
					"userName": "[parameters('Autolyticaftp_properties_typeProperties_userName')]",
					"password": {
						"type": "SecureString",
						"value": "[parameters('Autolyticaftp_password')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/RTCDatabase')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"connectionString": "[parameters('RTCDatabase_connectionString')]",
					"password": {
						"type": "AzureKeyVaultSecret",
						"store": {
							"referenceName": "AutolyticaKeyVault",
							"type": "LinkedServiceReference"
						},
						"secretName": "SQLRTCSecret-autolyticapassword"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AutolyticaKeyVault')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/RTCVHC')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "HttpServer",
				"typeProperties": {
					"url": "[parameters('RTCVHC_properties_typeProperties_url')]",
					"enableServerCertificateValidation": true,
					"authenticationType": "Windows",
					"userName": "[parameters('RTCVHC_properties_typeProperties_userName')]",
					"password": {
						"type": "SecureString",
						"value": "[parameters('RTCVHC_password')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/VHCHeadersCSV')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "HttpServer",
				"typeProperties": {
					"url": "[parameters('VHCHeadersCSV_properties_typeProperties_url')]",
					"enableServerCertificateValidation": false,
					"authenticationType": "Windows",
					"userName": "[parameters('VHCHeadersCSV_properties_typeProperties_userName')]",
					"password": {
						"type": "SecureString",
						"value": "[parameters('VHCHeadersCSV_password')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/VHCHeadersCSVFile')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "FileServer",
				"typeProperties": {
					"host": "[parameters('VHCHeadersCSVFile_properties_typeProperties_host')]",
					"userId": "[parameters('VHCHeadersCSVFile_properties_typeProperties_userId')]",
					"password": {
						"type": "SecureString",
						"value": "[parameters('VHCHeadersCSVFile_password')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/VehicleStockCSV')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "HttpServer",
				"typeProperties": {
					"url": "[parameters('VehicleStockCSV_properties_typeProperties_url')]",
					"enableServerCertificateValidation": false,
					"authenticationType": "Basic",
					"userName": "[parameters('VehicleStockCSV_properties_typeProperties_userName')]",
					"password": {
						"type": "SecureString",
						"value": "[parameters('VehicleStockCSV_password')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/autolytica')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"connectionString": "[parameters('autolytica_connectionString')]",
					"password": {
						"type": "AzureKeyVaultSecret",
						"store": {
							"referenceName": "AutolyticaKeyVault",
							"type": "LinkedServiceReference"
						},
						"secretName": "SQLAutolyticaSecret-autolyticapassword"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AutolyticaKeyVault')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/enquiryMAX')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "HttpServer",
				"typeProperties": {
					"url": "[parameters('enquiryMAX_properties_typeProperties_url')]",
					"enableServerCertificateValidation": true,
					"authenticationType": "Basic",
					"userName": "[parameters('enquiryMAX_properties_typeProperties_userName')]",
					"password": {
						"type": "SecureString",
						"value": "[parameters('enquiryMAX_password')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Daily 5am')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Started",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "AutotraderImport-JSON",
							"type": "PipelineReference"
						},
						"parameters": {}
					},
					{
						"pipelineReference": {
							"referenceName": "RTCVHCInspectionVHCOutcome",
							"type": "PipelineReference"
						},
						"parameters": {}
					},
					{
						"pipelineReference": {
							"referenceName": "ImportUnleashed",
							"type": "PipelineReference"
						},
						"parameters": {}
					}
				],
				"type": "ScheduleTrigger",
				"typeProperties": {
					"recurrence": {
						"frequency": "Day",
						"interval": 1,
						"startTime": "2020-12-31T12:49:00Z",
						"timeZone": "UTC",
						"schedule": {
							"hours": [
								5
							]
						}
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/AutotraderImport-JSON')]",
				"[concat(variables('factoryId'), '/pipelines/RTCVHCInspectionVHCOutcome')]",
				"[concat(variables('factoryId'), '/pipelines/ImportUnleashed')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Daily 6am')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Started",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "PeterVardyPartsSales",
							"type": "PipelineReference"
						},
						"parameters": {}
					},
					{
						"pipelineReference": {
							"referenceName": "PeterVardyDMSPartsStock",
							"type": "PipelineReference"
						},
						"parameters": {}
					}
				],
				"type": "ScheduleTrigger",
				"typeProperties": {
					"recurrence": {
						"frequency": "Day",
						"interval": 1,
						"startTime": "2021-04-02T10:14:00Z",
						"timeZone": "UTC",
						"schedule": {
							"hours": [
								6
							]
						}
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/PeterVardyPartsSales')]",
				"[concat(variables('factoryId'), '/pipelines/PeterVardyDMSPartsStock')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Daily')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Started",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "RTCVHCInspectionISHeaders",
							"type": "PipelineReference"
						},
						"parameters": {}
					},
					{
						"pipelineReference": {
							"referenceName": "RTCVHCInspectionISItems",
							"type": "PipelineReference"
						},
						"parameters": {}
					},
					{
						"pipelineReference": {
							"referenceName": "RTCVHCInspectionISLabour",
							"type": "PipelineReference"
						},
						"parameters": {}
					},
					{
						"pipelineReference": {
							"referenceName": "RTCVHCInspectionISParts",
							"type": "PipelineReference"
						},
						"parameters": {}
					},
					{
						"pipelineReference": {
							"referenceName": "RTCCTCContactvContactsParms",
							"type": "PipelineReference"
						},
						"parameters": {}
					},
					{
						"pipelineReference": {
							"referenceName": "RTCCTCContactvContactTypes",
							"type": "PipelineReference"
						},
						"parameters": {}
					},
					{
						"pipelineReference": {
							"referenceName": "RTCCTCGroupvLogFile",
							"type": "PipelineReference"
						},
						"parameters": {}
					},
					{
						"pipelineReference": {
							"referenceName": "RTCCTCContactvContacts",
							"type": "PipelineReference"
						},
						"parameters": {}
					},
					{
						"pipelineReference": {
							"referenceName": "RTCCTCvBookingStatus",
							"type": "PipelineReference"
						},
						"parameters": {}
					},
					{
						"pipelineReference": {
							"referenceName": "PeterVardySOBI1",
							"type": "PipelineReference"
						},
						"parameters": {}
					},
					{
						"pipelineReference": {
							"referenceName": "PeterVardyClocking",
							"type": "PipelineReference"
						},
						"parameters": {}
					},
					{
						"pipelineReference": {
							"referenceName": "RTCCTCGroupvAgents",
							"type": "PipelineReference"
						},
						"parameters": {}
					},
					{
						"pipelineReference": {
							"referenceName": "RTCCTCBookingvUpsells",
							"type": "PipelineReference"
						},
						"parameters": {}
					},
					{
						"pipelineReference": {
							"referenceName": "RTCCTCBookingvUpsellLog",
							"type": "PipelineReference"
						},
						"parameters": {}
					},
					{
						"pipelineReference": {
							"referenceName": "EMAXEnquiryActivity",
							"type": "PipelineReference"
						},
						"parameters": {}
					},
					{
						"pipelineReference": {
							"referenceName": "PeterVardyDMSEmployee",
							"type": "PipelineReference"
						},
						"parameters": {}
					},
					{
						"pipelineReference": {
							"referenceName": "PeterVardyDMSCustomer",
							"type": "PipelineReference"
						},
						"parameters": {}
					},
					{
						"pipelineReference": {
							"referenceName": "RTCCTCInspectionvMediaFile",
							"type": "PipelineReference"
						},
						"parameters": {}
					}
				],
				"type": "ScheduleTrigger",
				"typeProperties": {
					"recurrence": {
						"frequency": "Day",
						"interval": 1,
						"startTime": "2020-07-19T16:29:00Z",
						"timeZone": "UTC",
						"schedule": {
							"hours": [
								2
							]
						}
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/RTCVHCInspectionISHeaders')]",
				"[concat(variables('factoryId'), '/pipelines/RTCVHCInspectionISItems')]",
				"[concat(variables('factoryId'), '/pipelines/RTCVHCInspectionISLabour')]",
				"[concat(variables('factoryId'), '/pipelines/RTCVHCInspectionISParts')]",
				"[concat(variables('factoryId'), '/pipelines/RTCCTCContactvContactsParms')]",
				"[concat(variables('factoryId'), '/pipelines/RTCCTCContactvContactTypes')]",
				"[concat(variables('factoryId'), '/pipelines/RTCCTCGroupvLogFile')]",
				"[concat(variables('factoryId'), '/pipelines/RTCCTCContactvContacts')]",
				"[concat(variables('factoryId'), '/pipelines/RTCCTCvBookingStatus')]",
				"[concat(variables('factoryId'), '/pipelines/PeterVardySOBI1')]",
				"[concat(variables('factoryId'), '/pipelines/PeterVardyClocking')]",
				"[concat(variables('factoryId'), '/pipelines/RTCCTCGroupvAgents')]",
				"[concat(variables('factoryId'), '/pipelines/RTCCTCBookingvUpsells')]",
				"[concat(variables('factoryId'), '/pipelines/RTCCTCBookingvUpsellLog')]",
				"[concat(variables('factoryId'), '/pipelines/EMAXEnquiryActivity')]",
				"[concat(variables('factoryId'), '/pipelines/PeterVardyDMSEmployee')]",
				"[concat(variables('factoryId'), '/pipelines/PeterVardyDMSCustomer')]",
				"[concat(variables('factoryId'), '/pipelines/RTCCTCInspectionvMediaFile')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PeterVardySOBI1CreatedInBlobStorage')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Stopped",
				"pipelines": [],
				"type": "BlobEventsTrigger",
				"typeProperties": {
					"blobPathBeginsWith": "/peter-vardy/blobs/",
					"blobPathEndsWith": "SOBI1.csv",
					"ignoreEmptyBlobs": true,
					"scope": "[parameters('PeterVardySOBI1CreatedInBlobStorage_properties_typeProperties_scope')]",
					"events": [
						"Microsoft.Storage.BlobCreated"
					]
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/UpdatePeterVardyWebStockFeed')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Started",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "PeterVardyWebStockFeed",
							"type": "PipelineReference"
						},
						"parameters": {}
					}
				],
				"type": "ScheduleTrigger",
				"typeProperties": {
					"recurrence": {
						"frequency": "Day",
						"interval": 1,
						"startTime": "2020-07-06T05:00:00Z",
						"timeZone": "UTC",
						"schedule": {
							"minutes": [
								0
							],
							"hours": [
								5
							]
						}
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/PeterVardyWebStockFeed')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/VHCHeadersCreatedInBlobStorage')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Stopped",
				"pipelines": [],
				"type": "ScheduleTrigger",
				"typeProperties": {
					"recurrence": {
						"frequency": "Day",
						"interval": 1,
						"startTime": "2020-04-25T21:27:00Z",
						"timeZone": "UTC",
						"schedule": {
							"minutes": [
								0
							],
							"hours": [
								0,
								7
							]
						}
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/WeekendTrigger')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Started",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "RTCVHCEmployees",
							"type": "PipelineReference"
						},
						"parameters": {}
					},
					{
						"pipelineReference": {
							"referenceName": "RTCVHCGroupExtStatus",
							"type": "PipelineReference"
						},
						"parameters": {}
					},
					{
						"pipelineReference": {
							"referenceName": "RTCVHCGroupISSections",
							"type": "PipelineReference"
						},
						"parameters": {}
					},
					{
						"pipelineReference": {
							"referenceName": "RTCVHCGroupISSubSections",
							"type": "PipelineReference"
						},
						"parameters": {}
					},
					{
						"pipelineReference": {
							"referenceName": "RTCVHCInspectionISCheckTypes",
							"type": "PipelineReference"
						},
						"parameters": {}
					},
					{
						"pipelineReference": {
							"referenceName": "RTCVHCInspectionVHCType",
							"type": "PipelineReference"
						},
						"parameters": {}
					},
					{
						"pipelineReference": {
							"referenceName": "RTCVHCvGroup",
							"type": "PipelineReference"
						},
						"parameters": {}
					},
					{
						"pipelineReference": {
							"referenceName": "RTCVHCDealers",
							"type": "PipelineReference"
						},
						"parameters": {}
					},
					{
						"pipelineReference": {
							"referenceName": "RTCGroupvDealerRegions",
							"type": "PipelineReference"
						},
						"parameters": {}
					},
					{
						"pipelineReference": {
							"referenceName": "RTCCTCBookingvUpsellDeclinedReasons",
							"type": "PipelineReference"
						},
						"parameters": {}
					},
					{
						"pipelineReference": {
							"referenceName": "PeterVardyDetailedSales_Older",
							"type": "PipelineReference"
						},
						"parameters": {}
					}
				],
				"type": "ScheduleTrigger",
				"typeProperties": {
					"recurrence": {
						"frequency": "Week",
						"interval": 1,
						"startTime": "2020-07-19T14:23:00Z",
						"timeZone": "UTC",
						"schedule": {
							"hours": [
								5
							],
							"weekDays": [
								"Sunday"
							]
						}
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/RTCVHCEmployees')]",
				"[concat(variables('factoryId'), '/pipelines/RTCVHCGroupExtStatus')]",
				"[concat(variables('factoryId'), '/pipelines/RTCVHCGroupISSections')]",
				"[concat(variables('factoryId'), '/pipelines/RTCVHCGroupISSubSections')]",
				"[concat(variables('factoryId'), '/pipelines/RTCVHCInspectionISCheckTypes')]",
				"[concat(variables('factoryId'), '/pipelines/RTCVHCInspectionVHCType')]",
				"[concat(variables('factoryId'), '/pipelines/RTCVHCvGroup')]",
				"[concat(variables('factoryId'), '/pipelines/RTCVHCDealers')]",
				"[concat(variables('factoryId'), '/pipelines/RTCGroupvDealerRegions')]",
				"[concat(variables('factoryId'), '/pipelines/RTCCTCBookingvUpsellDeclinedReasons')]",
				"[concat(variables('factoryId'), '/pipelines/PeterVardyDetailedSales_Older')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/trigger1PeterVardySOBI2CreatedInBlobStorage')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Stopped",
				"pipelines": [],
				"type": "BlobEventsTrigger",
				"typeProperties": {
					"blobPathBeginsWith": "/peter-vardy/blobs/",
					"blobPathEndsWith": "SOBI2.csv",
					"ignoreEmptyBlobs": true,
					"scope": "[parameters('trigger1PeterVardySOBI2CreatedInBlobStorage_properties_typeProperties_scope')]",
					"events": [
						"Microsoft.Storage.BlobCreated"
					]
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AutotraderJSONDataFlow')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "AutotraderJSON",
								"type": "DatasetReference"
							},
							"name": "AutotraderJSON"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "SQLAutotraderLocalRetailerRatings",
								"type": "DatasetReference"
							},
							"name": "SQLAutotraderLocalRetailerRatings"
						},
						{
							"dataset": {
								"referenceName": "SQLAutotraderAdvert",
								"type": "DatasetReference"
							},
							"name": "SQLAutotraderAdverts"
						},
						{
							"dataset": {
								"referenceName": "SQLAutotraderValuations",
								"type": "DatasetReference"
							},
							"name": "SQLAutotraderValuations"
						},
						{
							"dataset": {
								"referenceName": "SQLAutotraderMarketSupply",
								"type": "DatasetReference"
							},
							"name": "SQLAutotraderMarketSupply"
						},
						{
							"dataset": {
								"referenceName": "SQLAutotraderCompetitors",
								"type": "DatasetReference"
							},
							"name": "SQLAutotraderCompetitors"
						}
					],
					"transformations": [
						{
							"name": "LocalRetailerRatings"
						},
						{
							"name": "Competitors"
						}
					],
					"script": "source(output(\n\t\tOriginalInformation as (RecordID as string, RegNo as string, StockNo as string),\n\t\tinformation as (derivative as string, make as string, model as string, owners as string, plate as string, year as string, attentionGrabber as string, advertText as string),\n\t\tadvert as (responseMetrics as (performanceRating as (score as string, rating as string), yesterday as (advertViews as string, searchViews as string), lastWeek as (advertViews as string, searchViews as string)), advertUrl as string, source as string),\n\t\tvaluations as (marketAverageGuidePrice as (trade as (amountGBP as double), retail as (amountGBP as double), partExchange as (amountGBP as double)), adjustedGuidePrice as (trade as (amountGBP as double), retail as (amountGBP as double), partExchange as (amountGBP as double), priceIndicator as string, priceIndicatorV2 as string)),\n\t\tretailMetrics as (liveMarketCondition as string, marketSupply as string, buyerDemand as string, dealerMetrics as (dealerId as string, dealerName as string, localRetailRating as string, localDaysToSell as string)[]),\n\t\tcompetitors as (totalResultCount as string, filters as (filterExclusions as string[], includeWriteOffCategoryVehicles as boolean, segment as string, fuelType as string, distance as string, plateMin as string, plateMax as string, mileageMin as string, mileageMax as string, engineSize as string, colour as string, bodyType as string, postcode as string, taxRate as string, doors as string, driveTrain as string, trim as string, transmission as string), competitorAdverts as (registration as string, make as string, model as string, derivative as string, mileage as string, year as string, plate as string, colour as string, insuranceWriteOffCategory as string, taxRate as string, owners as string, bodyType as string, fuel as string, transmission as string, seller as (name as string, town as string, segment as string), atMetrics as (pricePosition as double), atAdvertUrl as string, attentionGrabber as string, daysInStock as string, mainImage as string, advertText as string, price as double, priceIndicator as string, priceIndicatorV2 as string)[])\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false,\n\tdocumentForm: 'documentPerLine') ~> AutotraderJSON\nAutotraderJSON foldDown(unroll(retailMetrics.dealerMetrics),\n\tmapColumn(\n\t\tOriginalInformation,\n\t\tdealerMetrics = retailMetrics.dealerMetrics\n\t),\n\tskipDuplicateMapInputs: false,\n\tskipDuplicateMapOutputs: false) ~> LocalRetailerRatings\nAutotraderJSON foldDown(unroll(competitors.competitorAdverts),\n\tmapColumn(\n\t\tOriginalInformation,\n\t\tAds = competitors.competitorAdverts,\n\t\tsellername = competitors.competitorAdverts.seller.name,\n\t\tsellertown = competitors.competitorAdverts.seller.town,\n\t\tsellersegment = competitors.competitorAdverts.seller.segment,\n\t\tpricePosition = competitors.competitorAdverts.atMetrics.pricePosition\n\t),\n\tskipDuplicateMapInputs: false,\n\tskipDuplicateMapOutputs: false) ~> Competitors\nLocalRetailerRatings sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tinput(\n\t\tDate as timestamp,\n\t\tDealerID as integer,\n\t\tDealerName as string,\n\t\tID as long,\n\t\tLocalRating as integer,\n\t\tLocalDaysToSell as integer,\n\t\tReg_No as string,\n\t\tStockNumber as integer,\n\t\tUniqueID as integer,\n\t\tCurrentRecord as integer,\n\t\tRecordID as string\n\t),\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:false,\n\tupsertable:false,\n\tformat: 'table',\n\tpreSQLs:['update [dbo].[autotrader local retailer ratings] set currentrecord = currentrecord - 1'],\n\tpostSQLs:['update [dbo].[autotrader local retailer ratings] set currentrecord = 1 where currentrecord is null;\\nupdate [dbo].[autotrader local retailer ratings] set date = getdate() where date is null;'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\terrorHandlingOption: 'stopOnFirstError',\n\tmapColumn(\n\t\tDealerID = dealerMetrics.dealerId,\n\t\tDealerName = dealerMetrics.dealerName,\n\t\tLocalRating = dealerMetrics.localRetailRating,\n\t\tLocalDaysToSell = dealerMetrics.localDaysToSell,\n\t\tReg_No = OriginalInformation.RegNo,\n\t\tStockNumber = OriginalInformation.StockNo,\n\t\tRecordID = OriginalInformation.RecordID\n\t)) ~> SQLAutotraderLocalRetailerRatings\nAutotraderJSON sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tinput(\n\t\tPerformanceScore as integer,\n\t\tPerformanceRating as string,\n\t\tYesterdayAdvertViews as integer,\n\t\tYesterdaySearchViews as integer,\n\t\tLastWeekAdvertViews as integer,\n\t\tLastWeekSearchViews as integer,\n\t\tAdvertURL as string,\n\t\tSource as string,\n\t\tDate as timestamp,\n\t\tRegNo as string,\n\t\tStockNo as integer,\n\t\tUniqueID as integer,\n\t\tCurrentRecord as integer,\n\t\tRecordID as string\n\t),\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:false,\n\tupsertable:false,\n\tformat: 'table',\n\tpreSQLs:['update [dbo].[autotrader advert] set currentrecord = currentrecord - 1'],\n\tpostSQLs:['update [dbo].[autotrader advert] set currentrecord = 1 where currentrecord is null;\\nupdate [dbo].[autotrader advert] set date = getdate() where date is null;\\ndelete from [dbo].[autotrader advert] where performancescore is null;'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\terrorHandlingOption: 'stopOnFirstError',\n\tmapColumn(\n\t\tPerformanceScore = advert.responseMetrics.performanceRating.score,\n\t\tPerformanceRating = advert.responseMetrics.performanceRating.rating,\n\t\tYesterdayAdvertViews = advert.responseMetrics.yesterday.advertViews,\n\t\tYesterdaySearchViews = advert.responseMetrics.yesterday.searchViews,\n\t\tLastWeekAdvertViews = advert.responseMetrics.lastWeek.advertViews,\n\t\tLastWeekSearchViews = advert.responseMetrics.lastWeek.searchViews,\n\t\tAdvertURL = advert.advertUrl,\n\t\tSource = advert.source,\n\t\tRegNo = OriginalInformation.RegNo,\n\t\tStockNo = OriginalInformation.StockNo,\n\t\tRecordID = OriginalInformation.RecordID\n\t)) ~> SQLAutotraderAdverts\nAutotraderJSON sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tinput(\n\t\tAdjustedPartExchange as decimal(18,2),\n\t\tAdjustedRetail as decimal(18,2),\n\t\tAdjustedTrade as decimal(18,2),\n\t\tDate as timestamp,\n\t\tID as long,\n\t\tPart_Exchange as decimal(18,2),\n\t\tPrice_Indicator as string,\n\t\tRegNo as string,\n\t\tRetail as decimal(18,2),\n\t\tStockNumber as integer,\n\t\tTrade as decimal(18,2),\n\t\tValuation_Type as string,\n\t\tUniqueID as integer,\n\t\tCurrentRecord as integer,\n\t\tRecordID as string,\n\t\tPriceIndicatorV2 as string\n\t),\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:false,\n\tupsertable:false,\n\tformat: 'table',\n\tpreSQLs:['update [dbo].[autotrader valuations] set currentrecord = currentrecord - 1'],\n\tpostSQLs:['update [dbo].[autotrader valuations] set currentrecord = 1 where currentrecord is null;\\nupdate [dbo].[autotrader valuations] set date = getdate() where date is null;'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\terrorHandlingOption: 'stopOnFirstError',\n\tmapColumn(\n\t\tAdjustedPartExchange = valuations.adjustedGuidePrice.partExchange.amountGBP,\n\t\tAdjustedRetail = valuations.adjustedGuidePrice.retail.amountGBP,\n\t\tAdjustedTrade = valuations.adjustedGuidePrice.trade.amountGBP,\n\t\tPart_Exchange = valuations.adjustedGuidePrice.partExchange.amountGBP,\n\t\tPrice_Indicator = valuations.adjustedGuidePrice.priceIndicator,\n\t\tRegNo = OriginalInformation.RegNo,\n\t\tRetail = valuations.marketAverageGuidePrice.retail.amountGBP,\n\t\tStockNumber = OriginalInformation.StockNo,\n\t\tRecordID = OriginalInformation.RecordID,\n\t\tPriceIndicatorV2 = valuations.adjustedGuidePrice.priceIndicatorV2,\n\t\tTrade = valuations.marketAverageGuidePrice.trade.amountGBP\n\t)) ~> SQLAutotraderValuations\nAutotraderJSON sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tinput(\n\t\tBuyerDemand as integer,\n\t\tDate as timestamp,\n\t\tID as long,\n\t\tLiveMarketCondition as integer,\n\t\tMarketSupply as integer,\n\t\tRegNo as string,\n\t\tUniqueID as integer,\n\t\tCurrentRecord as integer,\n\t\tRecordID as string\n\t),\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:false,\n\tupsertable:false,\n\tformat: 'table',\n\tpreSQLs:['update [dbo].[autotrader Market Supply] set currentrecord = currentrecord - 1'],\n\tpostSQLs:['update [dbo].[autotrader Market Supply] set currentrecord = 1 where currentrecord is null;\\nupdate [dbo].[autotrader market supply] set date = getdate() where date is null;'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\terrorHandlingOption: 'stopOnFirstError',\n\tmapColumn(\n\t\tBuyerDemand = retailMetrics.buyerDemand,\n\t\tLiveMarketCondition = retailMetrics.liveMarketCondition,\n\t\tMarketSupply = retailMetrics.marketSupply,\n\t\tRegNo = OriginalInformation.RegNo,\n\t\tRecordID = OriginalInformation.RecordID\n\t)) ~> SQLAutotraderMarketSupply\nCompetitors sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tinput(\n\t\tAdvertText as string,\n\t\tAdvertURL as string,\n\t\tAttentionGrabber as string,\n\t\tBodystyle as string,\n\t\tColour as string,\n\t\tCompetitorReg as string,\n\t\tDate as timestamp,\n\t\tDaysinStock as integer,\n\t\tDerivative as string,\n\t\tFuel as string,\n\t\tId as long,\n\t\tMainImage as string,\n\t\tMake as string,\n\t\tMileage as integer,\n\t\tModel as string,\n\t\tOwners as integer,\n\t\tPlate as integer,\n\t\tPrice as decimal(18,2),\n\t\tPriceIndicator as string,\n\t\tPricePosition as decimal(18,2),\n\t\tReg_No as string,\n\t\tSellerName as string,\n\t\tSellerSegment as string,\n\t\tSellerTown as string,\n\t\tStockNumber as integer,\n\t\tTaxRate as integer,\n\t\tTransmission as string,\n\t\tYear as integer,\n\t\tUniqueID as integer,\n\t\tCurrentRecord as integer,\n\t\tRecordID as string,\n\t\tPriceIndicatorV2 as string\n\t),\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:false,\n\tupsertable:false,\n\tformat: 'table',\n\tpreSQLs:['update [dbo].[autotrader competitors] set currentrecord = currentrecord - 1'],\n\tpostSQLs:['update [dbo].[autotrader competitors] set currentrecord = 1 where currentrecord is null;\\ndelete from [dbo].[autotrader competitors] where Make is null and currentrecord = 1;\\nupdate [dbo].[autotrader competitors] set date = getdate() where date is null;'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\terrorHandlingOption: 'stopOnFirstError',\n\tmapColumn(\n\t\tAdvertText = Ads.advertText,\n\t\tAdvertURL = Ads.atAdvertUrl,\n\t\tAttentionGrabber = Ads.attentionGrabber,\n\t\tBodystyle = Ads.bodyType,\n\t\tColour = Ads.colour,\n\t\tCompetitorReg = Ads.registration,\n\t\tDaysinStock = Ads.daysInStock,\n\t\tDerivative = Ads.derivative,\n\t\tFuel = Ads.fuel,\n\t\tMainImage = Ads.mainImage,\n\t\tMake = Ads.make,\n\t\tMileage = Ads.mileage,\n\t\tModel = Ads.model,\n\t\tOwners = Ads.owners,\n\t\tPlate = Ads.plate,\n\t\tPrice = Ads.price,\n\t\tPriceIndicator = Ads.priceIndicator,\n\t\tPricePosition = pricePosition,\n\t\tReg_No = OriginalInformation.RegNo,\n\t\tSellerName = sellername,\n\t\tSellerSegment = sellersegment,\n\t\tSellerTown = sellertown,\n\t\tStockNumber = OriginalInformation.StockNo,\n\t\tTaxRate = Ads.taxRate,\n\t\tTransmission = Ads.transmission,\n\t\tRecordID = OriginalInformation.RecordID,\n\t\tPriceIndicatorV2 = Ads.priceIndicatorV2,\n\t\tYear = Ads.year\n\t)) ~> SQLAutotraderCompetitors"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/AutotraderJSON')]",
				"[concat(variables('factoryId'), '/datasets/SQLAutotraderLocalRetailerRatings')]",
				"[concat(variables('factoryId'), '/datasets/SQLAutotraderAdvert')]",
				"[concat(variables('factoryId'), '/datasets/SQLAutotraderValuations')]",
				"[concat(variables('factoryId'), '/datasets/SQLAutotraderMarketSupply')]",
				"[concat(variables('factoryId'), '/datasets/SQLAutotraderCompetitors')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AutotraderJSONDataFlowExtended')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "AutotraderJSONExtended",
								"type": "DatasetReference"
							},
							"name": "AutotraderJSON"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "SQLAutotraderLocalRetailerRatingsExtended",
								"type": "DatasetReference"
							},
							"name": "SQLAutotraderLocalRetailerRatings"
						},
						{
							"dataset": {
								"referenceName": "SQLAutotraderAdvertExtended",
								"type": "DatasetReference"
							},
							"name": "SQLAutotraderAdverts"
						},
						{
							"dataset": {
								"referenceName": "SQLAutotraderValuationsExtended",
								"type": "DatasetReference"
							},
							"name": "SQLAutotraderValuations"
						},
						{
							"dataset": {
								"referenceName": "SQLAutotraderMarketSupplyExtended",
								"type": "DatasetReference"
							},
							"name": "SQLAutotraderMarketSupply"
						},
						{
							"dataset": {
								"referenceName": "SQLAutotraderCompetitorsExtended",
								"type": "DatasetReference"
							},
							"name": "SQLAutotraderCompetitors"
						}
					],
					"transformations": [
						{
							"name": "LocalRetailerRatings"
						},
						{
							"name": "Competitors"
						}
					],
					"script": "source(output(\n\t\tOriginalInformation as (RecordID as string, RegNo as string, StockNo as string),\n\t\tinformation as (derivative as string, make as string, model as string, owners as string, plate as string, year as string, attentionGrabber as string, advertText as string),\n\t\tadvert as (responseMetrics as (performanceRating as (score as string, rating as string), yesterday as (advertViews as string, searchViews as string), lastWeek as (advertViews as string, searchViews as string)), advertUrl as string, source as string),\n\t\tvaluations as (marketAverageGuidePrice as (trade as (amountGBP as double), retail as (amountGBP as double), partExchange as (amountGBP as double)), adjustedGuidePrice as (trade as (amountGBP as double), retail as (amountGBP as double), partExchange as (amountGBP as double), priceIndicator as string, priceIndicatorV2 as string)),\n\t\tretailMetrics as (liveMarketCondition as string, marketSupply as string, buyerDemand as string, dealerMetrics as (dealerId as string, dealerName as string, localRetailRating as string, localDaysToSell as string)[]),\n\t\tcompetitors as (totalResultCount as string, filters as (filterExclusions as string[], includeWriteOffCategoryVehicles as boolean, segment as string, fuelType as string, distance as string, plateMin as string, plateMax as string, mileageMin as string, mileageMax as string, engineSize as string, colour as string, bodyType as string, postcode as string, taxRate as string, doors as string, driveTrain as string, trim as string, transmission as string), competitorAdverts as (registration as string, make as string, model as string, derivative as string, mileage as string, year as string, plate as string, colour as string, insuranceWriteOffCategory as string, taxRate as string, owners as string, bodyType as string, fuel as string, transmission as string, seller as (name as string, town as string, segment as string), atMetrics as (pricePosition as double), atAdvertUrl as string, attentionGrabber as string, daysInStock as string, mainImage as string, advertText as string, price as double, priceIndicator as string, priceIndicatorV2 as string)[])\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false,\n\tdocumentForm: 'documentPerLine') ~> AutotraderJSON\nAutotraderJSON foldDown(unroll(retailMetrics.dealerMetrics),\n\tmapColumn(\n\t\tOriginalInformation,\n\t\tdealerMetrics = retailMetrics.dealerMetrics\n\t),\n\tskipDuplicateMapInputs: false,\n\tskipDuplicateMapOutputs: false) ~> LocalRetailerRatings\nAutotraderJSON foldDown(unroll(competitors.competitorAdverts),\n\tmapColumn(\n\t\tOriginalInformation,\n\t\tAds = competitors.competitorAdverts,\n\t\tsellername = competitors.competitorAdverts.seller.name,\n\t\tsellertown = competitors.competitorAdverts.seller.town,\n\t\tsellersegment = competitors.competitorAdverts.seller.segment,\n\t\tpricePosition = competitors.competitorAdverts.atMetrics.pricePosition\n\t),\n\tskipDuplicateMapInputs: false,\n\tskipDuplicateMapOutputs: false) ~> Competitors\nLocalRetailerRatings sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tinput(\n\t\tDate as timestamp,\n\t\tDealerID as integer,\n\t\tDealerName as string,\n\t\tID as long,\n\t\tLocalRating as integer,\n\t\tLocalDaysToSell as integer,\n\t\tReg_No as string,\n\t\tStockNumber as integer,\n\t\tUniqueID as integer,\n\t\tCurrentRecord as integer,\n\t\tRecordID as string\n\t),\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:false,\n\tupsertable:false,\n\tformat: 'table',\n\tpreSQLs:['update [dbo].[autotrader local retailer ratings extended] set currentrecord = currentrecord - 1'],\n\tpostSQLs:['update [dbo].[autotrader local retailer ratings extended] set currentrecord = 1 where currentrecord is null;\\nupdate [dbo].[autotrader local retailer ratings extended] set date = getdate() where date is null;'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\terrorHandlingOption: 'allErrors',\n\ttransactionCommit: 'single',\n\treportSuccessOnError: false,\n\tmapColumn(\n\t\tDealerID = dealerMetrics.dealerId,\n\t\tDealerName = dealerMetrics.dealerName,\n\t\tLocalRating = dealerMetrics.localRetailRating,\n\t\tLocalDaysToSell = dealerMetrics.localDaysToSell,\n\t\tReg_No = OriginalInformation.RegNo,\n\t\tStockNumber = OriginalInformation.StockNo,\n\t\tRecordID = OriginalInformation.RecordID\n\t)) ~> SQLAutotraderLocalRetailerRatings\nAutotraderJSON sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tinput(\n\t\tPerformanceScore as integer,\n\t\tPerformanceRating as string,\n\t\tYesterdayAdvertViews as integer,\n\t\tYesterdaySearchViews as integer,\n\t\tLastWeekAdvertViews as integer,\n\t\tLastWeekSearchViews as integer,\n\t\tAdvertURL as string,\n\t\tSource as string,\n\t\tDate as timestamp,\n\t\tRegNo as string,\n\t\tStockNo as integer,\n\t\tUniqueID as integer,\n\t\tCurrentRecord as integer,\n\t\tRecordID as string\n\t),\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:false,\n\tupsertable:false,\n\tformat: 'table',\n\tpreSQLs:['update [dbo].[autotrader advert extended] set currentrecord = currentrecord - 1'],\n\tpostSQLs:['update [dbo].[autotrader advert extended] set currentrecord = 1 where currentrecord is null;\\nupdate [dbo].[autotrader advert extended] set date = getdate() where date is null;\\ndelete from [dbo].[autotrader advert extended] where performancescore is null;'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\terrorHandlingOption: 'allErrors',\n\ttransactionCommit: 'single',\n\treportSuccessOnError: false,\n\tmapColumn(\n\t\tPerformanceScore = advert.responseMetrics.performanceRating.score,\n\t\tPerformanceRating = advert.responseMetrics.performanceRating.rating,\n\t\tYesterdayAdvertViews = advert.responseMetrics.yesterday.advertViews,\n\t\tYesterdaySearchViews = advert.responseMetrics.yesterday.searchViews,\n\t\tLastWeekAdvertViews = advert.responseMetrics.lastWeek.advertViews,\n\t\tLastWeekSearchViews = advert.responseMetrics.lastWeek.searchViews,\n\t\tAdvertURL = advert.advertUrl,\n\t\tSource = advert.source,\n\t\tRegNo = OriginalInformation.RegNo,\n\t\tStockNo = OriginalInformation.StockNo,\n\t\tRecordID = OriginalInformation.RecordID\n\t)) ~> SQLAutotraderAdverts\nAutotraderJSON sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tinput(\n\t\tAdjustedPartExchange as decimal(18,2),\n\t\tAdjustedRetail as decimal(18,2),\n\t\tAdjustedTrade as decimal(18,2),\n\t\tDate as timestamp,\n\t\tID as long,\n\t\tPart_Exchange as decimal(18,2),\n\t\tPrice_Indicator as string,\n\t\tRegNo as string,\n\t\tRetail as decimal(18,2),\n\t\tStockNumber as integer,\n\t\tTrade as decimal(18,2),\n\t\tValuation_Type as string,\n\t\tUniqueID as integer,\n\t\tCurrentRecord as integer,\n\t\tRecordID as string,\n\t\tPriceIndicatorV2 as string\n\t),\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:false,\n\tupsertable:false,\n\tformat: 'table',\n\tpreSQLs:['update [dbo].[autotrader valuations extended] set currentrecord = currentrecord - 1'],\n\tpostSQLs:['update [dbo].[autotrader valuations extended] set currentrecord = 1 where currentrecord is null;\\nupdate [dbo].[autotrader valuations extended] set date = getdate() where date is null;'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\terrorHandlingOption: 'allErrors',\n\ttransactionCommit: 'single',\n\treportSuccessOnError: false,\n\tmapColumn(\n\t\tAdjustedPartExchange = valuations.adjustedGuidePrice.partExchange.amountGBP,\n\t\tAdjustedRetail = valuations.adjustedGuidePrice.retail.amountGBP,\n\t\tAdjustedTrade = valuations.adjustedGuidePrice.trade.amountGBP,\n\t\tPart_Exchange = valuations.adjustedGuidePrice.partExchange.amountGBP,\n\t\tPrice_Indicator = valuations.adjustedGuidePrice.priceIndicator,\n\t\tRegNo = OriginalInformation.RegNo,\n\t\tRetail = valuations.marketAverageGuidePrice.retail.amountGBP,\n\t\tStockNumber = OriginalInformation.StockNo,\n\t\tRecordID = OriginalInformation.RecordID,\n\t\tPriceIndicatorV2 = valuations.adjustedGuidePrice.priceIndicatorV2,\n\t\tTrade = valuations.marketAverageGuidePrice.trade.amountGBP\n\t)) ~> SQLAutotraderValuations\nAutotraderJSON sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tinput(\n\t\tBuyerDemand as integer,\n\t\tDate as timestamp,\n\t\tID as long,\n\t\tLiveMarketCondition as integer,\n\t\tMarketSupply as integer,\n\t\tRegNo as string,\n\t\tUniqueID as integer,\n\t\tCurrentRecord as integer,\n\t\tRecordID as string\n\t),\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:false,\n\tupsertable:false,\n\tformat: 'table',\n\tpreSQLs:['update [dbo].[autotrader Market Supply extended] set currentrecord = currentrecord - 1'],\n\tpostSQLs:['update [dbo].[autotrader Market Supply extended] set currentrecord = 1 where currentrecord is null;\\nupdate [dbo].[autotrader market supply extended] set date = getdate() where date is null;'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\terrorHandlingOption: 'allErrors',\n\ttransactionCommit: 'single',\n\treportSuccessOnError: false,\n\tmapColumn(\n\t\tBuyerDemand = retailMetrics.buyerDemand,\n\t\tLiveMarketCondition = retailMetrics.liveMarketCondition,\n\t\tMarketSupply = retailMetrics.marketSupply,\n\t\tRegNo = OriginalInformation.RegNo,\n\t\tRecordID = OriginalInformation.RecordID\n\t)) ~> SQLAutotraderMarketSupply\nCompetitors sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tinput(\n\t\tAdvertText as string,\n\t\tAdvertURL as string,\n\t\tAttentionGrabber as string,\n\t\tBodystyle as string,\n\t\tColour as string,\n\t\tCompetitorReg as string,\n\t\tDate as timestamp,\n\t\tDaysinStock as integer,\n\t\tDerivative as string,\n\t\tFuel as string,\n\t\tId as long,\n\t\tMainImage as string,\n\t\tMake as string,\n\t\tMileage as integer,\n\t\tModel as string,\n\t\tOwners as integer,\n\t\tPlate as integer,\n\t\tPrice as decimal(18,2),\n\t\tPriceIndicator as string,\n\t\tPricePosition as decimal(18,2),\n\t\tReg_No as string,\n\t\tSellerName as string,\n\t\tSellerSegment as string,\n\t\tSellerTown as string,\n\t\tStockNumber as integer,\n\t\tTaxRate as integer,\n\t\tTransmission as string,\n\t\tYear as integer,\n\t\tUniqueID as integer,\n\t\tCurrentRecord as integer,\n\t\tRecordID as string,\n\t\tPriceIndicatorV2 as string\n\t),\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:false,\n\tupsertable:false,\n\tformat: 'table',\n\tpreSQLs:['update [dbo].[autotrader competitors extended] set currentrecord = currentrecord - 1'],\n\tpostSQLs:['update [dbo].[autotrader competitors extended] set currentrecord = 1 where currentrecord is null;\\ndelete from [dbo].[autotrader competitors extended] where Make is null and currentrecord = 1;\\nupdate [dbo].[autotrader competitors extended] set date = getdate() where date is null;'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\terrorHandlingOption: 'allErrors',\n\ttransactionCommit: 'single',\n\treportSuccessOnError: false,\n\tmapColumn(\n\t\tAdvertText = Ads.advertText,\n\t\tAdvertURL = Ads.atAdvertUrl,\n\t\tAttentionGrabber = Ads.attentionGrabber,\n\t\tBodystyle = Ads.bodyType,\n\t\tColour = Ads.colour,\n\t\tCompetitorReg = Ads.registration,\n\t\tDaysinStock = Ads.daysInStock,\n\t\tDerivative = Ads.derivative,\n\t\tFuel = Ads.fuel,\n\t\tMainImage = Ads.mainImage,\n\t\tMake = Ads.make,\n\t\tMileage = Ads.mileage,\n\t\tModel = Ads.model,\n\t\tOwners = Ads.owners,\n\t\tPlate = Ads.plate,\n\t\tPrice = Ads.price,\n\t\tPriceIndicator = Ads.priceIndicator,\n\t\tPricePosition = pricePosition,\n\t\tReg_No = OriginalInformation.RegNo,\n\t\tSellerName = sellername,\n\t\tSellerSegment = sellersegment,\n\t\tSellerTown = sellertown,\n\t\tStockNumber = OriginalInformation.StockNo,\n\t\tTaxRate = Ads.taxRate,\n\t\tTransmission = Ads.transmission,\n\t\tRecordID = OriginalInformation.RecordID,\n\t\tPriceIndicatorV2 = Ads.priceIndicatorV2,\n\t\tYear = Ads.year\n\t)) ~> SQLAutotraderCompetitors"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/AutotraderJSONExtended')]",
				"[concat(variables('factoryId'), '/datasets/SQLAutotraderLocalRetailerRatingsExtended')]",
				"[concat(variables('factoryId'), '/datasets/SQLAutotraderAdvertExtended')]",
				"[concat(variables('factoryId'), '/datasets/SQLAutotraderValuationsExtended')]",
				"[concat(variables('factoryId'), '/datasets/SQLAutotraderMarketSupplyExtended')]",
				"[concat(variables('factoryId'), '/datasets/SQLAutotraderCompetitorsExtended')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AutotraderStockManagementJSONDataFlow')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "AutotraderStockManagementJSON",
								"type": "DatasetReference"
							},
							"name": "StockMgmt"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "SQLAutotraderCompetitorsTest",
								"type": "DatasetReference"
							},
							"name": "SQLAutotraderCompetitors"
						},
						{
							"dataset": {
								"referenceName": "SQLAutotraderLocalRetailerRatingsTest",
								"type": "DatasetReference"
							},
							"name": "SQLAutotraderLocalRetailerRatings"
						},
						{
							"dataset": {
								"referenceName": "SQLAutotraderMarketSupplyTest",
								"type": "DatasetReference"
							},
							"name": "SQLAutotraderMarketSupply"
						},
						{
							"dataset": {
								"referenceName": "SQLAutotraderValuationsTest",
								"type": "DatasetReference"
							},
							"name": "SQLAutotraderValuations"
						},
						{
							"dataset": {
								"referenceName": "SQLAutotraderAdvertTest",
								"type": "DatasetReference"
							},
							"name": "SQLAutotraderAdvert"
						}
					],
					"transformations": [
						{
							"name": "Competitors"
						},
						{
							"name": "AddDaysinStock"
						},
						{
							"name": "AddDaysInStock2"
						}
					],
					"script": "source(output(\n\t\tAutotraderRecord as (OriginalInformation as (RecordID as string, RegNo as string, StockNo as string), vehicle as (ownershipCondition as string, registration as string, vin as string, make as string, model as string, generation as string, derivative as string, derivativeId as string, vehicleType as string, trim as string, bodyType as string, fuelType as string, cabType as string, transmissionType as string, wheelbaseType as string, roofHeightType as string, drivetrain as string, seats as string, doors as string, co2EmissionGPKM as string, topSpeedMPH as string, zeroToSixtyMPHSeconds as string, badgeEngineSizeLitres as double, engineCapacityCC as string, enginePowerBHP as string, fuelCapacityLitres as string, emissionClass as string, fuelEconomyNEDCExtraUrbanMPG as string, fuelEconomyNEDCUrbanMPG as string, fuelEconomyNEDCCombinedMPG as string, fuelEconomyWLTPLowMPG as string, fuelEconomyWLTPMediumMPG as string, fuelEconomyWLTPHighMPG as string, fuelEconomyWLTPExtraHighMPG as string, fuelEconomyWLTPCombinedMPG as string, bootSpaceSeatsUpLitres as string, insuranceGroup as string, insuranceSecurityCode as string, firstRegistrationDate as string, colour as string, style as string, subStyle as string, lengthMM as string, heightMM as string, widthMM as string, payloadLengthMM as string, payloadWidthMM as string, payloadHeightMM as string, payloadWeightKG as string, minimumKerbWeightKG as string, grossVehicleWeightKG as string, odometerReadingMiles as string, warrantyMonthsOnPurchase as string, serviceHistory as string, plate as string, yearOfManufacture as string, interiorCondition as string, tyreCondition as string, bodyCondition as string, previousOwners as string, exDemo as string, v5Certificate as string, driverPosition as string, axleConfiguration as string, upholstery as string, interiorColour as string, exteriorFinish as string, lastServiceOdometerReadingMiles as string, lastServiceDate as string, chassisMake as string, chassisModel as string, bedroomLayout as string, endLayout as string, bedrooms as string, berths as string, standard as (make as string, model as string, generation as string, derivative as string, trim as string, bodyType as string, fuelType as string, transmissionType as string, cabType as string, drivetrain as string, colour as string, style as string, subStyle as string)), advertiser as (advertiserId as string, name as string, segment as string, website as string, mobileWebsite as string, phone as string, location as (addressLineOne as string, town as string, county as string, region as string, postCode as string, latitude as double, longitude as double), advertStrapline as string), adverts as (forecourtPrice as (amountGBP as string), dueDate as string, manufacturerApproved as boolean, twelveMonthsMot as boolean, motInsurance as string, retailAdverts as (price as (amountGBP as string), priceOnApplication as boolean, manufacturerRRP as (amountGBP as string), vatExcluded as string, attentionGrabber as string, description as string, description2 as string, priceIndicatorRating as string, autotraderAdvert as (status as string), advertiserAdvert as (status as string), locatorAdvert as (status as string), exportAdvert as (status as string), profileAdvert as (status as string), displayOptions as (excludePreviousOwners as boolean, excludeStrapline as boolean, excludeMot as boolean, excludeWarranty as boolean, excludeInteriorDetails as boolean, excludeTyreCondition as boolean, excludeBodyCondition as boolean))), metadata as (stockId as string, searchId as string, externalStockId as string, externalStockReference as string, lastUpdated as string, lastUpdatedByAdvertiser as string, versionNumber as string, lifecycleState as string, dateOnForecourt as string), features as (name as string, type as string)[], media as (images as (href as string)[], video as (href as string, photoHref as string)), valuations as (marketAverage as (trade as (amountGBP as string), partExchange as (amountGBP as string), retail as (amountGBP as string, amountExcludingVatGBP as string), private as (amountGBP as string)), adjusted as (retail as (amountGBP as string), trade as (amountGBP as string), partExchange as (amountGBP as string), private as (amountGBP as string))), vehicleMetrics as (national as (retail as (supply as (value as string), demand as (value as string), marketCondition as (value as string), rating as (value as string), daysToSell as (value as string), locations as string[])), local as (retail as (rating as (value as string), daysToSell as (value as string)))), responseMetrics as (performanceRating as (score as string, rating as string), yesterday as (advertViews as string, searchViews as string), lastWeek as (advertViews as string, searchViews as string)), check as (insuranceWriteoffCategory as string, scrapped as string, stolen as string, imported as string, exported as string, privateFinance as string, tradeFinance as string, highRisk as string, mileageDiscrepancy as string, colourChanged as string, registrationChanged as string, previousOwners as string), links as (competitor as (href as string))),\n\t\tresults as (vehicle as (ownershipCondition as string, registration as string, vin as string, make as string, model as string, generation as string, derivative as string, derivativeId as string, vehicleType as string, trim as string, bodyType as string, fuelType as string, cabType as string, transmissionType as string, wheelbaseType as string, roofHeightType as string, drivetrain as string, seats as string, doors as string, co2EmissionGPKM as string, topSpeedMPH as string, zeroToSixtyMPHSeconds as string, badgeEngineSizeLitres as double, engineCapacityCC as string, enginePowerBHP as string, fuelCapacityLitres as double, emissionClass as string, fuelEconomyNEDCExtraUrbanMPG as double, fuelEconomyNEDCUrbanMPG as double, fuelEconomyNEDCCombinedMPG as double, fuelEconomyWLTPLowMPG as string, fuelEconomyWLTPMediumMPG as string, fuelEconomyWLTPHighMPG as string, fuelEconomyWLTPExtraHighMPG as string, fuelEconomyWLTPCombinedMPG as double, bootSpaceSeatsUpLitres as double, insuranceGroup as string, insuranceSecurityCode as string, firstRegistrationDate as string, colour as string, style as string, subStyle as string, lengthMM as string, heightMM as string, widthMM as string, payloadLengthMM as string, payloadWidthMM as string, payloadHeightMM as string, payloadWeightKG as string, minimumKerbWeightKG as string, grossVehicleWeightKG as string, odometerReadingMiles as string, warrantyMonthsOnPurchase as string, serviceHistory as string, plate as string, yearOfManufacture as string, interiorCondition as string, tyreCondition as string, bodyCondition as string, previousOwners as string, exDemo as string, v5Certificate as string, driverPosition as string, axleConfiguration as string, upholstery as string, interiorColour as string, exteriorFinish as string, lastServiceOdometerReadingMiles as string, lastServiceDate as string, chassisMake as string, chassisModel as string, bedroomLayout as string, endLayout as string, bedrooms as string, berths as string, standard as (make as string, model as string, generation as string, derivative as string, trim as string, bodyType as string, fuelType as string, transmissionType as string, cabType as string, drivetrain as string, colour as string, style as string, subStyle as string)), advertiser as (advertiserId as string, name as string, segment as string, website as string, mobileWebsite as string, phone as string, location as (addressLineOne as string, town as string, county as string, region as string, postCode as string, latitude as double, longitude as double), advertStrapline as string), adverts as (forecourtPrice as (amountGBP as string), dueDate as string, manufacturerApproved as boolean, twelveMonthsMot as boolean, motInsurance as string, retailAdverts as (price as (amountGBP as string), priceOnApplication as boolean, manufacturerRRP as (amountGBP as string), vatExcluded as string, attentionGrabber as string, description as string, description2 as string, priceIndicatorRating as string, autotraderAdvert as (status as string), advertiserAdvert as (status as string), locatorAdvert as (status as string), exportAdvert as (status as string), profileAdvert as (status as string), displayOptions as (excludePreviousOwners as boolean, excludeStrapline as boolean, excludeMot as boolean, excludeWarranty as boolean, excludeInteriorDetails as boolean, excludeTyreCondition as boolean, excludeBodyCondition as boolean))), metadata as (stockId as string, searchId as string, externalStockId as string, externalStockReference as string, lastUpdated as string, lastUpdatedByAdvertiser as string, versionNumber as string, lifecycleState as string, dateOnForecourt as string), features as (name as string, type as string)[], media as (images as (href as string)[], video as (href as string, photoHref as string)), valuations as (marketAverage as (retail as (amountGBP as string, amountExcludingVatGBP as string)), adjusted as (retail as (amountGBP as string))), check as (insuranceWriteoffCategory as string, scrapped as boolean, stolen as boolean, imported as boolean, exported as boolean, privateFinance as string, tradeFinance as string, highRisk as string, mileageDiscrepancy as string, colourChanged as string, registrationChanged as string, previousOwners as string))[],\n\t\tfacets as ({} as string),\n\t\ttotalResults as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false,\n\tdocumentForm: 'documentPerLine') ~> StockMgmt\nStockMgmt foldDown(unroll(results),\n\tmapColumn(\n\t\tOriginalInformation = AutotraderRecord.OriginalInformation,\n\t\tAds = AutotraderRecord.adverts,\n\t\tsellername = AutotraderRecord.advertiser.name,\n\t\tsellertown = AutotraderRecord.advertiser.location.town,\n\t\tsellersegment = results,\n\t\tdateOnForecourt = results\n\t),\n\tskipDuplicateMapInputs: false,\n\tskipDuplicateMapOutputs: false) ~> Competitors\nCompetitors derive(DaysInStock = minus(currentDate(),toDate(dateOnForecourt.metadata.dateOnForecourt,\"yyyy-MM-dd\"))) ~> AddDaysinStock\nStockMgmt derive(DaysInStock = minus(currentDate(),toDate(AutotraderRecord.metadata.dateOnForecourt,\"yyyy-MM-dd\"))) ~> AddDaysInStock2\nAddDaysinStock sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tinput(\n\t\tAdvertText as string,\n\t\tAdvertURL as string,\n\t\tAttentionGrabber as string,\n\t\tBodystyle as string,\n\t\tColour as string,\n\t\tCompetitorReg as string,\n\t\tDate as timestamp,\n\t\tDaysinStock as integer,\n\t\tDerivative as string,\n\t\tFuel as string,\n\t\tId as long,\n\t\tMainImage as string,\n\t\tMake as string,\n\t\tMileage as integer,\n\t\tModel as string,\n\t\tOwners as integer,\n\t\tPlate as integer,\n\t\tPrice as decimal(18,2),\n\t\tPriceIndicator as string,\n\t\tPricePosition as decimal(18,2),\n\t\tReg_No as string,\n\t\tSellerName as string,\n\t\tSellerSegment as string,\n\t\tSellerTown as string,\n\t\tStockNumber as integer,\n\t\tTaxRate as integer,\n\t\tTransmission as string,\n\t\tYear as integer,\n\t\tUniqueID as integer,\n\t\tCurrentRecord as integer,\n\t\tRecordID as string,\n\t\tPriceIndicatorV2 as string\n\t),\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:false,\n\tupsertable:false,\n\tformat: 'table',\n\tpreSQLs:['update [dbo].[autotrader competitors test] set currentrecord = currentrecord - 1'],\n\tpostSQLs:['update [dbo].[autotrader competitors test] set currentrecord = 1 where currentrecord is null;\\ndelete from [dbo].[autotrader competitors test] where Make is null and currentrecord = 1;\\nupdate [dbo].[autotrader competitors test] set date = getdate() where date is null;'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\terrorHandlingOption: 'stopOnFirstError',\n\tmapColumn(\n\t\tBodystyle = sellersegment.vehicle.standard.bodyType,\n\t\tColour = sellersegment.vehicle.colour,\n\t\tCompetitorReg = sellersegment.vehicle.registration,\n\t\tDerivative = sellersegment.vehicle.derivative,\n\t\tFuel = sellersegment.vehicle.fuelType,\n\t\tMake = sellersegment.vehicle.make,\n\t\tMileage = sellersegment.vehicle.odometerReadingMiles,\n\t\tModel = sellersegment.vehicle.model,\n\t\tOwners = sellersegment.vehicle.previousOwners,\n\t\tPlate = sellersegment.vehicle.plate,\n\t\tPrice = Ads.retailAdverts.price.amountGBP,\n\t\tPriceIndicator = Ads.retailAdverts.priceIndicatorRating,\n\t\tReg_No = OriginalInformation.RegNo,\n\t\tSellerName = sellername,\n\t\tSellerSegment = sellersegment.advertiser.segment,\n\t\tSellerTown = sellertown,\n\t\tStockNumber = OriginalInformation.StockNo,\n\t\tTransmission = sellersegment.vehicle.transmissionType,\n\t\tYear = sellersegment.vehicle.yearOfManufacture,\n\t\tRecordID = OriginalInformation.RecordID,\n\t\tPriceIndicatorV2 = Ads.retailAdverts.priceIndicatorRating,\n\t\tDaysinStock = DaysInStock,\n\t\tPriceIndicatorV2 = Ads.retailAdverts.priceIndicatorRating,\n\t\tMainImage = sellersegment.metadata.dateOnForecourt\n\t)) ~> SQLAutotraderCompetitors\nAddDaysInStock2 sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tinput(\n\t\tDate as timestamp,\n\t\tDealerID as integer,\n\t\tDealerName as string,\n\t\tID as long,\n\t\tLocalRating as integer,\n\t\tLocalDaysToSell as integer,\n\t\tReg_No as string,\n\t\tStockNumber as string,\n\t\tUniqueID as integer,\n\t\tCurrentRecord as integer,\n\t\tRecordID as string\n\t),\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:false,\n\tupsertable:false,\n\tformat: 'table',\n\tpreSQLs:['update [dbo].[autotrader local retailer ratings test] set currentrecord = currentrecord - 1'],\n\tpostSQLs:['update [dbo].[autotrader local retailer ratings test] set currentrecord = 1 where currentrecord is null;\\nupdate [dbo].[autotrader local retailer ratings test] set date = getdate() where date is null;'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\terrorHandlingOption: 'stopOnFirstError',\n\tmapColumn(\n\t\tDealerID = AutotraderRecord.advertiser.advertiserId,\n\t\tDealerName = AutotraderRecord.advertiser.name,\n\t\tLocalRating = AutotraderRecord.vehicleMetrics.local.retail.rating.value,\n\t\tLocalDaysToSell = AutotraderRecord.vehicleMetrics.local.retail.daysToSell.value,\n\t\tReg_No = AutotraderRecord.OriginalInformation.RegNo,\n\t\tStockNumber = AutotraderRecord.OriginalInformation.StockNo,\n\t\tRecordID = AutotraderRecord.OriginalInformation.RecordID\n\t)) ~> SQLAutotraderLocalRetailerRatings\nStockMgmt sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tinput(\n\t\tBuyerDemand as integer,\n\t\tDate as timestamp,\n\t\tID as long,\n\t\tLiveMarketCondition as integer,\n\t\tMarketSupply as integer,\n\t\tRegNo as string,\n\t\tUniqueID as integer,\n\t\tCurrentRecord as integer,\n\t\tRecordID as string\n\t),\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:false,\n\tupsertable:false,\n\tformat: 'table',\n\tpreSQLs:['update [dbo].[autotrader Market Supply test]  set currentrecord = currentrecord - 1'],\n\tpostSQLs:['update [dbo].[autotrader Market Supply test] set currentrecord = 1 where currentrecord is null;\\nupdate [dbo].[autotrader market supply test] set date = getdate() where date is null;'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\terrorHandlingOption: 'stopOnFirstError',\n\tmapColumn(\n\t\tBuyerDemand = AutotraderRecord.vehicleMetrics.national.retail.demand.value,\n\t\tLiveMarketCondition = AutotraderRecord.vehicleMetrics.national.retail.marketCondition.value,\n\t\tMarketSupply = AutotraderRecord.vehicleMetrics.national.retail.supply.value,\n\t\tRegNo = AutotraderRecord.OriginalInformation.RegNo,\n\t\tRecordID = AutotraderRecord.OriginalInformation.RecordID\n\t)) ~> SQLAutotraderMarketSupply\nStockMgmt sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tinput(\n\t\tAdjustedPartExchange as decimal(18,2),\n\t\tAdjustedRetail as decimal(18,2),\n\t\tAdjustedTrade as decimal(18,2),\n\t\tDate as timestamp,\n\t\tID as long,\n\t\tPart_Exchange as decimal(18,2),\n\t\tPrice_Indicator as string,\n\t\tRegNo as string,\n\t\tRetail as decimal(18,2),\n\t\tStockNumber as string,\n\t\tTrade as decimal(18,2),\n\t\tValuation_Type as string,\n\t\tUniqueID as integer,\n\t\tCurrentRecord as integer,\n\t\tRecordID as string,\n\t\tPriceIndicatorV2 as string\n\t),\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:false,\n\tupsertable:false,\n\tformat: 'table',\n\tpreSQLs:['update [dbo].[autotrader valuations test] set currentrecord = currentrecord - 1'],\n\tpostSQLs:['update [dbo].[autotrader valuations test] set currentrecord = 1 where currentrecord is null;\\nupdate [dbo].[autotrader valuations test] set date = getdate() where date is null;'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\terrorHandlingOption: 'stopOnFirstError',\n\tmapColumn(\n\t\tAdjustedPartExchange = AutotraderRecord.valuations.adjusted.partExchange.amountGBP,\n\t\tAdjustedRetail = AutotraderRecord.valuations.adjusted.retail.amountGBP,\n\t\tAdjustedTrade = AutotraderRecord.valuations.adjusted.trade.amountGBP,\n\t\tPart_Exchange = AutotraderRecord.valuations.adjusted.partExchange.amountGBP,\n\t\tPrice_Indicator = AutotraderRecord.adverts.retailAdverts.priceIndicatorRating,\n\t\tRegNo = AutotraderRecord.OriginalInformation.RegNo,\n\t\tRetail = AutotraderRecord.valuations.adjusted.retail.amountGBP,\n\t\tStockNumber = AutotraderRecord.OriginalInformation.StockNo,\n\t\tRecordID = AutotraderRecord.OriginalInformation.RecordID,\n\t\tPriceIndicatorV2 = AutotraderRecord.adverts.retailAdverts.priceIndicatorRating,\n\t\tTrade = AutotraderRecord.valuations.marketAverage.trade.amountGBP\n\t)) ~> SQLAutotraderValuations\nStockMgmt sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tinput(\n\t\tPerformanceScore as integer,\n\t\tPerformanceRating as string,\n\t\tYesterdayAdvertViews as integer,\n\t\tYesterdaySearchViews as integer,\n\t\tLastWeekAdvertViews as integer,\n\t\tLastWeekSearchViews as integer,\n\t\tAdvertURL as string,\n\t\tSource as string,\n\t\tDate as timestamp,\n\t\tRegNo as string,\n\t\tStockNo as string,\n\t\tUniqueID as integer,\n\t\tCurrentRecord as integer,\n\t\tRecordID as string\n\t),\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:false,\n\tupsertable:false,\n\tformat: 'table',\n\tpreSQLs:['update [dbo].[autotrader advert test] set currentrecord = currentrecord - 1'],\n\tpostSQLs:['update [dbo].[autotrader advert test] set currentrecord = 1 where currentrecord is null;\\nupdate [dbo].[autotrader advert test] set date = getdate() where date is null;\\ndelete from [dbo].[autotrader advert test] where performancescore is null;'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\terrorHandlingOption: 'stopOnFirstError',\n\tmapColumn(\n\t\tPerformanceScore = AutotraderRecord.responseMetrics.performanceRating.score,\n\t\tPerformanceRating = AutotraderRecord.responseMetrics.performanceRating.rating,\n\t\tYesterdayAdvertViews = AutotraderRecord.responseMetrics.yesterday.advertViews,\n\t\tYesterdaySearchViews = AutotraderRecord.responseMetrics.yesterday.searchViews,\n\t\tLastWeekAdvertViews = AutotraderRecord.responseMetrics.lastWeek.advertViews,\n\t\tLastWeekSearchViews = AutotraderRecord.responseMetrics.lastWeek.searchViews,\n\t\tRegNo = AutotraderRecord.OriginalInformation.RegNo,\n\t\tStockNo = AutotraderRecord.OriginalInformation.StockNo,\n\t\tRecordID = AutotraderRecord.OriginalInformation.RecordID\n\t)) ~> SQLAutotraderAdvert"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/AutotraderStockManagementJSON')]",
				"[concat(variables('factoryId'), '/datasets/SQLAutotraderCompetitorsTest')]",
				"[concat(variables('factoryId'), '/datasets/SQLAutotraderLocalRetailerRatingsTest')]",
				"[concat(variables('factoryId'), '/datasets/SQLAutotraderMarketSupplyTest')]",
				"[concat(variables('factoryId'), '/datasets/SQLAutotraderValuationsTest')]",
				"[concat(variables('factoryId'), '/datasets/SQLAutotraderAdvertTest')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/CloseITSalesLeads')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "CloseIT_Ext_Sales_Leads",
								"type": "DatasetReference"
							},
							"name": "CloseITExtSalesLeads"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "SQLCloseITRaw_SalesLeads",
								"type": "DatasetReference"
							},
							"name": "SQLCloseITRawSalesLeads"
						}
					],
					"transformations": [],
					"script": "source(output(\n\t\tDealer_ID as short,\n\t\tDeal_ID as integer,\n\t\tDealerName as string,\n\t\tGroupName as string,\n\t\tCustomer_SalesPerson as string,\n\t\tCustomer_ID as integer,\n\t\tCustomer_ProspectURN as string,\n\t\tCustomer_Type as string,\n\t\tCustomer_PostCode as string,\n\t\tCustomer_LeadProviderName as string,\n\t\tCustomer_DateCreated as date 'yyyy-MM-dd',\n\t\tCustomer_ChangeDate as string,\n\t\tCustomer_Status as string,\n\t\tCustomer_DateStatusChanged as string,\n\t\tCustomer_QuickLostReason as string,\n\t\tCustomer_FirstContact as string,\n\t\tCustomer_DateSold as string,\n\t\tCustomer_DateLost as string,\n\t\tDeal_Type as string,\n\t\tDeal_Gap as integer,\n\t\tDeal_Paint as integer,\n\t\tDeal_Warranty as integer,\n\t\tDeal_ClosedDate as string,\n\t\tDeal_BasicPrice as double,\n\t\tDeal_DeilveryCharge as double,\n\t\tDeal_FirstRegFee as double,\n\t\tDeal_RoadTax as double,\n\t\tDesired_Make as string,\n\t\tDesired_Model as string,\n\t\tDeal_Make as string,\n\t\tDeal_Model as string,\n\t\tDeal_ModelVariant as string,\n\t\tDeal_FuelType as string,\n\t\tDeal_GearType as string,\n\t\tDeal_OrderMethod as string,\n\t\tDeal_Colour as string,\n\t\tDeal_Interior as string,\n\t\tDeal_Mileage as integer,\n\t\tDeal_DateConfirmed as string,\n\t\tDeal_ModelYear as double,\n\t\tDeal_Registration as string,\n\t\tDeal_DateOfRegistration as string,\n\t\tDeal_DemoDriven as string,\n\t\tDeal_ServicePayment as string,\n\t\tDeal_ExpectedDeliveryMonth as short,\n\t\tDeal_ExpectedDeliveryYear as short,\n\t\tDeal_ExpectedDeliveryTimeOfMonth as string,\n\t\tDeal_DepositPaymentMethod as string,\n\t\tDeal_FinanceMethod as string,\n\t\tDeal_MonthlyBudget as double,\n\t\tDeal_Deposit as short,\n\t\tDeal_NewFinancedBy as string,\n\t\tPartEx_ID as integer,\n\t\tPartEx_Registration as string,\n\t\tPartEx_Make as string,\n\t\tPartEx_Model as string,\n\t\tPartEx_Variant as string,\n\t\tPartEx_Colour as string,\n\t\tPartEx_DateOfRegistration as string,\n\t\tPartEx_Mileage as integer,\n\t\tPartEx_VatQualifying as integer,\n\t\tPartEx_NumberOfOwners as short,\n\t\tPartEx_ServiceHistory as short,\n\t\tPartEx_SIVAmount as double,\n\t\tInitialContact_Created as string,\n\t\tInitialContact_Type as string,\n\t\tDeal_CancelledDate as string,\n\t\tDeal_HandOverDate as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> CloseITExtSalesLeads\nCloseITExtSalesLeads sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tinput(\n\t\tDealer_ID as integer,\n\t\tDeal_ID as integer,\n\t\tDealerName as string,\n\t\tGroupName as string,\n\t\tCustomer_SalesPerson as string,\n\t\tCustomer_ID as integer,\n\t\tCustomer_ProspectURN as string,\n\t\tCustomer_Type as string,\n\t\tCustomer_PostCode as string,\n\t\tCustomer_LeadProviderName as string,\n\t\tCustomer_DateCreated as timestamp,\n\t\tCustomer_ChangeDate as timestamp,\n\t\tCustomer_Status as string,\n\t\tCustomer_DateStatusChanged as timestamp,\n\t\tCustomer_QuickLostReason as string,\n\t\tCustomer_FirstContact as string,\n\t\tCustomer_DateSold as string,\n\t\tCustomer_DateLost as string,\n\t\tDeal_Type as string,\n\t\tDeal_Gap as integer,\n\t\tDeal_Paint as integer,\n\t\tDeal_Warranty as integer,\n\t\tDeal_ClosedDate as timestamp,\n\t\tDeal_BasicPrice as decimal(18,2),\n\t\tDeal_DeliveryCharge as decimal(18,2),\n\t\tDeal_FirstRegFee as decimal(18,2),\n\t\tDeal_RoadTax as decimal(18,2),\n\t\tDesired_Make as string,\n\t\tDesired_Model as string,\n\t\tDeal_Make as string,\n\t\tDeal_Model as string,\n\t\tDeal_ModelVariant as string,\n\t\tDeal_FuelType as string,\n\t\tDeal_GearType as string,\n\t\tDeal_OrderMethod as string,\n\t\tDeal_Colour as string,\n\t\tDeal_Interior as string,\n\t\tDeal_Mileage as integer,\n\t\tDeal_DateConfirmed as timestamp,\n\t\tDeal_ModelYear as string,\n\t\tDeal_Registration as string,\n\t\tDeal_DateOfRegistration as timestamp,\n\t\tDeal_DemoDriven as string,\n\t\tDeal_ServicePayment as string,\n\t\tDeal_ExpectedDeliveryMonth as integer,\n\t\tDeal_ExpectedDeliveryYear as integer,\n\t\tDeal_ExpectedDeliveryTimeOfMonth as string,\n\t\tDeal_DepositPaymentMethod as string,\n\t\tDeal_FinanceMethod as string,\n\t\tDeal_MonthlyBudget as decimal(18,2),\n\t\tDeal_Deposit as decimal(18,2),\n\t\tDeal_NewFinancedBy as string,\n\t\tPartEx_ID as integer,\n\t\tPartEx_Registration as string,\n\t\tPartEx_Make as string,\n\t\tPartEx_Model as string,\n\t\tPartEx_Variant as string,\n\t\tPartEx_Colour as string,\n\t\tPartEx_DateOfRegistration as timestamp,\n\t\tPartEx_Mileage as integer,\n\t\tPartEx_VatQualifying as integer,\n\t\tPartEx_NumberOfOwners as integer,\n\t\tPartEx_ServiceHistory as integer,\n\t\tPartEx_SIVAmount as decimal(18,2),\n\t\tInitialContact_Created as string,\n\t\tInitialContact_Type as string,\n\t\tDeal_CancelledDate as timestamp,\n\t\tDeal_HandOverDate as timestamp\n\t),\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:false,\n\tupsertable:false,\n\tformat: 'table',\n\tpreSQLs:['truncate table [dbo].[CloseITRaw_SalesLeads]'],\n\tdateFormat:'dd/MM/yyyy',\n\ttimestampFormat:'dd/MM/yyyy',\n\terrorHandlingOption: 'stopOnFirstError',\n\tmapColumn(\n\t\tDealer_ID,\n\t\tDeal_ID,\n\t\tDealerName,\n\t\tGroupName,\n\t\tCustomer_SalesPerson,\n\t\tCustomer_ID,\n\t\tCustomer_ProspectURN,\n\t\tCustomer_Type,\n\t\tCustomer_PostCode,\n\t\tCustomer_LeadProviderName,\n\t\tCustomer_DateCreated,\n\t\tCustomer_ChangeDate,\n\t\tCustomer_Status,\n\t\tCustomer_DateStatusChanged,\n\t\tCustomer_QuickLostReason,\n\t\tCustomer_FirstContact,\n\t\tCustomer_DateSold,\n\t\tCustomer_DateLost,\n\t\tDeal_Type,\n\t\tDeal_Gap,\n\t\tDeal_Paint,\n\t\tDeal_Warranty,\n\t\tDeal_ClosedDate,\n\t\tDeal_BasicPrice,\n\t\tDeal_DeliveryCharge = Deal_DeilveryCharge,\n\t\tDeal_FirstRegFee,\n\t\tDeal_RoadTax,\n\t\tDesired_Make,\n\t\tDesired_Model,\n\t\tDeal_Make,\n\t\tDeal_Model,\n\t\tDeal_ModelVariant,\n\t\tDeal_FuelType,\n\t\tDeal_GearType,\n\t\tDeal_OrderMethod,\n\t\tDeal_Colour,\n\t\tDeal_Interior,\n\t\tDeal_Mileage,\n\t\tDeal_DateConfirmed,\n\t\tDeal_ModelYear,\n\t\tDeal_DateOfRegistration,\n\t\tDeal_DemoDriven,\n\t\tDeal_ServicePayment,\n\t\tDeal_ExpectedDeliveryMonth,\n\t\tDeal_ExpectedDeliveryYear,\n\t\tDeal_ExpectedDeliveryTimeOfMonth,\n\t\tDeal_DepositPaymentMethod,\n\t\tDeal_FinanceMethod,\n\t\tDeal_MonthlyBudget,\n\t\tDeal_Deposit,\n\t\tDeal_NewFinancedBy,\n\t\tPartEx_ID,\n\t\tPartEx_Registration,\n\t\tPartEx_Make,\n\t\tPartEx_Model,\n\t\tPartEx_Variant,\n\t\tPartEx_Colour,\n\t\tPartEx_DateOfRegistration,\n\t\tPartEx_Mileage,\n\t\tPartEx_VatQualifying,\n\t\tPartEx_NumberOfOwners,\n\t\tPartEx_ServiceHistory,\n\t\tPartEx_SIVAmount,\n\t\tInitialContact_Created,\n\t\tInitialContact_Type,\n\t\tDeal_Registration,\n\t\tDeal_CancelledDate,\n\t\tDeal_HandOverDate\n\t)) ~> SQLCloseITRawSalesLeads"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/CloseIT_Ext_Sales_Leads')]",
				"[concat(variables('factoryId'), '/datasets/SQLCloseITRaw_SalesLeads')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DetailedSales')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "DetailedSalesCSV",
								"type": "DatasetReference"
							},
							"name": "DetailedSales"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "SQLDMSVehicleSales_Merge",
								"type": "DatasetReference"
							},
							"name": "SQLDMSDetailedSalesMerge"
						}
					],
					"transformations": [],
					"script": "source(output(\n\t\t{Client ID} as integer,\n\t\t{Dealer ID} as string,\n\t\t{Customer ID} as string,\n\t\t{New or Used} as string,\n\t\t{Vehicle Type} as string,\n\t\t{Vehicle ID} as string,\n\t\t{Stock Number} as string,\n\t\t{Registration Number} as string,\n\t\t{Registration Date} as date,\n\t\t{Dealership Date in Stock} as date,\n\t\tMileage as integer,\n\t\t{Stock Value} as decimal(10,0),\n\t\t{Sale Date} as date,\n\t\t{Invoice Number} as string,\n\t\t{Sales Executive ID} as string,\n\t\t{Full Invoice Value} as decimal(10,0),\n\t\t{Paint Value} as decimal(10,0),\n\t\t{Warranty Value} as decimal(10,0),\n\t\t{GAP Value} as decimal(10,0),\n\t\t{Wheel Protection Value} as decimal(10,0),\n\t\t{Add on Product 1} as decimal(10,0),\n\t\t{Add on Product 2} as decimal(10,0),\n\t\t{Add on Product 3} as decimal(10,0),\n\t\t{Add on Product 4} as decimal(10,0),\n\t\t{Accessory Value} as decimal(10,0),\n\t\tReconditioning as decimal(10,0),\n\t\t{Finance Commission} as decimal(10,0),\n\t\tFinanced as string,\n\t\t{Total Gross Profit} as decimal(10,0),\n\t\t{Sale Type} as string,\n\t\t{Part Exchange Stock Number 1} as string,\n\t\t{Part Exchange Stock Number 2} as string,\n\t\t{Part Exchange Stock Number 3} as string,\n\t\tSource as string,\n\t\t{Vehicle Category Code} as string,\n\t\t{Purchaser ID} as string,\n\t\tSupplier as string,\n\t\t{Available Date} as date,\n\t\t{Accessory Profit} as decimal(10,0),\n\t\t{Paint Profit} as decimal(10,0),\n\t\t{Warranty Profit} as decimal(10,0),\n\t\t{GAP Profit} as decimal(10,0),\n\t\t{Other Profit} as decimal(10,0),\n\t\t{Add On Product 1 Profit} as decimal(10,0),\n\t\t{Add On Product 2 Profit} as decimal(10,0),\n\t\t{Add On Product 3 Profit} as decimal(10,0),\n\t\t{Add On Product 4 Profit} as decimal(10,0),\n\t\t{Volume Bonus} as decimal(10,0),\n\t\t{Other Bonus} as decimal(10,0),\n\t\t{RFL Profit} as decimal(10,0),\n\t\t{Metal Profit} as decimal(10,0),\n\t\t{Metal Invoice Value} as decimal(10,0),\n\t\t{Delivery Date} as date,\n\t\t{Group Purchase Date} as date,\n\t\t{Received Date} as date,\n\t\t{Purchase Account} as string,\n\t\t{Sales Account ID} as string,\n\t\t{Sales Account Name} as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false,\n\trowUrlColumn: 'FileName',\n\tdateFormats: ['dd/MM/yyyy'],\n\twildcardPaths:['Client Folder/*/DetailedVehSales-*.csv']) ~> DetailedSales\nDetailedSales sink(allowSchemaDrift: false,\n\tvalidateSchema: false,\n\tinput(\n\t\tClientID as integer,\n\t\t{Dealer ID} as string,\n\t\t{Customer ID} as string,\n\t\t{New Or Used} as string,\n\t\t{Vehicle Type} as string,\n\t\t{DMS Vehicle ID} as string,\n\t\t{Stock Number} as string,\n\t\t{Registration Number} as string,\n\t\t{Registration Date} as date,\n\t\t{Dealership Date In Stock} as date,\n\t\tMileage as integer,\n\t\t{Stock Value} as decimal(18,2),\n\t\t{Sale Date} as date,\n\t\t{Invoice Number} as integer,\n\t\t{Sales Executive ID} as string,\n\t\t{Full Invoice Value} as decimal(18,2),\n\t\t{Paint Value} as decimal(18,2),\n\t\t{Warranty Value} as decimal(18,2),\n\t\t{Gap Value} as decimal(18,2),\n\t\t{Wheel Protection Value} as decimal(18,2),\n\t\t{Add on Product 1} as decimal(18,2),\n\t\t{Add on Product 2} as decimal(18,2),\n\t\t{Add on Product 3} as decimal(18,2),\n\t\t{Add on Product 4} as decimal(18,2),\n\t\t{Volume Bonus} as decimal(18,2),\n\t\t{Other Bonus} as decimal(18,2),\n\t\t{RFL Profit} as decimal(18,2),\n\t\t{Metal Profit} as decimal(18,2),\n\t\t{Metal Invoice Value} as decimal(18,2),\n\t\t{Delivery Date} as date,\n\t\t{Group Purchase Date} as date,\n\t\t{Received Date} as date,\n\t\t{Purchase Account} as string,\n\t\t{Sales Account ID} as string,\n\t\t{Sales Account Name} as string,\n\t\tFileName as string\n\t),\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:false,\n\tupsertable:false,\n\tformat: 'table',\n\tpreSQLs:['truncate table dbo.DMSVehicleSales_Merge'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\terrorHandlingOption: 'allErrors',\n\ttransactionCommit: 'single',\n\treportSuccessOnError: false,\n\tmapColumn(\n\t\tClientID = {Client ID},\n\t\t{Dealer ID},\n\t\t{Customer ID},\n\t\t{New Or Used} = {New or Used},\n\t\t{Vehicle Type},\n\t\t{DMS Vehicle ID} = {Vehicle ID},\n\t\t{Stock Number},\n\t\t{Registration Number},\n\t\t{Registration Date},\n\t\t{Dealership Date In Stock} = {Dealership Date in Stock},\n\t\tMileage,\n\t\t{Stock Value},\n\t\t{Sale Date},\n\t\t{Invoice Number},\n\t\t{Sales Executive ID},\n\t\t{Full Invoice Value},\n\t\t{Paint Value},\n\t\t{Warranty Value},\n\t\t{Gap Value} = {GAP Value},\n\t\t{Wheel Protection Value},\n\t\t{Add on Product 1},\n\t\t{Add on Product 2},\n\t\t{Add on Product 3},\n\t\t{Add on Product 4},\n\t\t{Volume Bonus},\n\t\t{Other Bonus},\n\t\t{RFL Profit},\n\t\t{Metal Profit},\n\t\t{Metal Invoice Value},\n\t\t{Delivery Date},\n\t\t{Group Purchase Date},\n\t\t{Received Date},\n\t\t{Purchase Account},\n\t\t{Sales Account ID},\n\t\t{Sales Account Name},\n\t\tFileName\n\t)) ~> SQLDMSDetailedSalesMerge"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DetailedSalesCSV')]",
				"[concat(variables('factoryId'), '/datasets/SQLDMSVehicleSales_Merge')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/EnquiryMAX_Enquiries')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "EnquiryMAXEnquiriesJSON",
								"type": "DatasetReference"
							},
							"name": "EnquiryMAXEnquiriesJSON"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "SQLEnquiryMAX_Enquiries",
								"type": "DatasetReference"
							},
							"name": "EnquiryMAXEnquiries"
						}
					],
					"transformations": [
						{
							"name": "EnquiryMAXEnquiriesJSONUpsert"
						},
						{
							"name": "DateConversion"
						}
					],
					"script": "source(output(\n\t\tcreatedDateTime as string,\n\t\tenquiryId as string,\n\t\tcustomerId as string,\n\t\tleadId as string,\n\t\tstatus as (code as string, description as string),\n\t\ttestDrive as (appointmentDate as string, taken as boolean),\n\t\ttype as string,\n\t\tpartExchangeCount as string,\n\t\tsourceOfEnquiry as string,\n\t\tmethodOfContact as string,\n\t\tvehicleOfInterest as (make as string, range as string, model as string, derivative as string, vrm as string, fuelType as string, vehicleCode as string, vehicleCodeType as string, odometer as (unit as string, currentValue as string), stockNumber as string, vin as string),\n\t\tsoldVehicle as (make as string, range as string, model as string, derivative as string, vrm as string, fuelType as string, vehicleCode as string, vehicleCodeType as string, odometer as (unit as string, currentValue as string), stockNumber as string, vin as string),\n\t\tlinks as ({} as string),\n\t\tlostSale as (lostSaleRequested as string, lostSaleAccepted as string, lostSaleReason as string),\n\t\toriginApp as string,\n\t\tenquiryNotes as (description as string, createdDateTime as string, createdByName as string)[],\n\t\tcustomerFinanceDetails as (model as string, registration as string, agreementNo as string, financeProduct as string, term as string, deposit as string, installmentAmount as string, gmfvBalloon as string, annualContractMileage as string, contractStartDate as string, contractEndDate as string, outstandingBalance as string),\n\t\tdeskingDeal as (financeProduct as string, term as string, deposit as string, installmentAmount as string, gmfvBalloon as string, annualContractMileage as string),\n\t\testimatedEquityPosition as (estimatedPxValue as string, estimatedEquity as string)\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false,\n\tdocumentForm: 'documentPerLine') ~> EnquiryMAXEnquiriesJSON\nEnquiryMAXEnquiriesJSON alterRow(upsertIf(isNull(enquiryId)==false())) ~> EnquiryMAXEnquiriesJSONUpsert\nEnquiryMAXEnquiriesJSONUpsert derive(LostSaleRequestedDate = toTimestamp(lostSale.lostSaleRequested,'yyyy-MM-dd\\'T\\'HH:mm:ss'),\n\t\tLostSaleAcceptedDate = toTimestamp(lostSale.lostSaleAccepted,'yyyy-MM-dd\\'T\\'HH:mm:ss')) ~> DateConversion\nDateConversion sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tinput(\n\t\tEnquiryID as string,\n\t\tCustomerID as string,\n\t\tLeadID as string,\n\t\tStatusCode as string,\n\t\tStatusDescription as string,\n\t\tNewOrUsed as string,\n\t\tSourceOfEnquiry as string,\n\t\tMethodOfContact as string,\n\t\tSoldNewOrUsed as string,\n\t\tDeliveryDate as timestamp,\n\t\tOrderDate as timestamp,\n\t\tMake as string,\n\t\tRange as string,\n\t\tModel as string,\n\t\tDerivative as string,\n\t\tRegistrationNumber as string,\n\t\tFuelType as string,\n\t\tMileage as integer,\n\t\tStockNumber as string,\n\t\tLostSaleRequestedDate as timestamp,\n\t\tLostSaleAcceptedDate as timestamp,\n\t\tLostSaleReason as string,\n\t\tuniqueid as integer,\n\t\tClientID as integer\n\t),\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:false,\n\tupsertable:true,\n\tkeys:['EnquiryID'],\n\tformat: 'table',\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\terrorHandlingOption: 'stopOnFirstError',\n\tmapColumn(\n\t\tCustomerID = customerId,\n\t\tLeadID = leadId,\n\t\tStatusCode = status.code,\n\t\tStatusDescription = status.description,\n\t\tNewOrUsed = type,\n\t\tSourceOfEnquiry = sourceOfEnquiry,\n\t\tMethodOfContact = methodOfContact,\n\t\tMake = soldVehicle.make,\n\t\tRange = soldVehicle.range,\n\t\tModel = soldVehicle.model,\n\t\tDerivative = soldVehicle.derivative,\n\t\tRegistrationNumber = soldVehicle.vrm,\n\t\tFuelType = soldVehicle.fuelType,\n\t\tMileage = soldVehicle.odometer.currentValue,\n\t\tStockNumber = soldVehicle.stockNumber,\n\t\tLostSaleRequestedDate,\n\t\tLostSaleAcceptedDate = lostSale.lostSaleAccepted,\n\t\tLostSaleReason = lostSale.lostSaleReason,\n\t\tEnquiryID = enquiryId\n\t)) ~> EnquiryMAXEnquiries"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/EnquiryMAXEnquiriesJSON')]",
				"[concat(variables('factoryId'), '/datasets/SQLEnquiryMAX_Enquiries')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/GetSourceInformation')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "RTC_Ext_BI_Inspection_vISItems",
								"type": "DatasetReference"
							},
							"name": "source1"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "ExternalSchemas",
								"type": "DatasetReference"
							},
							"name": "sink1"
						}
					],
					"transformations": [],
					"script": "source(output(\n\t\tTABLE_CATALOG as string,\n\t\tTABLE_SCHEMA as string,\n\t\tTABLE_NAME as string,\n\t\tCOLUMN_NAME as string,\n\t\tORDINAL_POSITION as integer,\n\t\tCOLUMN_DEFAULT as string,\n\t\tIS_NULLABLE as string,\n\t\tDATA_TYPE as string,\n\t\tCHARACTER_MAXIMUM_LENGTH as integer,\n\t\tCHARACTER_OCTET_LENGTH as integer,\n\t\tNUMERIC_PRECISION as integer,\n\t\tNUMERIC_PRECISION_RADIX as short,\n\t\tNUMERIC_SCALE as integer,\n\t\tDATETIME_PRECISION as short,\n\t\tCHARACTER_SET_CATALOG as string,\n\t\tCHARACTER_SET_SCHEMA as string,\n\t\tCHARACTER_SET_NAME as string,\n\t\tCOLLATION_CATALOG as string,\n\t\tCOLLATION_SCHEMA as string,\n\t\tCOLLATION_NAME as string,\n\t\tDOMAIN_CATALOG as string,\n\t\tDOMAIN_SCHEMA as string,\n\t\tDOMAIN_NAME as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tquery: 'select * from information_schema.columns',\n\tformat: 'query') ~> source1\nsource1 sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tinput(\n\t\ttable_catalog as string,\n\t\ttable_schema as string,\n\t\ttable_name as string,\n\t\tcolumn_name as string,\n\t\tordinal_position as integer,\n\t\tcolumn_default as string,\n\t\tis_nullable as string,\n\t\tdata_type as string,\n\t\tCHARACTER_MAXIMUM_LENGTH as integer,\n\t\tCHARACTER_OCTET_LENGTH as integer,\n\t\tNUMERIC_PRECISION as integer,\n\t\tNUMERIC_PRECISION_RADIX as integer,\n\t\tNUMERIC_SCALE as integer,\n\t\tDATETIME_PRECISION as integer,\n\t\tCHARACTER_SET_CATALOG as string,\n\t\tCHARACTER_SET_SCHEMA as string,\n\t\tCHARACTER_SET_NAME as string,\n\t\tCOLLATION_CATALOG as string,\n\t\tCOLLATION_SCHEMA as string,\n\t\tCOLLATION_NAME as string,\n\t\tDOMAIN_CATALOG as string,\n\t\tDOMAIN_SCHEMA as string,\n\t\tDOMAIN_NAME as string\n\t),\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:false,\n\tupsertable:false,\n\tformat: 'table',\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\terrorHandlingOption: 'stopOnFirstError',\n\tmapColumn(\n\t\ttable_catalog = TABLE_CATALOG,\n\t\ttable_schema = TABLE_SCHEMA,\n\t\ttable_name = TABLE_NAME,\n\t\tcolumn_name = COLUMN_NAME,\n\t\tordinal_position = ORDINAL_POSITION,\n\t\tcolumn_default = COLUMN_DEFAULT,\n\t\tis_nullable = IS_NULLABLE,\n\t\tdata_type = DATA_TYPE,\n\t\tCHARACTER_MAXIMUM_LENGTH,\n\t\tCHARACTER_OCTET_LENGTH,\n\t\tNUMERIC_PRECISION,\n\t\tNUMERIC_PRECISION_RADIX,\n\t\tNUMERIC_SCALE,\n\t\tDATETIME_PRECISION,\n\t\tCHARACTER_SET_CATALOG,\n\t\tCHARACTER_SET_SCHEMA,\n\t\tCHARACTER_SET_NAME,\n\t\tCOLLATION_CATALOG,\n\t\tCOLLATION_SCHEMA,\n\t\tCOLLATION_NAME,\n\t\tDOMAIN_CATALOG,\n\t\tDOMAIN_SCHEMA,\n\t\tDOMAIN_NAME\n\t)) ~> sink1"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/RTC_Ext_BI_Inspection_vISItems')]",
				"[concat(variables('factoryId'), '/datasets/ExternalSchemas')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PeterVardyDetailedSales')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "PeterVardyDetailedSalesCSV",
								"type": "DatasetReference"
							},
							"name": "PeterVardyDetailedSales"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "SQLDMSVehicleSales",
								"type": "DatasetReference"
							},
							"name": "SQLDMSDetailedSales"
						}
					],
					"transformations": [
						{
							"name": "DerivedColumn1"
						}
					],
					"script": "source(output(\n\t\t{Client ID} as string,\n\t\tDealer as string,\n\t\t{Cust ID} as string,\n\t\tTitle as string,\n\t\tforename as string,\n\t\tSurname as string,\n\t\temail as string,\n\t\t{home phone} as string,\n\t\tmobile as string,\n\t\t{add 1} as string,\n\t\t{add 2} as string,\n\t\t{add 3} as string,\n\t\t{add 4} as string,\n\t\tpostcode as string,\n\t\t{New or Used} as string,\n\t\ttype as string,\n\t\t{Veh Magic} as string,\n\t\t{stock no} as string,\n\t\tchassis as string,\n\t\t{reg no} as string,\n\t\t{reg date} as date 'dd/MM/yyyy',\n\t\t{date in stock} as date 'dd/MM/yyyy',\n\t\t{CAP VIN} as string,\n\t\t{CAP code} as string,\n\t\tmake as string,\n\t\tmodel as string,\n\t\tderivative as string,\n\t\t{engine size} as string,\n\t\tbodystyle as string,\n\t\tmileage as integer,\n\t\tfuel as string,\n\t\ttransmission as string,\n\t\t{generic colour} as string,\n\t\t{specific colour} as string,\n\t\tdoors as string,\n\t\tSIV as string,\n\t\t{sale date} as date,\n\t\t{inv number} as integer,\n\t\t{sales exec} as string,\n\t\t{full inv value} as string,\n\t\tpaint as string,\n\t\twarr as string,\n\t\tGAP as string,\n\t\tAcc as string,\n\t\trecon as string,\n\t\t{Finance commission} as string,\n\t\tprofit as string,\n\t\t{Sale type} as string,\n\t\tPX1 as string,\n\t\tPX2 as string,\n\t\tPX3 as string,\n\t\tSource as string,\n\t\t{Model Analysis Code} as string,\n\t\tPurchaser as string,\n\t\t{Supplier Name} as string,\n\t\t{Purchase Invoice Date} as date 'dd/MM/yyyy',\n\t\t{Available Date} as date 'dd/MM/yyyy',\n\t\t{Accessory Profit} as string,\n\t\t{Paint Profit} as string,\n\t\t{Warr Profit} as string,\n\t\t{Gap Profit} as string,\n\t\t{Other Profit} as string,\n\t\t{Volume Bonus} as string,\n\t\tBonus as string,\n\t\t{RFL Profit} as string,\n\t\t{Metal Profit} as string,\n\t\t{Vehicle Invoice Value} as string,\n\t\t{Delivery Date} as date 'dd/MM/yyyy',\n\t\t{Group Purchase Date} as date 'dd/MM/yyyy',\n\t\t{Received Date} as date 'dd/MM/yyyy',\n\t\t{Date In Group} as date 'dd/MM/yyyy',\n\t\t{Purchase Account} as string,\n\t\t{Supplier Name2} as string,\n\t\t{Fuel Type} as string,\n\t\t{Sales Account ID} as string,\n\t\t{Sales Account Name} as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false,\n\tdateFormats: ['dd/MM/yyyy']) ~> PeterVardyDetailedSales\nPeterVardyDetailedSales derive({Cust ID} = trim({Cust ID})) ~> DerivedColumn1\nDerivedColumn1 sink(allowSchemaDrift: false,\n\tvalidateSchema: false,\n\tinput(\n\t\tClientID as integer,\n\t\tDealer as string,\n\t\tCustId as string,\n\t\tTitle as string,\n\t\tForename as string,\n\t\tSurname as string,\n\t\tEmail as string,\n\t\tHomePhone as string,\n\t\tMobile as string,\n\t\tAdd1 as string,\n\t\tAdd2 as string,\n\t\tAdd3 as string,\n\t\tAdd4 as string,\n\t\tPostcode as string,\n\t\tNewOrUsed as string,\n\t\tType as string,\n\t\tVehMagic as string,\n\t\tStockNo as string,\n\t\tChassis as string,\n\t\tRegistrationNo as string,\n\t\tRegistrationDate as date,\n\t\tDateInStock as date,\n\t\tCapVin as string,\n\t\tCapCode as string,\n\t\tMake as string,\n\t\tModel as string,\n\t\tDerivative as string,\n\t\tEngineSize as string,\n\t\tBodystyle as string,\n\t\tMileage as integer,\n\t\tFuel as string,\n\t\tTransmission as string,\n\t\tGenericColour as string,\n\t\tSpecificColour as string,\n\t\tDoors as string,\n\t\tSiv as double,\n\t\tSaleDate as date,\n\t\tInvNumber as integer,\n\t\tSalesExec as string,\n\t\tFullInvValue as double,\n\t\tPaint as double,\n\t\tWarr as double,\n\t\tGap as double,\n\t\tAcc as double,\n\t\tRecon as double,\n\t\tFinanceCommission as double,\n\t\tProfit as double,\n\t\tSaleType as string,\n\t\tPx1 as string,\n\t\tPx2 as string,\n\t\tPx3 as string,\n\t\tSource as string,\n\t\tModelAnalysisCode as string,\n\t\tPurchaser as string,\n\t\tSupplierName as string,\n\t\tPurchaseInvoiceDate as date,\n\t\tAvailableDate as date,\n\t\tAccessoryProfit as double,\n\t\tPaintProfit as double,\n\t\tWarrProfit as double,\n\t\tGapProfit as double,\n\t\tOtherProfit as double,\n\t\tVolumeBonus as double,\n\t\tBonus as double,\n\t\tRflProfit as double,\n\t\tMetalProfit as double,\n\t\tVehicleInvoiceValue as double,\n\t\tDeliveryDate as date,\n\t\tGroupPurchaseDate as date,\n\t\tReceivedDate as date,\n\t\tDateInGroup as date,\n\t\tPurchaseAccount as string,\n\t\tFuelTypeID as string,\n\t\tSalesAccountID as string,\n\t\tSalesAccountName as string\n\t),\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:false,\n\tupsertable:false,\n\ttruncate:true,\n\tformat: 'table',\n\tpreSQLs:['truncate table dbo.DMSVehicleSales'],\n\tpostSQLs:['update dbo.DMSVehicleSales set ClientID = 10000 where ClientID is null'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\terrorHandlingOption: 'allErrors',\n\ttransactionCommit: 'single',\n\treportSuccessOnError: false,\n\tmapColumn(\n\t\tDealer,\n\t\tCustId = {Cust ID},\n\t\tTitle,\n\t\tForename = forename,\n\t\tSurname,\n\t\tEmail = email,\n\t\tHomePhone = {home phone},\n\t\tMobile = mobile,\n\t\tAdd1 = {add 1},\n\t\tAdd2 = {add 2},\n\t\tAdd3 = {add 3},\n\t\tAdd4 = {add 4},\n\t\tPostcode = postcode,\n\t\tNewOrUsed = {New or Used},\n\t\tType = type,\n\t\tVehMagic = {Veh Magic},\n\t\tStockNo = {stock no},\n\t\tChassis = chassis,\n\t\tRegistrationNo = {reg no},\n\t\tRegistrationDate = {reg date},\n\t\tDateInStock = {date in stock},\n\t\tCapVin = {CAP VIN},\n\t\tCapCode = {CAP code},\n\t\tMake = make,\n\t\tModel = model,\n\t\tDerivative = derivative,\n\t\tEngineSize = {engine size},\n\t\tBodystyle = bodystyle,\n\t\tMileage = mileage,\n\t\tFuel = fuel,\n\t\tTransmission = transmission,\n\t\tGenericColour = {generic colour},\n\t\tSpecificColour = {specific colour},\n\t\tDoors = doors,\n\t\tSiv = SIV,\n\t\tSaleDate = {sale date},\n\t\tInvNumber = {inv number},\n\t\tSalesExec = {sales exec},\n\t\tFullInvValue = {full inv value},\n\t\tPaint = paint,\n\t\tWarr = warr,\n\t\tGap = GAP,\n\t\tAcc,\n\t\tRecon = recon,\n\t\tFinanceCommission = {Finance commission},\n\t\tProfit = profit,\n\t\tSaleType = {Sale type},\n\t\tPx1 = PX1,\n\t\tPx2 = PX2,\n\t\tPx3 = PX3,\n\t\tSource,\n\t\tModelAnalysisCode = {Model Analysis Code},\n\t\tPurchaser,\n\t\tSupplierName = {Supplier Name},\n\t\tPurchaseInvoiceDate = {Purchase Invoice Date},\n\t\tAvailableDate = {Available Date},\n\t\tAccessoryProfit = {Accessory Profit},\n\t\tPaintProfit = {Paint Profit},\n\t\tWarrProfit = {Warr Profit},\n\t\tGapProfit = {Gap Profit},\n\t\tOtherProfit = {Other Profit},\n\t\tVolumeBonus = {Volume Bonus},\n\t\tBonus,\n\t\tRflProfit = {RFL Profit},\n\t\tMetalProfit = {Metal Profit},\n\t\tVehicleInvoiceValue = {Vehicle Invoice Value},\n\t\tDeliveryDate = {Delivery Date},\n\t\tGroupPurchaseDate = {Group Purchase Date},\n\t\tReceivedDate = {Received Date},\n\t\tDateInGroup = {Date In Group},\n\t\tPurchaseAccount = {Purchase Account},\n\t\tFuelTypeID = {Fuel Type},\n\t\tSalesAccountID = {Sales Account ID},\n\t\tSalesAccountName = {Sales Account Name}\n\t)) ~> SQLDMSDetailedSales"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/PeterVardyDetailedSalesCSV')]",
				"[concat(variables('factoryId'), '/datasets/SQLDMSVehicleSales')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PeterVardyDetailedSales_Older')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "PeterVardyDetailedSalesCSV_Older",
								"type": "DatasetReference"
							},
							"name": "PeterVardyDetailedSales"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "SQLDMSVehicleSales_Older",
								"type": "DatasetReference"
							},
							"name": "SQLDMSDetailedSales"
						}
					],
					"transformations": [
						{
							"name": "DerivedColumn1"
						}
					],
					"script": "source(output(\n\t\t{Client ID} as string,\n\t\tDealer as string,\n\t\t{Cust ID} as string,\n\t\tTitle as string,\n\t\tforename as string,\n\t\tSurname as string,\n\t\temail as string,\n\t\t{home phone} as string,\n\t\tmobile as string,\n\t\t{add 1} as string,\n\t\t{add 2} as string,\n\t\t{add 3} as string,\n\t\t{add 4} as string,\n\t\tpostcode as string,\n\t\t{New or Used} as string,\n\t\ttype as string,\n\t\t{Veh Magic} as string,\n\t\t{stock no} as string,\n\t\tchassis as string,\n\t\t{reg no} as string,\n\t\t{reg date} as date,\n\t\t{date in stock} as date,\n\t\t{CAP VIN} as string,\n\t\t{CAP code} as string,\n\t\tmake as string,\n\t\tmodel as string,\n\t\tderivative as string,\n\t\t{engine size} as string,\n\t\tbodystyle as string,\n\t\tmileage as string,\n\t\tfuel as string,\n\t\ttransmission as string,\n\t\t{generic colour} as string,\n\t\t{specific colour} as string,\n\t\tdoors as string,\n\t\tSIV as string,\n\t\t{sale date} as date,\n\t\t{inv number} as string,\n\t\t{sales exec} as string,\n\t\t{full inv value} as string,\n\t\tpaint as string,\n\t\twarr as string,\n\t\tGAP as string,\n\t\tAcc as string,\n\t\trecon as string,\n\t\t{Finance commission} as string,\n\t\tprofit as string,\n\t\t{Sale type} as string,\n\t\tPX1 as string,\n\t\tPX2 as string,\n\t\tPX3 as string,\n\t\tSource as string,\n\t\t{Model Analysis Code} as string,\n\t\tPurchaser as string,\n\t\t{Supplier Name} as string,\n\t\t{Purchase Invoice Date} as date,\n\t\t{Available Date} as date,\n\t\t{Accessory Profit} as string,\n\t\t{Paint Profit} as string,\n\t\t{Warr Profit} as string,\n\t\t{Gap Profit} as string,\n\t\t{Other Profit} as string,\n\t\t{Volume Bonus} as string,\n\t\tBonus as string,\n\t\t{RFL Profit} as string,\n\t\t{Metal Profit} as string,\n\t\t{Vehicle Invoice Value} as string,\n\t\t{Delivery Date} as date,\n\t\t{Sales Account ID} as string,\n\t\t{Sales Account Name} as string\n\t),\n\tallowSchemaDrift: false,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false,\n\tdateFormats: ['dd/MM/yyyy']) ~> PeterVardyDetailedSales\nPeterVardyDetailedSales derive({Cust ID} = trim({Cust ID})) ~> DerivedColumn1\nDerivedColumn1 sink(allowSchemaDrift: false,\n\tvalidateSchema: false,\n\tinput(\n\t\tClientID as integer,\n\t\tDealer as string,\n\t\tCustId as string,\n\t\tTitle as string,\n\t\tForename as string,\n\t\tSurname as string,\n\t\tEmail as string,\n\t\tHomePhone as string,\n\t\tMobile as string,\n\t\tAdd1 as string,\n\t\tAdd2 as string,\n\t\tAdd3 as string,\n\t\tAdd4 as string,\n\t\tPostcode as string,\n\t\tNewOrUsed as string,\n\t\tType as string,\n\t\tVehMagic as string,\n\t\tStockNo as string,\n\t\tChassis as string,\n\t\tRegistrationNo as string,\n\t\tRegistrationDate as date,\n\t\tDateInStock as date,\n\t\tCapVin as string,\n\t\tCapCode as string,\n\t\tMake as string,\n\t\tModel as string,\n\t\tDerivative as string,\n\t\tEngineSize as string,\n\t\tBodystyle as string,\n\t\tMileage as integer,\n\t\tFuel as string,\n\t\tTransmission as string,\n\t\tGenericColour as string,\n\t\tSpecificColour as string,\n\t\tDoors as string,\n\t\tSiv as double,\n\t\tSaleDate as date,\n\t\tInvNumber as integer,\n\t\tSalesExec as string,\n\t\tFullInvValue as double,\n\t\tPaint as double,\n\t\tWarr as double,\n\t\tGap as double,\n\t\tAcc as double,\n\t\tRecon as double,\n\t\tFinanceCommission as double,\n\t\tProfit as double,\n\t\tSaleType as string,\n\t\tPx1 as string,\n\t\tPx2 as string,\n\t\tPx3 as string,\n\t\tSource as string,\n\t\tModelAnalysisCode as string,\n\t\tPurchaser as string,\n\t\tSupplierName as string,\n\t\tPurchaseInvoiceDate as date,\n\t\tAvailableDate as date,\n\t\tAccessoryProfit as double,\n\t\tPaintProfit as double,\n\t\tWarrProfit as double,\n\t\tGapProfit as double,\n\t\tOtherProfit as double,\n\t\tVolumeBonus as double,\n\t\tBonus as double,\n\t\tRflProfit as double,\n\t\tMetalProfit as double,\n\t\tVehicleInvoiceValue as double,\n\t\tDeliveryDate as date,\n\t\tSalesAccountID as string,\n\t\tSalesAccountName as string\n\t),\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:false,\n\tupsertable:false,\n\ttruncate:true,\n\tformat: 'table',\n\tpreSQLs:['truncate table dbo.DMSVehicleSales_Older'],\n\tpostSQLs:['update dbo.DMSVehicleSales_Older set ClientID = 10000 where ClientID is null'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\terrorHandlingOption: 'stopOnFirstError',\n\tmapColumn(\n\t\tDealer,\n\t\tCustId = {Cust ID},\n\t\tTitle,\n\t\tForename = forename,\n\t\tSurname,\n\t\tEmail = email,\n\t\tHomePhone = {home phone},\n\t\tMobile = mobile,\n\t\tAdd1 = {add 1},\n\t\tAdd2 = {add 2},\n\t\tAdd3 = {add 3},\n\t\tAdd4 = {add 4},\n\t\tPostcode = postcode,\n\t\tNewOrUsed = {New or Used},\n\t\tType = type,\n\t\tVehMagic = {Veh Magic},\n\t\tStockNo = {stock no},\n\t\tChassis = chassis,\n\t\tRegistrationNo = {reg no},\n\t\tRegistrationDate = {reg date},\n\t\tDateInStock = {date in stock},\n\t\tCapVin = {CAP VIN},\n\t\tCapCode = {CAP code},\n\t\tMake = make,\n\t\tModel = model,\n\t\tDerivative = derivative,\n\t\tEngineSize = {engine size},\n\t\tBodystyle = bodystyle,\n\t\tMileage = mileage,\n\t\tFuel = fuel,\n\t\tTransmission = transmission,\n\t\tGenericColour = {generic colour},\n\t\tSpecificColour = {specific colour},\n\t\tDoors = doors,\n\t\tSiv = SIV,\n\t\tSaleDate = {sale date},\n\t\tInvNumber = {inv number},\n\t\tSalesExec = {sales exec},\n\t\tFullInvValue = {full inv value},\n\t\tPaint = paint,\n\t\tWarr = warr,\n\t\tGap = GAP,\n\t\tAcc,\n\t\tRecon = recon,\n\t\tFinanceCommission = {Finance commission},\n\t\tProfit = profit,\n\t\tSaleType = {Sale type},\n\t\tPx1 = PX1,\n\t\tPx2 = PX2,\n\t\tPx3 = PX3,\n\t\tSource,\n\t\tModelAnalysisCode = {Model Analysis Code},\n\t\tPurchaser,\n\t\tSupplierName = {Supplier Name},\n\t\tPurchaseInvoiceDate = {Purchase Invoice Date},\n\t\tAvailableDate = {Available Date},\n\t\tAccessoryProfit = {Accessory Profit},\n\t\tPaintProfit = {Paint Profit},\n\t\tWarrProfit = {Warr Profit},\n\t\tGapProfit = {Gap Profit},\n\t\tOtherProfit = {Other Profit},\n\t\tVolumeBonus = {Volume Bonus},\n\t\tBonus,\n\t\tRflProfit = {RFL Profit},\n\t\tMetalProfit = {Metal Profit},\n\t\tVehicleInvoiceValue = {Vehicle Invoice Value},\n\t\tDeliveryDate = {Delivery Date},\n\t\tClientID = {Client ID},\n\t\tSalesAccountID = {Sales Account ID},\n\t\tSalesAccountName = {Sales Account Name}\n\t)) ~> SQLDMSDetailedSales"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/PeterVardyDetailedSalesCSV_Older')]",
				"[concat(variables('factoryId'), '/datasets/SQLDMSVehicleSales_Older')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PeterVardyEnquiryMAX')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "PeterVardyEnquiryMaxCSV",
								"type": "DatasetReference"
							},
							"name": "PeterVardyEnquiryMAX"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "SQLEnquiryMax",
								"type": "DatasetReference"
							},
							"name": "SQLPeterVardyEnquiryMAX"
						}
					],
					"transformations": [],
					"script": "source(output(\n\t\tBranch as string,\n\t\t{Sales Type} as string,\n\t\t{Enquiry No} as string,\n\t\t{Customer Title} as string,\n\t\t{Customer Forename} as string,\n\t\t{Customer Surname} as string,\n\t\t{Company Name} as string,\n\t\tEmail as string,\n\t\t{Home Phone} as string,\n\t\t{Mobile Phone} as string,\n\t\t{Work Phone} as string,\n\t\tPostcode as string,\n\t\t{Enquiry Created} as string,\n\t\t{Enquiry Type} as string,\n\t\t{Sales Executive} as string,\n\t\t{Business Manager} as string,\n\t\t{N/U} as string,\n\t\t{Vehicle Type} as string,\n\t\tMake as string,\n\t\tRange as string,\n\t\tModel as string,\n\t\tDerivative as string,\n\t\t{Registration No} as string,\n\t\t{Registration Date} as string,\n\t\t{Stock No} as string,\n\t\t{Group Date in Stock} as string,\n\t\t{Branch Date in Stock} as string,\n\t\t{First Order Date} as string,\n\t\t{Enquiry Status} as string,\n\t\t{Invoiced Date} as string,\n\t\t{Expected Delivery Date} as string,\n\t\t{Delivery Date} as string,\n\t\t{Delivery Category} as string,\n\t\t{Metal Only} as string,\n\t\t{OTR Price exc Ins} as string,\n\t\t{Total Goods & Services inc Ins} as string,\n\t\tFinanced as string,\n\t\t{Finance Provider} as string,\n\t\t{Fin Type} as string,\n\t\t{Finance Scheme} as string,\n\t\t{Loan Term} as string,\n\t\tAPR as string,\n\t\t{Flat Rate} as string,\n\t\t{Finance Balance} as string,\n\t\t{Volume Bonus} as string,\n\t\tCommission as string,\n\t\t{DOC Fee} as string,\n\t\t{Finance Subsidy} as string,\n\t\t{Total Fin Margin} as string,\n\t\tGAP as string,\n\t\t{GAP Product} as string,\n\t\tWar as string,\n\t\t{War Product} as string,\n\t\tExt as string,\n\t\t{Ext Product} as string,\n\t\tPaint as string,\n\t\t{Paint Product} as string,\n\t\t{Total Ins Margin} as string,\n\t\t{Total F & I Margin} as string,\n\t\t{Volume Bonus Central} as string,\n\t\t{DOC Fee Central} as string,\n\t\t{Total Central Income} as string,\n\t\t{Days in Stock} as string,\n\t\t{Last Advertised Price} as string,\n\t\t{Model Analysis Code} as string,\n\t\tSIV as string,\n\t\t{Stock No66} as string,\n\t\t{Chassis No} as string,\n\t\t{Engine Size} as string,\n\t\t{Body Style} as string,\n\t\tMileage as string,\n\t\t{Fuel Type} as string,\n\t\tTransmission as string,\n\t\tColour as string,\n\t\t{Trim Type} as string,\n\t\t{Number of Doors} as string,\n\t\t{Gross Profit} as string,\n\t\t{Reconditioning Cost} as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> PeterVardyEnquiryMAX\nPeterVardyEnquiryMAX sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tinput(\n\t\tClientID as integer,\n\t\tDealershipID as string,\n\t\tSalesType as string,\n\t\tEnquiryNo as integer,\n\t\tCustomerTitle as string,\n\t\tCustomerForename as string,\n\t\tCustomerSurname as string,\n\t\tCompanyName as string,\n\t\tEmail as string,\n\t\tHomePhone as string,\n\t\tMobilePhone as string,\n\t\tWorkPhone as string,\n\t\tPostcode as string,\n\t\tEnquiryCreatedDate as date,\n\t\tEnquiryType as string,\n\t\tSalesExecutive as string,\n\t\tBusinessManager as string,\n\t\tNewOrUsed as string,\n\t\tVehicleType as string,\n\t\tMake as string,\n\t\tRange as string,\n\t\tModel as string,\n\t\tDerivative as string,\n\t\tRegistrationNo as string,\n\t\tRegistrationDate as date,\n\t\tStockNo as string,\n\t\tGroupDateInStock as date,\n\t\tBranchDateInStock as date,\n\t\tFirstOrderDate as date,\n\t\tEnquiryStatus as string,\n\t\tInvoicedDate as date,\n\t\tExpectedDeliveryDate as date,\n\t\tDeliveryDate as date,\n\t\tDeliveryCategory as string,\n\t\tMetalOnly as double,\n\t\tOTRPriceExcIns as double,\n\t\tTotalGoodsAndServicesIncIns as double,\n\t\tFinanced as string,\n\t\tFinanceProvider as string,\n\t\tFinanceType as string,\n\t\tFinanceScheme as string,\n\t\tLoanTerm as integer,\n\t\tAPR as double,\n\t\tFlatRate as string,\n\t\tFinanceBalance as double,\n\t\tVolumeBonus as double,\n\t\tCommission as double,\n\t\tDocFee as double,\n\t\tFinanceSubsidy as double,\n\t\tTotalFinanceMargin as double,\n\t\tGAP as double,\n\t\tGapProduct as string,\n\t\tWarranty as double,\n\t\tWarrantyProduct as string,\n\t\tExtras as double,\n\t\tExtrasProduct as string,\n\t\tPaint as double,\n\t\tPaintProduct as string,\n\t\tTotalInsMargin as double,\n\t\tTotalFandIMargin as double,\n\t\tVolumeBonusCentral as double,\n\t\tDOCFeeCentral as double,\n\t\tTotalCentralIncome as double,\n\t\tDaysInStock as integer,\n\t\tLastAdvertisedPrice as double,\n\t\tModelAnalysisCode as string,\n\t\tSIV as double,\n\t\tStockNo2 as string,\n\t\tChassisNo as string,\n\t\tEngineSize as string,\n\t\tBodyStyle as string,\n\t\tMileage as integer,\n\t\tFuelType as string,\n\t\tTransmission as string,\n\t\tColour as string,\n\t\tTrimType as string,\n\t\tNumberOfDoors as integer,\n\t\tGrossProfit as double,\n\t\tReconditioningCost as double\n\t),\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:false,\n\tupsertable:false,\n\ttruncate:true,\n\tformat: 'table',\n\tpreSQLs:['truncate table dbo.enquirymaxsales'],\n\tpostSQLs:['update dbo.EnquiryMAXSales set clientid = 10000 where clientid is null'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\terrorHandlingOption: 'stopOnFirstError',\n\tmapColumn(\n\t\tEmail,\n\t\tPostcode,\n\t\tMake,\n\t\tRange,\n\t\tModel,\n\t\tDerivative,\n\t\tFinanced,\n\t\tTransmission,\n\t\tColour\n\t)) ~> SQLPeterVardyEnquiryMAX"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/PeterVardyEnquiryMaxCSV')]",
				"[concat(variables('factoryId'), '/datasets/SQLEnquiryMax')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PeterVardyPartsSales')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "PeterVardyPartsSalesCSV",
								"type": "DatasetReference"
							},
							"name": "PeterVardyPartsSales"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "SQLDMSPartsSales",
								"type": "DatasetReference"
							},
							"name": "SQLDMSPartsSales"
						}
					],
					"transformations": [],
					"script": "source(output(\n\t\tco as string,\n\t\tST as string,\n\t\tdesc as string,\n\t\tFran as string,\n\t\t{Part number} as string,\n\t\t{Retail Value} as float,\n\t\t{Sale Value} as float,\n\t\t{Cost Value} as float,\n\t\t{Gross Profit} as float,\n\t\t{GP%} as float,\n\t\t{WIP No} as string,\n\t\t{Anal code} as string,\n\t\t{Order quantity} as float,\n\t\t{Selling pric} as float,\n\t\tDate as date 'dd/MM/yyyy',\n\t\t{Product group} as string,\n\t\tDept as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> PeterVardyPartsSales\nPeterVardyPartsSales sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tinput(\n\t\tClientID as integer,\n\t\tDepartmentID as string,\n\t\tSaleType as string,\n\t\tSaleTypeDescription as string,\n\t\tFranchise as string,\n\t\tPartNumber as string,\n\t\tRetailValue as double,\n\t\tSaleValue as double,\n\t\tCostValue as double,\n\t\tGrossProfit as double,\n\t\tGrossProfitPercentage as double,\n\t\tWIPNo as string,\n\t\tAnalysisCode as string,\n\t\tOrderQuantity as double,\n\t\tSellingPrice as double,\n\t\tSalesDate as date,\n\t\tProductGroup as string,\n\t\tAftersalesDepartment as string\n\t),\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:false,\n\tupsertable:false,\n\ttruncate:true,\n\tformat: 'table',\n\tpostSQLs:['update dbo.dmspartssales set clientid = 10000 where clientid is null'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\terrorHandlingOption: 'stopOnFirstError',\n\tmapColumn(\n\t\tDepartmentID = co,\n\t\tSaleType = ST,\n\t\tSaleTypeDescription = desc,\n\t\tFranchise = Fran,\n\t\tPartNumber = {Part number},\n\t\tRetailValue = {Retail Value},\n\t\tSaleValue = {Sale Value},\n\t\tCostValue = {Cost Value},\n\t\tGrossProfit = {Gross Profit},\n\t\tGrossProfitPercentage = {GP%},\n\t\tWIPNo = {WIP No},\n\t\tAnalysisCode = {Anal code},\n\t\tOrderQuantity = {Order quantity},\n\t\tSellingPrice = {Selling pric},\n\t\tSalesDate = Date,\n\t\tProductGroup = {Product group},\n\t\tAftersalesDepartment = Dept\n\t)) ~> SQLDMSPartsSales"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/PeterVardyPartsSalesCSV')]",
				"[concat(variables('factoryId'), '/datasets/SQLDMSPartsSales')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PeterVardySOBI1')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "PeterVardyWorkshopSalesCSV",
								"type": "DatasetReference"
							},
							"name": "PeterVardyWorkshopSales"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "SQLDMSWorkshopSales",
								"type": "DatasetReference"
							},
							"name": "SQLDMSWorkshopSales"
						}
					],
					"transformations": [],
					"script": "source(output(\n\t\t{S/Type} as string,\n\t\t{Invoice No} as string,\n\t\t{WIP No} as string,\n\t\t{RTS code} as string,\n\t\tSold as float,\n\t\tTaken as float,\n\t\tEff as float,\n\t\t{Sale Value} as float,\n\t\t{Rec Rate} as float,\n\t\tMech as string,\n\t\tLA as string,\n\t\tLT as string,\n\t\tco as string,\n\t\t{Operator name} as string,\n\t\t{Franchise code} as string,\n\t\t{Chassis number} as string,\n\t\t{Registration number.} as string,\n\t\t{Date editted} as date 'dd/MM/yyyy',\n\t\tTmagic as integer,\n\t\tVmagic as integer\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> PeterVardyWorkshopSales\nPeterVardyWorkshopSales sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tinput(\n\t\tClientID as integer,\n\t\tSalesType as string,\n\t\tInvoiceNo as string,\n\t\tWIPNo as string,\n\t\tRTSCode as string,\n\t\tHoursSold as double,\n\t\tHoursTaken as double,\n\t\tEfficiency as double,\n\t\tSaleValue as double,\n\t\tRecoveryRate as double,\n\t\tTechnician as string,\n\t\tLA as string,\n\t\tLT as string,\n\t\tDealershipID as string,\n\t\tOperatorName as string,\n\t\tFranchiseCode as string,\n\t\tChassisNumber as string,\n\t\tRegistrationNumber as string,\n\t\tDateEdited as date,\n\t\tTmagic as integer,\n\t\tVmagic as integer\n\t),\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:false,\n\tupsertable:false,\n\ttruncate:true,\n\tformat: 'table',\n\tpostSQLs:['update dbo.DMSWorkshopSales set clientid = 10000 where clientid is null'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\terrorHandlingOption: 'stopOnFirstError',\n\tmapColumn(\n\t\tSalesType = {S/Type},\n\t\tInvoiceNo = {Invoice No},\n\t\tWIPNo = {WIP No},\n\t\tRTSCode = {RTS code},\n\t\tHoursSold = Sold,\n\t\tHoursTaken = Taken,\n\t\tEfficiency = Eff,\n\t\tSaleValue = {Sale Value},\n\t\tRecoveryRate = {Rec Rate},\n\t\tTechnician = Mech,\n\t\tLA,\n\t\tLT,\n\t\tDealershipID = co,\n\t\tOperatorName = {Operator name},\n\t\tFranchiseCode = {Franchise code},\n\t\tChassisNumber = {Chassis number},\n\t\tRegistrationNumber = {Registration number.},\n\t\tDateEdited = {Date editted},\n\t\tTmagic,\n\t\tVmagic\n\t)) ~> SQLDMSWorkshopSales"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/PeterVardyWorkshopSalesCSV')]",
				"[concat(variables('factoryId'), '/datasets/SQLDMSWorkshopSales')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PeterVardyVehicleStock')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "PeterVardyVehicleStockCSV",
								"type": "DatasetReference"
							},
							"name": "PeterVardyVehicleStock"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "SQLVehicleStock",
								"type": "DatasetReference"
							},
							"name": "SQLVehicleStock"
						}
					],
					"transformations": [
						{
							"name": "TrimStockNumber"
						}
					],
					"script": "source(output(\n\t\tClientID as integer,\n\t\tDealershipID as string,\n\t\tType as string,\n\t\tRegistrationNo as string,\n\t\tStockNo as string,\n\t\tGroupDateInStock as date 'dd/MM/yyyy',\n\t\tDealershipDateInStock as date 'dd/MM/yyyy',\n\t\tStatus as string,\n\t\tNewOrUsed as string,\n\t\tChassis as string,\n\t\tFirstRegisteredDate as date 'dd/MM/yyyy',\n\t\tMake as string,\n\t\tModel as string,\n\t\tDerivative as string,\n\t\tTrim as string,\n\t\tEngineSize as string,\n\t\tBodystyle as string,\n\t\tMileage as integer,\n\t\tFuelType as string,\n\t\tTransmission as string,\n\t\tGenericColour as string,\n\t\tSpecificColour as string,\n\t\tDoors as integer,\n\t\tSIV as float,\n\t\tVat as string,\n\t\tSource as string,\n\t\tModelAnalysisCode as string,\n\t\tRetailPrice as float,\n\t\tPurchaser as string,\n\t\tSupplierName as string,\n\t\tPurchaseInvoiceDate as date 'dd/MM/yyyy',\n\t\tAvailableDate as date 'dd/MM/yyyy',\n\t\tProgressCode as string,\n\t\tRecon as float,\n\t\tTransportCosts as float,\n\t\tAdjustedSIV as float,\n\t\tAvailableDate2 as date 'dd/MM/yyyy',\n\t\tPurchaseInvoiceDate2 as date 'dd/MM/yyyy',\n\t\tReceivedDate as date 'dd/MM/yyyy',\n\t\tDateInGroup as date 'dd/MM/yyyy',\n\t\tPurchaseAccount as string,\n\t\tQuarantineStatus as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false,\n\tdateFormats: ['dd/MM/yyyy']) ~> PeterVardyVehicleStock\nPeterVardyVehicleStock derive(StockNo = trim(StockNo)) ~> TrimStockNumber\nTrimStockNumber sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tinput(\n\t\tClientID as integer,\n\t\tDealershipID as string,\n\t\tType as string,\n\t\tRegistrationNo as string,\n\t\tStockNo as string,\n\t\tGroupDateInStock as date,\n\t\tDealershipDateInStock as date,\n\t\tStatus as string,\n\t\tNewOrUsed as string,\n\t\tChassis as string,\n\t\tFirstRegisteredDate as date,\n\t\tMake as string,\n\t\tModel as string,\n\t\tDerivative as string,\n\t\tTrim as string,\n\t\tEngineSize as string,\n\t\tBodystyle as string,\n\t\tMileage as integer,\n\t\tFuelType as string,\n\t\tTransmission as string,\n\t\tGenericColour as string,\n\t\tSpecificColour as string,\n\t\tDoors as integer,\n\t\tSIV as double,\n\t\tVat as string,\n\t\tSource as string,\n\t\tModelAnalysisCode as string,\n\t\tRetailPrice as double,\n\t\tPurchaser as string,\n\t\tSupplierName as string,\n\t\tPurchaseInvoiceDate as date,\n\t\tAvailableDate as date,\n\t\tProgressCode as string,\n\t\tRecon as double,\n\t\tTransportCosts as double,\n\t\tAdjustedSIV as double,\n\t\tReceivedDate as date,\n\t\tDateInGroup as date,\n\t\tPurchaseAccount as string,\n\t\tQuarantineStatus as string\n\t),\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:false,\n\tupsertable:false,\n\ttruncate:true,\n\tformat: 'table',\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\terrorHandlingOption: 'stopOnFirstError',\n\tmapColumn(\n\t\tClientID,\n\t\tDealershipID,\n\t\tType,\n\t\tRegistrationNo,\n\t\tStockNo,\n\t\tGroupDateInStock,\n\t\tDealershipDateInStock,\n\t\tStatus,\n\t\tNewOrUsed,\n\t\tChassis,\n\t\tFirstRegisteredDate,\n\t\tMake,\n\t\tModel,\n\t\tDerivative,\n\t\tTrim,\n\t\tEngineSize,\n\t\tBodystyle,\n\t\tMileage,\n\t\tFuelType,\n\t\tTransmission,\n\t\tGenericColour,\n\t\tSpecificColour,\n\t\tDoors,\n\t\tSIV,\n\t\tVat,\n\t\tSource,\n\t\tModelAnalysisCode,\n\t\tRetailPrice,\n\t\tPurchaser,\n\t\tSupplierName,\n\t\tPurchaseInvoiceDate,\n\t\tAvailableDate,\n\t\tProgressCode,\n\t\tRecon,\n\t\tTransportCosts,\n\t\tAdjustedSIV,\n\t\tReceivedDate,\n\t\tDateInGroup,\n\t\tPurchaseAccount,\n\t\tQuarantineStatus\n\t)) ~> SQLVehicleStock"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/PeterVardyVehicleStockCSV')]",
				"[concat(variables('factoryId'), '/datasets/SQLVehicleStock')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PeterVardyVehicleWorkshopPrep')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "PeterVardyVSBI4",
								"type": "DatasetReference"
							},
							"name": "VSBI4csv"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "SQLVehicleWorkshopPrep",
								"type": "DatasetReference"
							},
							"name": "SQLVehicleWorkshopPrep"
						}
					],
					"transformations": [],
					"script": "source(output(\n\t\tco as string,\n\t\tVehicle as string,\n\t\tRegn as string,\n\t\tDesc as string,\n\t\tEstimated as float '###.##',\n\t\tActual as float '###.##',\n\t\t{Line Created} as date 'dd/MM/yyyy',\n\t\t{Date Pushed} as date 'dd/MM/yyyy',\n\t\t{Order date} as date 'dd/MM/yyyy',\n\t\t{WIP no} as string,\n\t\t{Option code} as string,\n\t\t{work desc} as string,\n\t\t{Progress code} as string,\n\t\t{A/c s status} as string,\n\t\t{Analysis code} as string,\n\t\t{Quarantine status} as string,\n\t\t{Log book} as string,\n\t\t{veh Inv date} as date 'dd/MM/yyyy',\n\t\t{Veh Delivery date} as date 'dd/MM/yyyy'\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false,\n\tdateFormats: ['dd/MM/yyyy'],\n\tpreferredIntegralType: 'integer',\n\tpreferredFractionalType: 'float') ~> VSBI4csv\nVSBI4csv sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tinput(\n\t\tClientID as integer,\n\t\tDealershipID as string,\n\t\tVehicleID as string,\n\t\tRegistrationNo as string,\n\t\tVehicleDescription as string,\n\t\tEstimatedCost as double,\n\t\tActualCost as double,\n\t\tLineCreatedDate as date,\n\t\tPushedDate as date,\n\t\tOrderDate as date,\n\t\tWIPNo as string,\n\t\tOptionCode as string,\n\t\tWorkDescription as string,\n\t\tProgressCode as string,\n\t\tAccountStatus as string,\n\t\tQuarantineStatus as string,\n\t\tLogBook as string,\n\t\tVehicleInvoiceDate as date,\n\t\tVehicleDeliveryDate as date\n\t),\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:false,\n\tupsertable:false,\n\ttruncate:true,\n\tformat: 'table',\n\tpostSQLs:['update dbo.vehicleworkshopprep set clientid = 10000 where clientid is null'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\terrorHandlingOption: 'stopOnFirstError',\n\tmapColumn(\n\t\tDealershipID = co,\n\t\tVehicleID = Vehicle,\n\t\tRegistrationNo = Regn,\n\t\tVehicleDescription = Desc,\n\t\tEstimatedCost = Estimated,\n\t\tActualCost = Actual,\n\t\tLineCreatedDate = {Line Created},\n\t\tPushedDate = {Date Pushed},\n\t\tOrderDate = {Order date},\n\t\tWIPNo = {WIP no},\n\t\tOptionCode = {Option code},\n\t\tWorkDescription = {work desc},\n\t\tProgressCode = {Progress code},\n\t\tAccountStatus = {A/c s status},\n\t\tQuarantineStatus = {Quarantine status},\n\t\tLogBook = {Log book},\n\t\tVehicleInvoiceDate = {veh Inv date},\n\t\tVehicleDeliveryDate = {Veh Delivery date}\n\t)) ~> SQLVehicleWorkshopPrep"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/PeterVardyVSBI4')]",
				"[concat(variables('factoryId'), '/datasets/SQLVehicleWorkshopPrep')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PeterVardyWebStockFeed')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "PeterVardyWebStockFeedCSV",
								"type": "DatasetReference"
							},
							"name": "PeterVardyWebStockFeed"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "SQLWebStockFeed",
								"type": "DatasetReference"
							},
							"name": "WebStockFeed"
						}
					],
					"transformations": [
						{
							"name": "SetUpsertCriteria"
						}
					],
					"script": "source(output(\n\t\tId as string,\n\t\tDealerCode as string,\n\t\tStockNumber as string,\n\t\tNewUsed as string,\n\t\tVehicleType as string,\n\t\tDemo as string,\n\t\tVatStatus as string,\n\t\tRegistrationNumber as string,\n\t\tChassisNumber as string,\n\t\tEngineNumber as string,\n\t\tCapId as string,\n\t\tFullCapCode as string,\n\t\tCapModelYear as string,\n\t\tMake as string,\n\t\tModel as string,\n\t\tDerivative as string,\n\t\tEngineSize as string,\n\t\tDoors as string,\n\t\tBodyStyle as string,\n\t\tFuelType as string,\n\t\tTransmissionType as string,\n\t\tPaintColour as string,\n\t\tSpecificPaintColour as string,\n\t\tPaintType as string,\n\t\tTrimColour as string,\n\t\tTrimType as string,\n\t\tOdometer as string,\n\t\tOdometerType as string,\n\t\tRegistrationDate as string,\n\t\tPreviousOwners as string,\n\t\tServiceHistory as string,\n\t\tApproved as string,\n\t\tWarrantyLevel as string,\n\t\tFullVehicleCheck as string,\n\t\tMultiPointInspection as string,\n\t\tBranchPurchaseDate as string,\n\t\tGroupPurchaseDate as string,\n\t\tStockStatus as string,\n\t\tVehicleStatus as string,\n\t\tAvailableDate as string,\n\t\tReadyToGo as string,\n\t\tHoStock as string,\n\t\tOriginalPurchasePrice as string,\n\t\tStockValue as string,\n\t\tReconDfa as string,\n\t\tDeliveryCost as string,\n\t\tVehicleSalePrice as string,\n\t\tDeliveryRetailSalePrice as string,\n\t\tReducedPrice as string,\n\t\tIdaAmount as string,\n\t\tTrackerNumber as string,\n\t\tStockType as string,\n\t\tWebCategory as string,\n\t\tHouseCharge as string,\n\t\tCo2 as string,\n\t\tStatusId as string,\n\t\tIsVisible as string,\n\t\tDateCreated as string,\n\t\tDateUpdated as string,\n\t\tLastUpdatedBy as string,\n\t\tSentToWeb as string,\n\t\tSeats as string,\n\t\tManufactureDate as string,\n\t\tTaxBand as string,\n\t\tAutotraderBanner as string,\n\t\tMpg as string,\n\t\tInsuranceGroup as string,\n\t\tPlusVat as string,\n\t\tFeatured as string,\n\t\tPOA as string,\n\t\tVerified as string,\n\t\tEnquiryCount as string,\n\t\tPriceLastUpdated as string,\n\t\tIsVirtual as string,\n\t\tRemoved as string,\n\t\tPriceVerified as string,\n\t\tTradePrice as string,\n\t\tDateRemoved as string,\n\t\tActualReg as string,\n\t\tRoadTaxSix as string,\n\t\tRoadTaxTwelve as string,\n\t\tCitNowVideo as string,\n\t\tVideoRemoved as string,\n\t\tCapManId as string,\n\t\tCapModId as string,\n\t\tShortModel as string,\n\t\tFinanceOption as string,\n\t\tComingSoon as string,\n\t\tQuarantine as string,\n\t\tFinanceDeposit as string,\n\t\tFinanceTerm as string,\n\t\tYouTubeVideo as string,\n\t\tNumberOfImages as string,\n\t\tImageURLS as string,\n\t\tToBeRemoved as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> PeterVardyWebStockFeed\nPeterVardyWebStockFeed alterRow(upsertIf(true())) ~> SetUpsertCriteria\nSetUpsertCriteria sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tinput(\n\t\tClientID as integer,\n\t\tDealership as string,\n\t\tFeedID as integer,\n\t\tVehicleID as integer,\n\t\tStockNumber as string,\n\t\tVehicleType as string,\n\t\tRegistrationNumber as string,\n\t\tChassisNumber as string,\n\t\tEngineNumber as string,\n\t\tColour as string,\n\t\tSpecificPaintColour as string,\n\t\tFuelType as string,\n\t\tTrimColour as string,\n\t\tTrimType as string,\n\t\tRegistrationDate as timestamp,\n\t\tYear as integer,\n\t\tMileage as integer,\n\t\tMileageType as string,\n\t\tBodyStyle as string,\n\t\tDoors as integer,\n\t\tMake as string,\n\t\tModel as string,\n\t\tDerivative as string,\n\t\tRange as string,\n\t\tEngineSize as integer,\n\t\tPrice as decimal(15,2),\n\t\tTransmission as string,\n\t\tPictureRefs as string,\n\t\tServiceHistory as string,\n\t\tPreviousOwners as integer,\n\t\tApproved as string,\n\t\tWarrantyLevel as string,\n\t\tFullVehicleCheck as string,\n\t\tMultiPointInspection as string,\n\t\tBranchPurchaseDate as timestamp,\n\t\tGroupPurchaseDate as timestamp,\n\t\tStockStatus as string,\n\t\tVehicleStatus as string,\n\t\tAvailableDate as timestamp,\n\t\tReadyToGo as string,\n\t\tHeadOfficeStock as string,\n\t\tPurchasePrice as decimal(18,2),\n\t\tStockValue as decimal(18,2),\n\t\tReconditioningDFA as decimal(18,2),\n\t\tDeliveryCost as decimal(18,2),\n\t\tRetailPrice as decimal(18,2),\n\t\tDeliveryRetailPrice as decimal(18,2),\n\t\tReducedPrice as decimal(18,2),\n\t\tIDAAmount as decimal(18,2),\n\t\tTrackerNumber as string,\n\t\tCategory as string,\n\t\tHouseCharge as string,\n\t\tCO2 as string,\n\t\tStatus as string,\n\t\tIsVisible as string,\n\t\tCreatedDate as timestamp,\n\t\tUpdatedDate as timestamp,\n\t\tLastUpdatedBy as string,\n\t\tSentToWeb as string,\n\t\tSeats as string,\n\t\tTaxBand as string,\n\t\tAutotraderBanner as string,\n\t\tMilesPerGallon as string,\n\t\tInsuranceGroup as string,\n\t\tRemoved as string,\n\t\tDateRemoved as timestamp,\n\t\tActualRegistrationNumber as string,\n\t\tQuarantine as string,\n\t\tYouTubeVideo as string,\n\t\tNumberOfImages as integer,\n\t\tNewOrUsed as string,\n\t\tDemo as string,\n\t\tVATStatus as string,\n\t\tTradePrice as decimal(15,2),\n\t\tCapID as string,\n\t\tFullCapCode as string,\n\t\tVideoURL as string,\n\t\tInsertedDate as date\n\t),\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:true,\n\tupsertable:true,\n\tkeys:['VehicleID'],\n\tformat: 'table',\n\tpostSQLs:['execute UpdatePeterVardyWebStockFeedAfterInsert'],\n\terrorHandlingOption: 'stopOnFirstError',\n\tmapColumn(\n\t\tFeedID = Id,\n\t\tDealership = DealerCode,\n\t\tStockNumber,\n\t\tNewOrUsed = NewUsed,\n\t\tVehicleType,\n\t\tDemo,\n\t\tVATStatus = VatStatus,\n\t\tRegistrationNumber,\n\t\tChassisNumber,\n\t\tEngineNumber,\n\t\tCapID = CapId,\n\t\tFullCapCode,\n\t\tYear = CapModelYear,\n\t\tMake,\n\t\tModel,\n\t\tDerivative,\n\t\tEngineSize,\n\t\tDoors,\n\t\tBodyStyle,\n\t\tFuelType,\n\t\tTransmission = TransmissionType,\n\t\tColour = PaintColour,\n\t\tSpecificPaintColour,\n\t\tTrimColour,\n\t\tTrimType,\n\t\tMileage = Odometer,\n\t\tMileageType = OdometerType,\n\t\tRegistrationDate,\n\t\tStockStatus,\n\t\tVehicleStatus,\n\t\tAvailableDate,\n\t\tCreatedDate = DateCreated,\n\t\tUpdatedDate = DateUpdated,\n\t\tVehicleID = Id,\n\t\tSentToWeb,\n\t\tDateRemoved,\n\t\tRemoved,\n\t\tRetailPrice = VehicleSalePrice\n\t)) ~> WebStockFeed"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/PeterVardyWebStockFeedCSV')]",
				"[concat(variables('factoryId'), '/datasets/SQLWebStockFeed')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Unleashed')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "UnleashedInvoicesJSON",
								"type": "DatasetReference"
							},
							"name": "UnleashedInvoicesJSON"
						},
						{
							"dataset": {
								"referenceName": "UnleashedProductsJSON",
								"type": "DatasetReference"
							},
							"name": "UnleashedProductsJSON"
						},
						{
							"dataset": {
								"referenceName": "UnleashedCustomersJSON",
								"type": "DatasetReference"
							},
							"name": "UnleashedCustomers"
						},
						{
							"dataset": {
								"referenceName": "UnleashedSalesOrdersJSON",
								"type": "DatasetReference"
							},
							"name": "UnleashedSalesOrders"
						},
						{
							"dataset": {
								"referenceName": "UnleashedProductGroupsJSON",
								"type": "DatasetReference"
							},
							"name": "UnleashedProductGroups"
						},
						{
							"dataset": {
								"referenceName": "UnleashedStockOnHandJSON",
								"type": "DatasetReference"
							},
							"name": "UnleashedStockOnHand"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "SQLUnleashedInvoices",
								"type": "DatasetReference"
							},
							"name": "SQLUnleashedInvoices"
						},
						{
							"dataset": {
								"referenceName": "SQLUnleashedInvoiceItems",
								"type": "DatasetReference"
							},
							"name": "SQLUnleashedInvoiceItems"
						},
						{
							"dataset": {
								"referenceName": "SQLUnleashedProducts",
								"type": "DatasetReference"
							},
							"name": "SQLUnleashedProducts"
						},
						{
							"dataset": {
								"referenceName": "SQLUnleashedCustomers",
								"type": "DatasetReference"
							},
							"name": "SQLUnleashedCustomers"
						},
						{
							"dataset": {
								"referenceName": "SQLUnleashedSalesOrders",
								"type": "DatasetReference"
							},
							"name": "SQLUnleashedSalesOrders"
						},
						{
							"dataset": {
								"referenceName": "SQLUnleashedSalesOrderLines",
								"type": "DatasetReference"
							},
							"name": "SQLSalesOrderLines"
						},
						{
							"dataset": {
								"referenceName": "SQLUnleashedProductGroups",
								"type": "DatasetReference"
							},
							"name": "SQLUnleashedProductGroups"
						},
						{
							"dataset": {
								"referenceName": "SQLUnleashedStock",
								"type": "DatasetReference"
							},
							"name": "SQLUnleashedStock"
						}
					],
					"transformations": [
						{
							"name": "Invoices"
						},
						{
							"name": "InvoiceLines"
						},
						{
							"name": "Products"
						},
						{
							"name": "Customers"
						},
						{
							"name": "SalesOrders"
						},
						{
							"name": "SalesOrderLines"
						},
						{
							"name": "ProductGroups"
						},
						{
							"name": "StockOnHand"
						}
					],
					"script": "source(output(\n\t\tPagination as (NumberOfItems as string, PageSize as string, PageNumber as string, NumberOfPages as string),\n\t\tItems as (InvoiceNumber as string, OrderNumber as string, QuoteNumber as string, InvoiceDate as string, DueDate as string, InvoiceStatus as string, Customer as (CustomerCode as string, CustomerName as string, CurrencyId as string, Guid as string, LastModifiedOn as string), Comments as string, PostalAddress as (AddressType as string, AddressName as string, StreetAddress as string, StreetAddress2 as string, Suburb as string, City as string, Region as string, Country as string, PostalCode as string, IsDefault as boolean, DeliveryInstruction as string), DeliveryAddress as (AddressType as string, AddressName as string, StreetAddress as string, StreetAddress2 as string, Suburb as string, City as string, Region as string, Country as string, PostalCode as string, IsDefault as boolean, DeliveryInstruction as string), DeliveryInstruction as string, SubTotal as double, TaxTotal as double, Total as double, BCSubTotal as double, BCTaxTotal as double, BCTotal as double, CreatedBy as string, PaymentTerm as string, InvoiceLines as (LineNumber as string, LineType as string, Product as (Guid as string, ProductCode as string, ProductDescription as string), OrderQuantity as double, InvoiceQuantity as double, UnitPrice as double, DiscountRate as double, LineTotal as double, Comments as string, TaxRate as double, LineTax as double, BCUnitPrice as double, SerialNumbers as string, BatchNumbers as string, Guid as string, LastModifiedOn as string)[], Guid as string, LastModifiedOn as string)[]\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false,\n\tdocumentForm: 'documentPerLine',\n\twildcardPaths:['Invoice*.json']) ~> UnleashedInvoicesJSON\nsource(output(\n\t\tPagination as (NumberOfItems as string, PageSize as string, PageNumber as string, NumberOfPages as string),\n\t\tItems as (ProductCode as string, ProductDescription as string, Barcode as string, PackSize as string, Width as string, Height as string, Depth as string, Weight as double, MinStockAlertLevel as string, MaxStockAlertLevel as string, ReOrderPoint as string, UnitOfMeasure as string, NeverDiminishing as boolean, LastCost as double, DefaultPurchasePrice as string, DefaultSellPrice as string, CustomerSellPrice as string, AverageLandPrice as double, Obsolete as boolean, Notes as string, Images as string, ImageUrl as string, SellPriceTier1 as (Name as string, Value as string), SellPriceTier2 as (Name as string, Value as string), SellPriceTier3 as (Name as string, Value as string), SellPriceTier4 as (Name as string, Value as string), SellPriceTier5 as (Name as string, Value as string), SellPriceTier6 as (Name as string, Value as string), SellPriceTier7 as (Name as string, Value as string), SellPriceTier8 as (Name as string, Value as string), SellPriceTier9 as (Name as string, Value as string), SellPriceTier10 as (Name as string, Value as string), XeroTaxCode as string, XeroTaxRate as string, TaxablePurchase as boolean, TaxableSales as boolean, XeroSalesTaxCode as string, XeroSalesTaxRate as string, IsComponent as boolean, IsAssembledProduct as boolean, ProductGroup as (GroupName as string, Guid as string, LastModifiedOn as string), XeroSalesAccount as string, XeroCostOfGoodsAccount as string, PurchaseAccount as string, BinLocation as string, Supplier as string, AttributeSet as string, SourceId as string, SourceVariantParentId as string, IsSerialized as boolean, IsBatchTracked as boolean, IsSellable as boolean, MinimumSellPrice as string, MinimumSaleQuantity as string, MinimumOrderQuantity as string, CreatedBy as string, CreatedOn as string, LastModifiedBy as string, CommerceCode as string, CustomsDescription as string, SupplementaryClassificationAbbreviation as string, ICCCountryCode as string, ICCCountryName as string, Guid as string, LastModifiedOn as string)[]\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false,\n\tdocumentForm: 'documentPerLine',\n\twildcardPaths:['Products*.json']) ~> UnleashedProductsJSON\nsource(output(\n\t\tPagination as (NumberOfItems as string, PageSize as string, PageNumber as string, NumberOfPages as string),\n\t\tItems as (Addresses as (AddressType as string, AddressName as string, StreetAddress as string, StreetAddress2 as string, Suburb as string, City as string, Region as string, Country as string, PostalCode as string, IsDefault as boolean, DeliveryInstruction as string)[], TaxCode as string, TaxRate as string, CustomerCode as string, CustomerName as string, GSTVATNumber as string, BankName as string, BankBranch as string, BankAccount as string, Website as string, PhoneNumber as string, FaxNumber as string, MobileNumber as string, DDINumber as string, TollFreeNumber as string, Email as string, EmailCC as string, Currency as (CurrencyCode as string, Description as string, Guid as string, LastModifiedOn as string), Notes as string, Taxable as boolean, XeroContactId as string, SalesPerson as string, DiscountRate as double, PrintPackingSlipInsteadOfInvoice as boolean, PrintInvoice as boolean, StopCredit as boolean, Obsolete as boolean, XeroSalesAccount as string, XeroCostOfGoodsAccount as string, SellPriceTier as string, SellPriceTierReference as string, CustomerType as string, PaymentTerm as string, ContactFirstName as string, ContactLastName as string, SourceId as string, CreatedBy as string, CreatedOn as string, LastModifiedBy as string, Guid as string, LastModifiedOn as string)[]\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false,\n\tdocumentForm: 'documentPerLine',\n\twildcardPaths:['Customer*.json']) ~> UnleashedCustomers\nsource(output(\n\t\tPagination as (NumberOfItems as string, PageSize as string, PageNumber as string, NumberOfPages as string),\n\t\tItems as (SalesOrderLines as (LineNumber as string, LineType as string, Product as (Guid as string, ProductCode as string, ProductDescription as string), DueDate as string, OrderQuantity as double, UnitPrice as double, DiscountRate as double, LineTotal as double, Volume as string, Weight as double, Comments as string, AverageLandedPriceAtTimeOfSale as double, TaxRate as double, LineTax as double, XeroTaxCode as string, BCUnitPrice as double, BCLineTotal as double, BCLineTax as double, LineTaxCode as string, XeroSalesAccount as string, SerialNumbers as string, BatchNumbers as string, Guid as string, LastModifiedOn as string)[], OrderNumber as string, OrderDate as string, RequiredDate as string, CompletedDate as string, OrderStatus as string, Customer as (CustomerCode as string, CustomerName as string, CurrencyId as string, Guid as string, LastModifiedOn as string), CustomerRef as string, Comments as string, Warehouse as (WarehouseCode as string, WarehouseName as string, IsDefault as boolean, StreetNo as string, AddressLine1 as string, AddressLine2 as string, Suburb as string, City as string, Region as string, Country as string, PostCode as string, PhoneNumber as string, FaxNumber as string, MobileNumber as string, DDINumber as string, ContactName as string, Obsolete as boolean, Guid as string, LastModifiedOn as string), ReceivedDate as string, DeliveryInstruction as string, DeliveryName as string, DeliveryStreetAddress as string, DeliveryStreetAddress2 as string, DeliverySuburb as string, DeliveryCity as string, DeliveryRegion as string, DeliveryCountry as string, DeliveryPostCode as string, Currency as (CurrencyCode as string, Description as string, Guid as string, LastModifiedOn as string), ExchangeRate as double, DiscountRate as double, Tax as (TaxCode as string, Description as string, TaxRate as double, CanApplyToExpenses as boolean, CanApplyToRevenue as boolean, Obsolete as boolean, Guid as string, LastModifiedOn as string), TaxRate as double, XeroTaxCode as string, SubTotal as double, TaxTotal as double, Total as double, TotalVolume as double, TotalWeight as double, BCSubTotal as double, BCTaxTotal as double, BCTotal as double, PaymentDueDate as string, AllocateProduct as boolean, SalesOrderGroup as string, DeliveryMethod as string, SalesPerson as (FullName as string, Email as string, Obsolete as boolean, Guid as string, LastModifiedOn as string), SendAccountingJournalOnly as boolean, SourceId as string, CreatedBy as string, CreatedOn as string, LastModifiedBy as string, Guid as string, LastModifiedOn as string)[]\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false,\n\tdocumentForm: 'documentPerLine',\n\twildcardPaths:['SalesOrders*.json']) ~> UnleashedSalesOrders\nsource(output(\n\t\tItems as (GroupName as string, Guid as string, LastModifiedOn as string)[]\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false,\n\tdocumentForm: 'documentPerLine') ~> UnleashedProductGroups\nsource(output(\n\t\tPagination as (NumberOfItems as string, PageSize as string, PageNumber as string, NumberOfPages as string),\n\t\tItems as (ProductCode as string, ProductDescription as string, ProductGuid as string, ProductSourceId as string, ProductGroupName as string, WarehouseId as string, Warehouse as string, WarehouseCode as string, DaysSinceLastSale as string, OnPurchase as double, AllocatedQty as double, AvailableQty as double, QtyOnHand as double, AvgCost as double, TotalCost as double, Guid as string, LastModifiedOn as string)[]\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false,\n\tdocumentForm: 'documentPerLine',\n\twildcardPaths:['StockOnHand*.json']) ~> UnleashedStockOnHand\nUnleashedInvoicesJSON foldDown(unroll(Items),\n\tmapColumn(\n\t\tItems\n\t),\n\tskipDuplicateMapInputs: false,\n\tskipDuplicateMapOutputs: false) ~> Invoices\nUnleashedInvoicesJSON foldDown(unroll(Items.InvoiceLines),\n\tmapColumn(\n\t\tPagination,\n\t\tInvoiceNumber = Items.InvoiceNumber,\n\t\tOrderNumber = Items.OrderNumber,\n\t\tQuoteNumber = Items.QuoteNumber,\n\t\tInvoiceDate = Items.InvoiceDate,\n\t\tDueDate = Items.DueDate,\n\t\tInvoiceStatus = Items.InvoiceStatus,\n\t\tCustomer = Items.Customer,\n\t\tComments = Items.Comments,\n\t\tPostalAddress = Items.PostalAddress,\n\t\tDeliveryAddress = Items.DeliveryAddress,\n\t\tDeliveryInstruction = Items.DeliveryInstruction,\n\t\tSubTotal = Items.SubTotal,\n\t\tTaxTotal = Items.TaxTotal,\n\t\tTotal = Items.Total,\n\t\tBCSubTotal = Items.BCSubTotal,\n\t\tBCTaxTotal = Items.BCTaxTotal,\n\t\tBCTotal = Items.BCTotal,\n\t\tCreatedBy = Items.CreatedBy,\n\t\tPaymentTerm = Items.PaymentTerm,\n\t\tLineNumber = Items.InvoiceLines.LineNumber,\n\t\tLineType = Items.InvoiceLines.LineType,\n\t\tProduct = Items.InvoiceLines.Product,\n\t\tOrderQuantity = Items.InvoiceLines.OrderQuantity,\n\t\tInvoiceQuantity = Items.InvoiceLines.InvoiceQuantity,\n\t\tUnitPrice = Items.InvoiceLines.UnitPrice,\n\t\tDiscountRate = Items.InvoiceLines.DiscountRate,\n\t\tLineTotal = Items.InvoiceLines.LineTotal,\n\t\tTaxRate = Items.InvoiceLines.TaxRate,\n\t\tLineTax = Items.InvoiceLines.LineTax,\n\t\tBCUnitPrice = Items.InvoiceLines.BCUnitPrice,\n\t\tSerialNumbers = Items.InvoiceLines.SerialNumbers,\n\t\tBatchNumbers = Items.InvoiceLines.BatchNumbers,\n\t\tGuid = Items.Guid,\n\t\tLastModifiedOn = Items.LastModifiedOn\n\t),\n\tskipDuplicateMapInputs: false,\n\tskipDuplicateMapOutputs: false) ~> InvoiceLines\nUnleashedProductsJSON foldDown(unroll(Items),\n\tmapColumn(\n\t\tItems\n\t),\n\tskipDuplicateMapInputs: false,\n\tskipDuplicateMapOutputs: false) ~> Products\nUnleashedCustomers foldDown(unroll(Items),\n\tmapColumn(\n\t\tItems\n\t),\n\tskipDuplicateMapInputs: false,\n\tskipDuplicateMapOutputs: false) ~> Customers\nUnleashedSalesOrders foldDown(unroll(Items),\n\tmapColumn(\n\t\tItems\n\t),\n\tskipDuplicateMapInputs: false,\n\tskipDuplicateMapOutputs: false) ~> SalesOrders\nUnleashedSalesOrders foldDown(unroll(Items),\n\tmapColumn(\n\t\tPagination,\n\t\tItems\n\t),\n\tskipDuplicateMapInputs: false,\n\tskipDuplicateMapOutputs: false) ~> SalesOrderLines\nUnleashedProductGroups foldDown(unroll(Items),\n\tmapColumn(\n\t\tItems\n\t),\n\tskipDuplicateMapInputs: false,\n\tskipDuplicateMapOutputs: false) ~> ProductGroups\nUnleashedStockOnHand foldDown(unroll(Items),\n\tmapColumn(\n\t\tItems\n\t),\n\tskipDuplicateMapInputs: false,\n\tskipDuplicateMapOutputs: false) ~> StockOnHand\nInvoices sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tinput(\n\t\tUniqueID as integer,\n\t\t{Client ID} as integer,\n\t\t{Invoice Number} as string,\n\t\t{Order Number} as string,\n\t\t{Invoice Date} as string,\n\t\t{Customer Code} as string,\n\t\t{Currency ID} as integer\n\t),\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:false,\n\tupsertable:false,\n\tformat: 'table',\n\tpreSQLs:['truncate table unleashedinvoices_merge;\\ntruncate table unleashedinvoices;'],\n\tpostSQLs:['insert into unleashedinvoices ([Client ID],[Invoice Number],[Order Number],[Invoice Date],[Customer Code],[Currency ID]) \\nselect 2500000, [Invoice Number], [Order Number], DATEADD(day, (cast(substring([invoice date],7,13) as bigint)/86400000), \\'1970-01-01\\') as [Invoice Date], [Customer Code],[Currency ID] from unleashedinvoices_merge;'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\terrorHandlingOption: 'stopOnFirstError',\n\tmapColumn(\n\t\t{Invoice Number} = Items.InvoiceNumber,\n\t\t{Order Number} = Items.OrderNumber,\n\t\t{Invoice Date} = Items.InvoiceDate,\n\t\t{Customer Code} = Items.Customer.CustomerCode,\n\t\t{Currency ID} = Items.Customer.CurrencyId\n\t)) ~> SQLUnleashedInvoices\nInvoiceLines sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tinput(\n\t\tUniqueID as integer,\n\t\t{Client ID} as integer,\n\t\t{Line Number} as integer,\n\t\t{Invoice Number} as string,\n\t\t{Product Code} as string,\n\t\t{Order Quantity} as decimal(18,4),\n\t\t{Invoice Quantity} as decimal(18,4),\n\t\t{Unit Price} as decimal(18,4),\n\t\t{Discount Rate} as decimal(18,4),\n\t\t{Line Total} as decimal(18,4),\n\t\t{Tax Rate} as decimal(18,4),\n\t\t{Line Tax} as decimal(18,4),\n\t\tBCUnitPrice as decimal(18,4)\n\t),\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:false,\n\tupsertable:false,\n\tformat: 'table',\n\tpreSQLs:['truncate table unleashedinvoiceitems;'],\n\tpostSQLs:['update unleashedinvoiceitems set [client id] = 2500000;'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\terrorHandlingOption: 'stopOnFirstError',\n\tmapColumn(\n\t\t{Line Number} = LineNumber,\n\t\t{Invoice Number} = InvoiceNumber,\n\t\t{Product Code} = Product.ProductCode,\n\t\t{Order Quantity} = OrderQuantity,\n\t\t{Invoice Quantity} = InvoiceQuantity,\n\t\t{Unit Price} = UnitPrice,\n\t\t{Discount Rate} = DiscountRate,\n\t\t{Line Total} = LineTotal,\n\t\t{Tax Rate} = TaxRate,\n\t\t{Line Tax} = LineTax,\n\t\tBCUnitPrice\n\t)) ~> SQLUnleashedInvoiceItems\nProducts sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tinput(\n\t\tUniqueID as integer,\n\t\t{Client ID} as integer,\n\t\t{Product Code} as string,\n\t\t{Product Description} as string,\n\t\t{Product Group} as string,\n\t\t{Country Name} as string\n\t),\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:false,\n\tupsertable:false,\n\tformat: 'table',\n\tpreSQLs:['truncate table unleashedproducts;'],\n\tpostSQLs:['update unleashedproducts set [client ID] = 2500000'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\terrorHandlingOption: 'stopOnFirstError',\n\tmapColumn(\n\t\t{Product Code} = Items.ProductCode,\n\t\t{Product Description} = Items.ProductDescription,\n\t\t{Product Group} = Items.ProductGroup.GroupName,\n\t\t{Country Name} = Items.ICCCountryName\n\t)) ~> SQLUnleashedProducts\nCustomers sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tinput(\n\t\tUniqueID as integer,\n\t\t{Client ID} as integer,\n\t\t{Customer Code} as string,\n\t\tName as string,\n\t\tCountry as string,\n\t\tPostcode as string\n\t),\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:false,\n\tupsertable:false,\n\tformat: 'table',\n\tpreSQLs:['truncate table UnleashedCustomers;'],\n\tpostSQLs:['update UnleashedCustomers set [Client ID] = 2500000;'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\terrorHandlingOption: 'stopOnFirstError',\n\tmapColumn(\n\t\t{Customer Code} = Items.CustomerCode,\n\t\tName = Items.CustomerName,\n\t\tCountry = Items.Addresses[1].Country,\n\t\tPostcode = Items.Addresses[1].PostalCode\n\t)) ~> SQLUnleashedCustomers\nSalesOrders sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tinput(\n\t\tUniqueID as integer,\n\t\t{Client ID} as integer,\n\t\t{Order Number} as string,\n\t\t{Order Date} as string,\n\t\t{Required Date} as string,\n\t\t{Completed Date} as string,\n\t\t{Order Status} as string,\n\t\t{Customer Code} as string,\n\t\t{Currency ID} as string,\n\t\t{Sales Person Name} as string,\n\t\t{Sales Person GUID} as string\n\t),\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:false,\n\tupsertable:false,\n\tformat: 'table',\n\tpreSQLs:['truncate table unleashedsalesorders_merge;\\ntruncate table unleashedsalesorders;'],\n\tpostSQLs:['update unleashedsalesorders_merge set [Client ID] = 2500000;\\n\\ninsert into unleashedsalesorders ([Client ID],[Order Number],[Order Date],[Required Date],[Completed Date],[Order Status],[Customer Code],[Currency ID],[Sales Person Name],[Sales Person GUID]) \\nselect 2500000, [Order Number], \\nDATEADD(day, (cast(substring([Order date],7,13) as bigint)/86400000), \\'1970-01-01\\') as [Order Date], \\nDATEADD(day, (cast(substring([Required date],7,13) as bigint)/86400000), \\'1970-01-01\\') as [Required Date], \\nDATEADD(day, (cast(substring([Completed date],7,13) as bigint)/86400000), \\'1970-01-01\\') as [Completed Date], \\n[Order Status], [Customer Code], [Currency ID], [Sales Person Name], [Sales Person GUID] from unleashedsalesorders_merge;\\n'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\terrorHandlingOption: 'stopOnFirstError',\n\tmapColumn(\n\t\t{Order Number} = Items.OrderNumber,\n\t\t{Order Date} = Items.OrderDate,\n\t\t{Required Date} = Items.RequiredDate,\n\t\t{Completed Date} = Items.CompletedDate,\n\t\t{Order Status} = Items.OrderStatus,\n\t\t{Customer Code} = Items.Customer.CustomerCode,\n\t\t{Currency ID} = Items.Customer.CurrencyId,\n\t\t{Sales Person Name} = Items.SalesPerson.FullName,\n\t\t{Sales Person GUID} = Items.SalesPerson.Guid\n\t)) ~> SQLUnleashedSalesOrders\nSalesOrderLines sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tinput(\n\t\tUniqueID as integer,\n\t\t{Client ID} as integer,\n\t\t{Line Number} as integer,\n\t\t{Product Code} as string,\n\t\t{Order Quantity} as decimal(18,4),\n\t\t{Unit Price} as decimal(18,4),\n\t\t{Discount Rate} as decimal(18,4),\n\t\t{Line Total} as decimal(18,4),\n\t\t{Average Cost} as decimal(18,4),\n\t\t{Tax Rate} as decimal(18,4),\n\t\t{Line Tax} as decimal(18,4),\n\t\t{BC Unit Price} as decimal(18,4),\n\t\tGUID as decimal(18,4),\n\t\t{Order Number} as string\n\t),\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:false,\n\tupsertable:false,\n\tformat: 'table',\n\tpreSQLs:['truncate table UnleashedSalesOrderLines;'],\n\tpostSQLs:['update UnleashedSalesOrderLines set [client ID] = 2500000'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\terrorHandlingOption: 'stopOnFirstError',\n\tmapColumn(\n\t\t{Line Number} = Items.SalesOrderLines[1].LineNumber,\n\t\t{Product Code} = Items.SalesOrderLines[1].Product.ProductCode,\n\t\t{Order Quantity} = Items.SalesOrderLines[1].OrderQuantity,\n\t\t{Unit Price} = Items.SalesOrderLines[1].UnitPrice,\n\t\t{Discount Rate} = Items.SalesOrderLines[1].DiscountRate,\n\t\t{Line Total} = Items.SalesOrderLines[1].LineTotal,\n\t\t{Average Cost} = Items.SalesOrderLines[1].AverageLandedPriceAtTimeOfSale,\n\t\t{Tax Rate} = Items.SalesOrderLines[1].TaxRate,\n\t\t{Line Tax} = Items.SalesOrderLines[1].LineTax,\n\t\t{BC Unit Price} = Items.SalesOrderLines[1].BCUnitPrice,\n\t\tGUID = Items.SalesOrderLines[1].Guid,\n\t\t{Order Number} = Items.OrderNumber\n\t)) ~> SQLSalesOrderLines\nProductGroups sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tinput(\n\t\tUniqueID as integer,\n\t\t{Client ID} as integer,\n\t\t{Group Name} as string,\n\t\tGUID as string\n\t),\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:false,\n\tupsertable:false,\n\tformat: 'table',\n\tpreSQLs:['truncate table unleashedproductgroups;'],\n\tpostSQLs:['update unleashedproductgroups set [client id] = 2500000;'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\terrorHandlingOption: 'stopOnFirstError',\n\tmapColumn(\n\t\t{Group Name} = Items.GroupName,\n\t\tGUID = Items.Guid\n\t)) ~> SQLUnleashedProductGroups\nStockOnHand sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tinput(\n\t\tUniqueID as integer,\n\t\t{Client ID} as integer,\n\t\t{Product Code} as string,\n\t\t{Product Description} as string,\n\t\t{Product Group Name} as string,\n\t\t{Days Since Last Sale} as integer,\n\t\t{On Purchase} as decimal(18,4),\n\t\t{Allocated Quantity} as decimal(18,4),\n\t\t{Available Quantity} as decimal(18,4),\n\t\t{Quantity on Hand} as decimal(18,4),\n\t\t{Average Cost} as decimal(18,4),\n\t\t{Total Cost} as decimal(18,4),\n\t\tGUID as string\n\t),\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:false,\n\tupsertable:false,\n\tformat: 'table',\n\tpreSQLs:['truncate table unleashedstock'],\n\tpostSQLs:['update unleashedstock set [client id] = 2500000'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\terrorHandlingOption: 'stopOnFirstError',\n\tmapColumn(\n\t\t{Product Code} = Items.ProductCode,\n\t\t{Product Description} = Items.ProductDescription,\n\t\t{Product Group Name} = Items.ProductGroupName,\n\t\t{Days Since Last Sale} = Items.DaysSinceLastSale,\n\t\t{On Purchase} = Items.OnPurchase,\n\t\t{Allocated Quantity} = Items.AllocatedQty,\n\t\t{Available Quantity} = Items.AvailableQty,\n\t\t{Quantity on Hand} = Items.QtyOnHand,\n\t\t{Average Cost} = Items.AvgCost,\n\t\t{Total Cost} = Items.TotalCost,\n\t\tGUID = Items.Guid\n\t)) ~> SQLUnleashedStock"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/UnleashedInvoicesJSON')]",
				"[concat(variables('factoryId'), '/datasets/UnleashedProductsJSON')]",
				"[concat(variables('factoryId'), '/datasets/UnleashedCustomersJSON')]",
				"[concat(variables('factoryId'), '/datasets/UnleashedSalesOrdersJSON')]",
				"[concat(variables('factoryId'), '/datasets/UnleashedProductGroupsJSON')]",
				"[concat(variables('factoryId'), '/datasets/UnleashedStockOnHandJSON')]",
				"[concat(variables('factoryId'), '/datasets/SQLUnleashedInvoices')]",
				"[concat(variables('factoryId'), '/datasets/SQLUnleashedInvoiceItems')]",
				"[concat(variables('factoryId'), '/datasets/SQLUnleashedProducts')]",
				"[concat(variables('factoryId'), '/datasets/SQLUnleashedCustomers')]",
				"[concat(variables('factoryId'), '/datasets/SQLUnleashedSalesOrders')]",
				"[concat(variables('factoryId'), '/datasets/SQLUnleashedSalesOrderLines')]",
				"[concat(variables('factoryId'), '/datasets/SQLUnleashedProductGroups')]",
				"[concat(variables('factoryId'), '/datasets/SQLUnleashedStock')]"
			]
		}
	]
}